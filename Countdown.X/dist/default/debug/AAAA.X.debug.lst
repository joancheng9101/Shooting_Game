

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 11 02:41:13 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 18/08/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   000B1A                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _status
    64   000B1A  0001               	dw	1
    65                           
    66                           ;initializer for _counter
    67   000B1C  0032               	dw	50
    68                           
    69                           ;initializer for _buffer
    70   000B1E  0015               	dw	21
    71   000000                     _PIE1bits	set	3997
    72   000000                     _PIR1bits	set	3998
    73   000000                     _PORTAbits	set	3968
    74   000000                     _PORTC	set	3970
    75   000000                     _LATBbits	set	3978
    76   000000                     _INTCONbits	set	4082
    77   000000                     _IPR1bits	set	3999
    78   000000                     _ADCON1	set	4033
    79   000000                     _TRISAbits	set	3986
    80   000000                     _LATAbits	set	3977
    81   000000                     _PORTD	set	3971
    82   000000                     _T2CON	set	4042
    83   000000                     _RCONbits	set	4048
    84   000000                     _TRISD	set	3989
    85   000000                     _TRISC	set	3988
    86   000000                     _TRISBbits	set	3987
    87   000000                     _OSCCONbits	set	4051
    88   000000                     _PR2	set	4043
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   000AE4                     __pcinit:
    94                           	callstack 0
    95   000AE4                     start_initialization:
    96                           	callstack 0
    97   000AE4                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (6 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   000AE4  0E1A               	movlw	low __pidataCOMRAM
   103   000AE6  6EF6               	movwf	tblptrl,c
   104   000AE8  0E0B               	movlw	high __pidataCOMRAM
   105   000AEA  6EF7               	movwf	tblptrh,c
   106   000AEC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   000AEE  6EF8               	movwf	tblptru,c
   108   000AF0  EE00  F00D         	lfsr	0,__pdataCOMRAM
   109   000AF4  EE10 F006          	lfsr	1,6
   110   000AF8                     copy_data0:
   111   000AF8  0009               	tblrd		*+
   112   000AFA  CFF5 FFEE          	movff	tablat,postinc0
   113   000AFE  50E5               	movf	postdec1,w,c
   114   000B00  50E1               	movf	fsr1l,w,c
   115   000B02  E1FA               	bnz	copy_data0
   116                           
   117                           ; Clear objects allocated to COMRAM (4 bytes)
   118   000B04  6A16               	clrf	(__pbssCOMRAM+3)& (0+255),c
   119   000B06  6A15               	clrf	(__pbssCOMRAM+2)& (0+255),c
   120   000B08  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
   121   000B0A  6A13               	clrf	__pbssCOMRAM& (0+255),c
   122   000B0C                     end_of_initialization:
   123                           	callstack 0
   124   000B0C                     __end_of__initialization:
   125                           	callstack 0
   126   000B0C  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127   000B0E  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128   000B10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   129   000B12  6EF8               	movwf	tblptru,c
   130   000B14  0100               	movlb	0
   131   000B16  EF56  F005         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMRAM
   134   000013                     __pbssCOMRAM:
   135                           	callstack 0
   136   000013                     _statusSetting:
   137                           	callstack 0
   138   000013                     	ds	2
   139   000015                     _start:
   140                           	callstack 0
   141   000015                     	ds	2
   142                           
   143                           	psect	dataCOMRAM
   144   00000D                     __pdataCOMRAM:
   145                           	callstack 0
   146   00000D                     _status:
   147                           	callstack 0
   148   00000D                     	ds	2
   149   00000F                     _counter:
   150                           	callstack 0
   151   00000F                     	ds	2
   152   000011                     _buffer:
   153                           	callstack 0
   154   000011                     	ds	2
   155                           
   156                           	psect	cstackCOMRAM
   157   000001                     __pcstackCOMRAM:
   158                           	callstack 0
   159   000001                     ?_initializeTimer:
   160                           	callstack 0
   161   000001                     ?___awdiv:
   162                           	callstack 0
   163   000001                     ?___awmod:
   164                           	callstack 0
   165   000001                     initializeTimer@a:
   166                           	callstack 0
   167   000001                     ___awdiv@dividend:
   168                           	callstack 0
   169   000001                     ___awmod@dividend:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x0
   173   000001                     	ds	2
   174   000003                     ??_initializeTimer:
   175   000003                     ___awdiv@divisor:
   176                           	callstack 0
   177   000003                     ___awmod@divisor:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0x2
   181   000003                     	ds	2
   182   000005                     ___awdiv@counter:
   183                           	callstack 0
   184   000005                     ___awmod@counter:
   185                           	callstack 0
   186   000005                     initializeTimer@b:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x4
   190   000005                     	ds	1
   191   000006                     ___awdiv@sign:
   192                           	callstack 0
   193   000006                     ___awmod@sign:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x5
   197   000006                     	ds	1
   198   000007                     ___awdiv@quotient:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x6
   202   000007                     	ds	2
   203   000009                     ?_convertion:
   204                           	callstack 0
   205   000009                     convertion@degit:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x8
   209   000009                     	ds	2
   210   00000B                     ??_convertion:
   211                           
   212                           ; 1 bytes @ 0xA
   213   00000B                     	ds	2
   214   00000D                     
   215                           ; 1 bytes @ 0xC
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 68 in file "demo1.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   235 ;;      Params:         0       0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called: 2
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           	psect	text0
   249   000AAC                     __ptext0:
   250                           	callstack 0
   251   000AAC                     _main:
   252                           	callstack 29
   253   000AAC                     
   254                           ;demo1.c: 70:     PIE1bits.TMR2IE = 1;
   255   000AAC  0E0F               	movlw	15
   256   000AAE  6EC1               	movwf	193,c	;volatile
   257   000AB0                     
   258                           ;demo1.c: 71:     T2CON = 0b11111111;
   259   000AB0  8092               	bsf	146,0,c	;volatile
   260   000AB2                     
   261                           ;demo1.c: 72:     PR2 = 244;
   262   000AB2  9292               	bcf	146,1,c	;volatile
   263   000AB4                     
   264                           ;demo1.c: 73: 
   265   000AB4  9080               	bcf	128,0,c	;volatile
   266   000AB6                     
   267                           ;demo1.c: 74:     OSCCONbits.IRCF = 0b010;
   268   000AB6  9289               	bcf	137,1,c	;volatile
   269   000AB8                     
   270                           ;demo1.c: 75: 
   271   000AB8  9893               	bcf	147,4,c	;volatile
   272   000ABA                     
   273                           ;demo1.c: 76:     while(1){
   274   000ABA  988A               	bcf	138,4,c	;volatile
   275                           
   276                           ;demo1.c: 77: 
   277   000ABC  0E00               	movlw	0
   278   000ABE  6E94               	movwf	148,c	;volatile
   279                           
   280                           ;demo1.c: 78:     }
   281   000AC0  0E00               	movlw	0
   282   000AC2  6E95               	movwf	149,c	;volatile
   283   000AC4                     
   284                           ;demo1.c: 79:     return;
   285   000AC4  8ED0               	bsf	208,7,c	;volatile
   286   000AC6                     
   287                           ;demo1.c: 80: }
   288   000AC6  8EF2               	bsf	242,7,c	;volatile
   289   000AC8                     
   290                           ;demo1.c: 81: 
   291   000AC8  929E               	bcf	158,1,c	;volatile
   292   000ACA                     
   293                           ;demo1.c: 82: int convertion (int degit) {
   294   000ACA  829F               	bsf	159,1,c	;volatile
   295   000ACC                     
   296                           ;demo1.c: 83:     switch(degit) {
   297   000ACC  829D               	bsf	157,1,c	;volatile
   298   000ACE                     
   299                           ;demo1.c: 84:         case 0:
   300   000ACE  68CA               	setf	202,c	;volatile
   301                           
   302                           ;demo1.c: 85:             degit = 0b00111111;
   303   000AD0  0EF4               	movlw	244
   304   000AD2  6ECB               	movwf	203,c	;volatile
   305                           
   306                           ;demo1.c: 87:         case 1:
   307   000AD4  50D3               	movf	211,w,c	;volatile
   308   000AD6  0B8F               	andlw	-113
   309   000AD8  0920               	iorlw	32
   310   000ADA  6ED3               	movwf	211,c	;volatile
   311   000ADC                     l69:
   312   000ADC  EF6E  F005         	goto	l69
   313   000AE0  EF07  F000         	goto	start
   314   000AE4                     __end_of_main:
   315                           	callstack 0
   316                           
   317 ;; *************** function _H_ISR *****************
   318 ;; Defined at:
   319 ;;		line 21 in file "demo1.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; Hardware stack levels required when called: 1
   340 ;; This function calls:
   341 ;;		___awdiv
   342 ;;		___awmod
   343 ;;		_convertion
   344 ;;		_initializeTimer
   345 ;; This function is called by:
   346 ;;		Interrupt level 2
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	intcode
   351   000008                     __pintcode:
   352                           	callstack 0
   353   000008                     _H_ISR:
   354                           	callstack 29
   355                           
   356                           ;incstack = 0
   357   000008  8217               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   358   00000A  ED01  F003         	call	int_func,f	;refresh shadow registers
   359                           
   360                           	psect	intcode_body
   361   000602                     __pintcode_body:
   362                           	callstack 29
   363   000602                     int_func:
   364                           	callstack 29
   365   000602  0006               	pop		; remove dummy address from shadow register refresh
   366   000604                     
   367                           ;demo1.c: 22:             return;
   368   000604  A29E               	btfss	158,1,c	;volatile
   369   000606  EF07  F003         	goto	i2u32_41
   370   00060A  EF09  F003         	goto	i2u32_40
   371   00060E                     i2u32_41:
   372   00060E  EFDA  F003         	goto	i2l59
   373   000612                     i2u32_40:
   374   000612                     
   375                           ;demo1.c: 23:         }
   376   000612  5015               	movf	_start^0,w,c
   377   000614  1016               	iorwf	(_start+1)^0,w,c
   378   000616  A4D8               	btfss	status,2,c
   379   000618  EF10  F003         	goto	i2u33_41
   380   00061C  EF12  F003         	goto	i2u33_40
   381   000620                     i2u33_41:
   382   000620  EF4E  F003         	goto	i2l56
   383   000624                     i2u33_40:
   384   000624                     
   385                           ;demo1.c: 24: 
   386   000624  5011               	movf	_buffer^0,w,c
   387   000626  1012               	iorwf	(_buffer+1)^0,w,c
   388   000628  A4D8               	btfss	status,2,c
   389   00062A  EF19  F003         	goto	i2u34_41
   390   00062E  EF1B  F003         	goto	i2u34_40
   391   000632                     i2u34_41:
   392   000632  EF24  F003         	goto	i2l1144
   393   000636                     i2u34_40:
   394   000636                     
   395                           ;demo1.c: 25:         if (PORTAbits.RA0 == 0) {
   396   000636  0E00               	movlw	0
   397   000638  6E16               	movwf	(_start+1)^0,c
   398   00063A  0E01               	movlw	1
   399   00063C  6E15               	movwf	_start^0,c
   400   00063E                     
   401                           ;demo1.c: 26:             counter = initializeTimer (status);
   402   00063E  888A               	bsf	138,4,c	;volatile
   403   000640                     
   404                           ;demo1.c: 27:             PORTC = convertion(counter / 10);
   405   000640  6882               	setf	130,c	;volatile
   406   000642                     
   407                           ;demo1.c: 28:             PORTD = convertion(counter % 10);
   408   000642  6883               	setf	131,c	;volatile
   409                           
   410                           ;demo1.c: 29:             statusSetting = 0;
   411   000644  EF4B  F003         	goto	i2l1150
   412   000648                     i2l1144:
   413                           
   414                           ;demo1.c: 30:             PIR1bits.TMR2IF = 0;
   415   000648  0611               	decf	_buffer^0,f,c
   416   00064A  A0D8               	btfss	status,0,c
   417   00064C  0612               	decf	(_buffer+1)^0,f,c
   418   00064E                     
   419                           ;demo1.c: 31:             LATAbits.LA1 = 0;
   420   00064E  C011  F001         	movff	_buffer,___awdiv@dividend
   421   000652  C012  F002         	movff	_buffer+1,___awdiv@dividend+1
   422   000656  0E00               	movlw	0
   423   000658  6E04               	movwf	(___awdiv@divisor+1)^0,c
   424   00065A  0E0A               	movlw	10
   425   00065C  6E03               	movwf	___awdiv@divisor^0,c
   426   00065E  EC55  F004         	call	___awdiv	;wreg free
   427   000662  C001  F009         	movff	?___awdiv,convertion@degit
   428   000666  C002  F00A         	movff	?___awdiv+1,convertion@degit+1
   429   00066A  ECDC  F003         	call	_convertion	;wreg free
   430   00066E  5009               	movf	?_convertion^0,w,c
   431   000670  6E82               	movwf	130,c	;volatile
   432   000672                     
   433                           ;demo1.c: 32:             return;
   434   000672  C011  F001         	movff	_buffer,___awmod@dividend
   435   000676  C012  F002         	movff	_buffer+1,___awmod@dividend+1
   436   00067A  0E00               	movlw	0
   437   00067C  6E04               	movwf	(___awmod@divisor+1)^0,c
   438   00067E  0E0A               	movlw	10
   439   000680  6E03               	movwf	___awmod@divisor^0,c
   440   000682  ECB7  F004         	call	___awmod	;wreg free
   441   000686  C001  F009         	movff	?___awmod,convertion@degit
   442   00068A  C002  F00A         	movff	?___awmod+1,convertion@degit+1
   443   00068E  ECDC  F003         	call	_convertion	;wreg free
   444   000692  5009               	movf	?_convertion^0,w,c
   445   000694  6E83               	movwf	131,c	;volatile
   446   000696                     i2l1150:
   447                           
   448                           ;demo1.c: 34:         if (PORTAbits.RA0 == 1) {
   449   000696  929E               	bcf	158,1,c	;volatile
   450   000698  EFDA  F003         	goto	i2l59
   451   00069C                     i2l56:
   452                           
   453                           ;demo1.c: 38:             }
   454   00069C  B080               	btfsc	128,0,c	;volatile
   455   00069E  EF53  F003         	goto	i2u35_41
   456   0006A2  EF55  F003         	goto	i2u35_40
   457   0006A6                     i2u35_41:
   458   0006A6  EF8B  F003         	goto	i2l60
   459   0006AA                     i2u35_40:
   460   0006AA                     
   461                           ;demo1.c: 39:             LATAbits.LA1 = 0;
   462   0006AA  C00D  F001         	movff	_status,initializeTimer@a
   463   0006AE  C00E  F002         	movff	_status+1,initializeTimer@a+1
   464   0006B2  EC0F  F005         	call	_initializeTimer	;wreg free
   465   0006B6  C001  F00F         	movff	?_initializeTimer,_counter
   466   0006BA  C002  F010         	movff	?_initializeTimer+1,_counter+1
   467                           
   468                           ;demo1.c: 40:             if (counter == 0){
   469   0006BE  C00F  F001         	movff	_counter,___awdiv@dividend
   470   0006C2  C010  F002         	movff	_counter+1,___awdiv@dividend+1
   471   0006C6  0E00               	movlw	0
   472   0006C8  6E04               	movwf	(___awdiv@divisor+1)^0,c
   473   0006CA  0E0A               	movlw	10
   474   0006CC  6E03               	movwf	___awdiv@divisor^0,c
   475   0006CE  EC55  F004         	call	___awdiv	;wreg free
   476   0006D2  C001  F009         	movff	?___awdiv,convertion@degit
   477   0006D6  C002  F00A         	movff	?___awdiv+1,convertion@degit+1
   478   0006DA  ECDC  F003         	call	_convertion	;wreg free
   479   0006DE  5009               	movf	?_convertion^0,w,c
   480   0006E0  6E82               	movwf	130,c	;volatile
   481                           
   482                           ;demo1.c: 41:                 LATAbits.LA1 = 1;
   483   0006E2  C00F  F001         	movff	_counter,___awmod@dividend
   484   0006E6  C010  F002         	movff	_counter+1,___awmod@dividend+1
   485   0006EA  0E00               	movlw	0
   486   0006EC  6E04               	movwf	(___awmod@divisor+1)^0,c
   487   0006EE  0E0A               	movlw	10
   488   0006F0  6E03               	movwf	___awmod@divisor^0,c
   489   0006F2  ECB7  F004         	call	___awmod	;wreg free
   490   0006F6  C001  F009         	movff	?___awmod,convertion@degit
   491   0006FA  C002  F00A         	movff	?___awmod+1,convertion@degit+1
   492   0006FE  ECDC  F003         	call	_convertion	;wreg free
   493   000702  5009               	movf	?_convertion^0,w,c
   494   000704  6E83               	movwf	131,c	;volatile
   495   000706                     
   496                           ;demo1.c: 42:                 status = 1;
   497   000706  0E00               	movlw	0
   498   000708  6E14               	movwf	(_statusSetting+1)^0,c
   499   00070A  0E00               	movlw	0
   500   00070C  6E13               	movwf	_statusSetting^0,c
   501   00070E                     
   502                           ;demo1.c: 43: 
   503   00070E  929E               	bcf	158,1,c	;volatile
   504   000710                     
   505                           ;demo1.c: 44:             } else {
   506   000710  9289               	bcf	137,1,c	;volatile
   507   000712  EFDA  F003         	goto	i2l59
   508   000716                     i2l60:
   509                           
   510                           ;demo1.c: 47:             PORTC = convertion(counter / 10);
   511   000716  A080               	btfss	128,0,c	;volatile
   512   000718  EF90  F003         	goto	i2u36_41
   513   00071C  EF92  F003         	goto	i2u36_40
   514   000720                     i2u36_41:
   515   000720  EFD9  F003         	goto	i2l1184
   516   000724                     i2u36_40:
   517   000724                     
   518                           ;demo1.c: 48:             PORTD = convertion(counter % 10);
   519   000724  5013               	movf	_statusSetting^0,w,c
   520   000726  1014               	iorwf	(_statusSetting+1)^0,w,c
   521   000728  A4D8               	btfss	status,2,c
   522   00072A  EF99  F003         	goto	i2u37_41
   523   00072E  EF9B  F003         	goto	i2u37_40
   524   000732                     i2u37_41:
   525   000732  EFA1  F003         	goto	i2l1170
   526   000736                     i2u37_40:
   527   000736                     
   528                           ;demo1.c: 49:         }
   529   000736  0E00               	movlw	0
   530   000738  6E14               	movwf	(_statusSetting+1)^0,c
   531   00073A  0E01               	movlw	1
   532   00073C  6E13               	movwf	_statusSetting^0,c
   533   00073E                     
   534                           ;demo1.c: 50:         PIR1bits.TMR2IF = 0;
   535   00073E  4A0D               	infsnz	_status^0,f,c
   536   000740  2A0E               	incf	(_status+1)^0,f,c
   537   000742                     i2l1170:
   538                           
   539                           ;demo1.c: 52:     return;
   540   000742  9289               	bcf	137,1,c	;volatile
   541   000744                     
   542                           ;demo1.c: 53: }
   543   000744  500F               	movf	_counter^0,w,c
   544   000746  1010               	iorwf	(_counter+1)^0,w,c
   545   000748  A4D8               	btfss	status,2,c
   546   00074A  EFA9  F003         	goto	i2u38_41
   547   00074E  EFAB  F003         	goto	i2u38_40
   548   000752                     i2u38_41:
   549   000752  EFB2  F003         	goto	i2l1178
   550   000756                     i2u38_40:
   551   000756                     
   552                           ;demo1.c: 54: 
   553   000756  8289               	bsf	137,1,c	;volatile
   554   000758                     
   555                           ;demo1.c: 55: void main(void)
   556   000758  0E00               	movlw	0
   557   00075A  6E0E               	movwf	(_status+1)^0,c
   558   00075C  0E01               	movlw	1
   559   00075E  6E0D               	movwf	_status^0,c
   560                           
   561                           ;demo1.c: 57:     ADCON1 = 0x0f;
   562   000760  EFB5  F003         	goto	i2l1180
   563   000764                     i2l1178:
   564                           
   565                           ;demo1.c: 58:     TRISAbits.RA0 = 1;
   566   000764  060F               	decf	_counter^0,f,c
   567   000766  A0D8               	btfss	status,0,c
   568   000768  0610               	decf	(_counter+1)^0,f,c
   569   00076A                     i2l1180:
   570                           
   571                           ;demo1.c: 60:     PORTAbits.RA0 = 0;
   572   00076A  C00F  F001         	movff	_counter,___awdiv@dividend
   573   00076E  C010  F002         	movff	_counter+1,___awdiv@dividend+1
   574   000772  0E00               	movlw	0
   575   000774  6E04               	movwf	(___awdiv@divisor+1)^0,c
   576   000776  0E0A               	movlw	10
   577   000778  6E03               	movwf	___awdiv@divisor^0,c
   578   00077A  EC55  F004         	call	___awdiv	;wreg free
   579   00077E  C001  F009         	movff	?___awdiv,convertion@degit
   580   000782  C002  F00A         	movff	?___awdiv+1,convertion@degit+1
   581   000786  ECDC  F003         	call	_convertion	;wreg free
   582   00078A  5009               	movf	?_convertion^0,w,c
   583   00078C  6E82               	movwf	130,c	;volatile
   584   00078E                     
   585                           ;demo1.c: 61:     LATAbits.LA1 = 0;
   586   00078E  C00F  F001         	movff	_counter,___awmod@dividend
   587   000792  C010  F002         	movff	_counter+1,___awmod@dividend+1
   588   000796  0E00               	movlw	0
   589   000798  6E04               	movwf	(___awmod@divisor+1)^0,c
   590   00079A  0E0A               	movlw	10
   591   00079C  6E03               	movwf	___awmod@divisor^0,c
   592   00079E  ECB7  F004         	call	___awmod	;wreg free
   593   0007A2  C001  F009         	movff	?___awmod,convertion@degit
   594   0007A6  C002  F00A         	movff	?___awmod+1,convertion@degit+1
   595   0007AA  ECDC  F003         	call	_convertion	;wreg free
   596   0007AE  5009               	movf	?_convertion^0,w,c
   597   0007B0  6E83               	movwf	131,c	;volatile
   598   0007B2                     i2l1184:
   599                           
   600                           ;demo1.c: 63:     LATBbits.LB4 = 0;
   601   0007B2  929E               	bcf	158,1,c	;volatile
   602   0007B4                     i2l59:
   603   0007B4  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   604   0007B6  0011               	retfie		f
   605   0007B8                     __end_of_H_ISR:
   606                           	callstack 0
   607                           
   608 ;; *************** function _initializeTimer *****************
   609 ;; Defined at:
   610 ;;		line 132 in file "demo1.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  a               2    0[COMRAM] int 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  b               2    4[COMRAM] int 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2    0[COMRAM] int 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   624 ;;      Params:         2       0       0       0       0       0       0
   625 ;;      Locals:         2       0       0       0       0       0       0
   626 ;;      Temps:          2       0       0       0       0       0       0
   627 ;;      Totals:         6       0       0       0       0       0       0
   628 ;;Total ram usage:        6 bytes
   629 ;; Hardware stack levels used: 1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_H_ISR
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text2
   638   000A1E                     __ptext2:
   639                           	callstack 0
   640   000A1E                     _initializeTimer:
   641                           	callstack 29
   642   000A1E                     
   643                           ;demo1.c: 133:             break;;demo1.c: 134:         case 5:
   644   000A1E  EF2F  F005         	goto	i2l1044
   645   000A22                     i2l1030:
   646                           
   647                           ;demo1.c: 136:             break;
   648   000A22  0E00               	movlw	0
   649   000A24  6E06               	movwf	(initializeTimer@b+1)^0,c
   650   000A26  0E5A               	movlw	90
   651   000A28  6E05               	movwf	initializeTimer@b^0,c
   652                           
   653                           ;demo1.c: 137:         default:
   654   000A2A  EF51  F005         	goto	i2l92
   655   000A2E                     i2l1032:
   656                           
   657                           ;demo1.c: 139:             break;
   658   000A2E  0E00               	movlw	0
   659   000A30  6E06               	movwf	(initializeTimer@b+1)^0,c
   660   000A32  0E50               	movlw	80
   661   000A34  6E05               	movwf	initializeTimer@b^0,c
   662                           
   663                           ;demo1.c: 140:     }
   664   000A36  EF51  F005         	goto	i2l92
   665   000A3A                     i2l1034:
   666                           
   667                           ;demo1.c: 142: }
   668   000A3A  0E00               	movlw	0
   669   000A3C  6E06               	movwf	(initializeTimer@b+1)^0,c
   670   000A3E  0E46               	movlw	70
   671   000A40  6E05               	movwf	initializeTimer@b^0,c
   672   000A42  EF51  F005         	goto	i2l92
   673   000A46                     i2l1036:
   674   000A46  0E00               	movlw	0
   675   000A48  6E06               	movwf	(initializeTimer@b+1)^0,c
   676   000A4A  0E3C               	movlw	60
   677   000A4C  6E05               	movwf	initializeTimer@b^0,c
   678   000A4E  EF51  F005         	goto	i2l92
   679   000A52                     i2l1038:
   680   000A52  0E00               	movlw	0
   681   000A54  6E06               	movwf	(initializeTimer@b+1)^0,c
   682   000A56  0E32               	movlw	50
   683   000A58  6E05               	movwf	initializeTimer@b^0,c
   684   000A5A  EF51  F005         	goto	i2l92
   685   000A5E                     i2l1044:
   686   000A5E  C001  F003         	movff	initializeTimer@a,??_initializeTimer
   687   000A62  C002  F004         	movff	initializeTimer@a+1,??_initializeTimer+1
   688                           
   689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   690                           ; Switch size 1, requested type "simple"
   691                           ; Number of cases is 1, Range of values is 0 to 0
   692                           ; switch strategies available:
   693                           ; Name         Instructions Cycles
   694                           ; simple_byte            4     3 (average)
   695                           ;	Chosen strategy is simple_byte
   696   000A66  5004               	movf	(??_initializeTimer+1)^0,w,c
   697   000A68  0A00               	xorlw	0	; case 0
   698   000A6A  B4D8               	btfsc	status,2,c
   699   000A6C  EF3A  F005         	goto	i2l1196
   700   000A70  EF29  F005         	goto	i2l1038
   701   000A74                     i2l1196:
   702                           
   703                           ; Switch size 1, requested type "simple"
   704                           ; Number of cases is 5, Range of values is 1 to 5
   705                           ; switch strategies available:
   706                           ; Name         Instructions Cycles
   707                           ; simple_byte           16     9 (average)
   708                           ;	Chosen strategy is simple_byte
   709   000A74  5003               	movf	??_initializeTimer^0,w,c
   710   000A76  0A01               	xorlw	1	; case 1
   711   000A78  B4D8               	btfsc	status,2,c
   712   000A7A  EF11  F005         	goto	i2l1030
   713   000A7E  0A03               	xorlw	3	; case 2
   714   000A80  B4D8               	btfsc	status,2,c
   715   000A82  EF17  F005         	goto	i2l1032
   716   000A86  0A01               	xorlw	1	; case 3
   717   000A88  B4D8               	btfsc	status,2,c
   718   000A8A  EF1D  F005         	goto	i2l1034
   719   000A8E  0A07               	xorlw	7	; case 4
   720   000A90  B4D8               	btfsc	status,2,c
   721   000A92  EF23  F005         	goto	i2l1036
   722   000A96  0A01               	xorlw	1	; case 5
   723   000A98  B4D8               	btfsc	status,2,c
   724   000A9A  EF29  F005         	goto	i2l1038
   725   000A9E  EF29  F005         	goto	i2l1038
   726   000AA2                     i2l92:
   727   000AA2  C005  F001         	movff	initializeTimer@b,?_initializeTimer
   728   000AA6  C006  F002         	movff	initializeTimer@b+1,?_initializeTimer+1
   729   000AAA  0012               	return		;funcret
   730   000AAC                     __end_of_initializeTimer:
   731                           	callstack 0
   732                           
   733 ;; *************** function _convertion *****************
   734 ;; Defined at:
   735 ;;		line 95 in file "demo1.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  degit           2    8[COMRAM] int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  2    8[COMRAM] int 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   749 ;;      Params:         2       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0
   751 ;;      Temps:          2       0       0       0       0       0       0
   752 ;;      Totals:         4       0       0       0       0       0       0
   753 ;;Total ram usage:        4 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_H_ISR
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text3
   763   0007B8                     __ptext3:
   764                           	callstack 0
   765   0007B8                     _convertion:
   766                           	callstack 29
   767   0007B8                     
   768                           ;demo1.c: 96:         case 4:
   769   0007B8  EF1A  F004         	goto	i2l1022
   770   0007BC                     i2l1000:
   771                           
   772                           ;demo1.c: 98:             break;
   773   0007BC  0E00               	movlw	0
   774   0007BE  6E0A               	movwf	(convertion@degit+1)^0,c
   775   0007C0  0E3F               	movlw	63
   776   0007C2  6E09               	movwf	convertion@degit^0,c
   777                           
   778                           ;demo1.c: 99:         case 5:
   779   0007C4  EF50  F004         	goto	i2l77
   780   0007C8                     i2l1002:
   781                           
   782                           ;demo1.c: 101:             break;
   783   0007C8  0E00               	movlw	0
   784   0007CA  6E0A               	movwf	(convertion@degit+1)^0,c
   785   0007CC  0E06               	movlw	6
   786   0007CE  6E09               	movwf	convertion@degit^0,c
   787                           
   788                           ;demo1.c: 102:         case 6:
   789   0007D0  EF50  F004         	goto	i2l77
   790   0007D4                     i2l1004:
   791                           
   792                           ;demo1.c: 104:             break;
   793   0007D4  0E00               	movlw	0
   794   0007D6  6E0A               	movwf	(convertion@degit+1)^0,c
   795   0007D8  0E5B               	movlw	91
   796   0007DA  6E09               	movwf	convertion@degit^0,c
   797                           
   798                           ;demo1.c: 105:         case 7:
   799   0007DC  EF50  F004         	goto	i2l77
   800   0007E0                     i2l1006:
   801                           
   802                           ;demo1.c: 107:             break;
   803   0007E0  0E00               	movlw	0
   804   0007E2  6E0A               	movwf	(convertion@degit+1)^0,c
   805   0007E4  0E4F               	movlw	79
   806   0007E6  6E09               	movwf	convertion@degit^0,c
   807                           
   808                           ;demo1.c: 108:         case 8:
   809   0007E8  EF50  F004         	goto	i2l77
   810   0007EC                     i2l1008:
   811                           
   812                           ;demo1.c: 110:             break;
   813   0007EC  0E00               	movlw	0
   814   0007EE  6E0A               	movwf	(convertion@degit+1)^0,c
   815   0007F0  0E66               	movlw	102
   816   0007F2  6E09               	movwf	convertion@degit^0,c
   817                           
   818                           ;demo1.c: 111:         case 9:
   819   0007F4  EF50  F004         	goto	i2l77
   820   0007F8                     i2l1010:
   821                           
   822                           ;demo1.c: 113:             break;
   823   0007F8  0E00               	movlw	0
   824   0007FA  6E0A               	movwf	(convertion@degit+1)^0,c
   825   0007FC  0E6D               	movlw	109
   826   0007FE  6E09               	movwf	convertion@degit^0,c
   827                           
   828                           ;demo1.c: 114:     }
   829   000800  EF50  F004         	goto	i2l77
   830   000804                     i2l1012:
   831                           
   832                           ;demo1.c: 116:     return degit;
   833   000804  0E00               	movlw	0
   834   000806  6E0A               	movwf	(convertion@degit+1)^0,c
   835   000808  0E7D               	movlw	125
   836   00080A  6E09               	movwf	convertion@degit^0,c
   837                           
   838                           ;demo1.c: 117: }
   839   00080C  EF50  F004         	goto	i2l77
   840   000810                     i2l1014:
   841                           
   842                           ;demo1.c: 119: int initializeTimer (int a) {
   843   000810  0E00               	movlw	0
   844   000812  6E0A               	movwf	(convertion@degit+1)^0,c
   845   000814  0E07               	movlw	7
   846   000816  6E09               	movwf	convertion@degit^0,c
   847                           
   848                           ;demo1.c: 120:     int b;
   849   000818  EF50  F004         	goto	i2l77
   850   00081C                     i2l1016:
   851                           
   852                           ;demo1.c: 122:         case 1:
   853   00081C  0E00               	movlw	0
   854   00081E  6E0A               	movwf	(convertion@degit+1)^0,c
   855   000820  0E7F               	movlw	127
   856   000822  6E09               	movwf	convertion@degit^0,c
   857                           
   858                           ;demo1.c: 123:             b = 90;
   859   000824  EF50  F004         	goto	i2l77
   860   000828                     i2l1018:
   861                           
   862                           ;demo1.c: 125:         case 2:
   863   000828  0E00               	movlw	0
   864   00082A  6E0A               	movwf	(convertion@degit+1)^0,c
   865   00082C  0E6F               	movlw	111
   866   00082E  6E09               	movwf	convertion@degit^0,c
   867                           
   868                           ;demo1.c: 126:             b = 80;
   869   000830  EF50  F004         	goto	i2l77
   870   000834                     i2l1022:
   871   000834  C009  F00B         	movff	convertion@degit,??_convertion
   872   000838  C00A  F00C         	movff	convertion@degit+1,??_convertion+1
   873                           
   874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   875                           ; Switch size 1, requested type "simple"
   876                           ; Number of cases is 1, Range of values is 0 to 0
   877                           ; switch strategies available:
   878                           ; Name         Instructions Cycles
   879                           ; simple_byte            4     3 (average)
   880                           ;	Chosen strategy is simple_byte
   881   00083C  500C               	movf	(??_convertion+1)^0,w,c
   882   00083E  0A00               	xorlw	0	; case 0
   883   000840  B4D8               	btfsc	status,2,c
   884   000842  EF25  F004         	goto	i2l1198
   885   000846  EF50  F004         	goto	i2l77
   886   00084A                     i2l1198:
   887                           
   888                           ; Switch size 1, requested type "simple"
   889                           ; Number of cases is 10, Range of values is 0 to 9
   890                           ; switch strategies available:
   891                           ; Name         Instructions Cycles
   892                           ; simple_byte           31    16 (average)
   893                           ;	Chosen strategy is simple_byte
   894   00084A  500B               	movf	??_convertion^0,w,c
   895   00084C  0A00               	xorlw	0	; case 0
   896   00084E  B4D8               	btfsc	status,2,c
   897   000850  EFDE  F003         	goto	i2l1000
   898   000854  0A01               	xorlw	1	; case 1
   899   000856  B4D8               	btfsc	status,2,c
   900   000858  EFE4  F003         	goto	i2l1002
   901   00085C  0A03               	xorlw	3	; case 2
   902   00085E  B4D8               	btfsc	status,2,c
   903   000860  EFEA  F003         	goto	i2l1004
   904   000864  0A01               	xorlw	1	; case 3
   905   000866  B4D8               	btfsc	status,2,c
   906   000868  EFF0  F003         	goto	i2l1006
   907   00086C  0A07               	xorlw	7	; case 4
   908   00086E  B4D8               	btfsc	status,2,c
   909   000870  EFF6  F003         	goto	i2l1008
   910   000874  0A01               	xorlw	1	; case 5
   911   000876  B4D8               	btfsc	status,2,c
   912   000878  EFFC  F003         	goto	i2l1010
   913   00087C  0A03               	xorlw	3	; case 6
   914   00087E  B4D8               	btfsc	status,2,c
   915   000880  EF02  F004         	goto	i2l1012
   916   000884  0A01               	xorlw	1	; case 7
   917   000886  B4D8               	btfsc	status,2,c
   918   000888  EF08  F004         	goto	i2l1014
   919   00088C  0A0F               	xorlw	15	; case 8
   920   00088E  B4D8               	btfsc	status,2,c
   921   000890  EF0E  F004         	goto	i2l1016
   922   000894  0A01               	xorlw	1	; case 9
   923   000896  B4D8               	btfsc	status,2,c
   924   000898  EF14  F004         	goto	i2l1018
   925   00089C  EF50  F004         	goto	i2l77
   926   0008A0                     i2l77:
   927                           
   928                           ;demo1.c: 129:             b = 70;
   929   0008A0  C009  F009         	movff	convertion@degit,?_convertion
   930   0008A4  C00A  F00A         	movff	convertion@degit+1,?_convertion+1
   931   0008A8  0012               	return		;funcret
   932   0008AA                     __end_of_convertion:
   933                           	callstack 0
   934                           
   935 ;; *************** function ___awmod *****************
   936 ;; Defined at:
   937 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  dividend        2    0[COMRAM] int 
   940 ;;  divisor         2    2[COMRAM] int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  sign            1    5[COMRAM] unsigned char 
   943 ;;  counter         1    4[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2    0[COMRAM] int 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         4       0       0       0       0       0       0
   954 ;;      Locals:         2       0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0
   956 ;;      Totals:         6       0       0       0       0       0       0
   957 ;;Total ram usage:        6 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_H_ISR
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text4
   967   00096E                     __ptext4:
   968                           	callstack 0
   969   00096E                     ___awmod:
   970                           	callstack 29
   971   00096E  0E00               	movlw	0
   972   000970  6E06               	movwf	___awmod@sign^0,c
   973   000972  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   974   000974  EFC0  F004         	goto	i2u26_40
   975   000978  EFBE  F004         	goto	i2u26_41
   976   00097C                     i2u26_41:
   977   00097C  EFC6  F004         	goto	i2l1102
   978   000980                     i2u26_40:
   979   000980  6C01               	negf	___awmod@dividend^0,c
   980   000982  1E02               	comf	(___awmod@dividend+1)^0,f,c
   981   000984  B0D8               	btfsc	status,0,c
   982   000986  2A02               	incf	(___awmod@dividend+1)^0,f,c
   983   000988  0E01               	movlw	1
   984   00098A  6E06               	movwf	___awmod@sign^0,c
   985   00098C                     i2l1102:
   986   00098C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   987   00098E  EFCD  F004         	goto	i2u27_40
   988   000992  EFCB  F004         	goto	i2u27_41
   989   000996                     i2u27_41:
   990   000996  EFD1  F004         	goto	i2l1106
   991   00099A                     i2u27_40:
   992   00099A  6C03               	negf	___awmod@divisor^0,c
   993   00099C  1E04               	comf	(___awmod@divisor+1)^0,f,c
   994   00099E  B0D8               	btfsc	status,0,c
   995   0009A0  2A04               	incf	(___awmod@divisor+1)^0,f,c
   996   0009A2                     i2l1106:
   997   0009A2  5003               	movf	___awmod@divisor^0,w,c
   998   0009A4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   999   0009A6  B4D8               	btfsc	status,2,c
  1000   0009A8  EFD8  F004         	goto	i2u28_41
  1001   0009AC  EFDA  F004         	goto	i2u28_40
  1002   0009B0                     i2u28_41:
  1003   0009B0  EFFE  F004         	goto	i2l1122
  1004   0009B4                     i2u28_40:
  1005   0009B4  0E01               	movlw	1
  1006   0009B6  6E05               	movwf	___awmod@counter^0,c
  1007   0009B8  EFE2  F004         	goto	i2l1112
  1008   0009BC                     i2l1110:
  1009   0009BC  90D8               	bcf	status,0,c
  1010   0009BE  3603               	rlcf	___awmod@divisor^0,f,c
  1011   0009C0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1012   0009C2  2A05               	incf	___awmod@counter^0,f,c
  1013   0009C4                     i2l1112:
  1014   0009C4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1015   0009C6  EFE7  F004         	goto	i2u29_41
  1016   0009CA  EFE9  F004         	goto	i2u29_40
  1017   0009CE                     i2u29_41:
  1018   0009CE  EFDE  F004         	goto	i2l1110
  1019   0009D2                     i2u29_40:
  1020   0009D2                     i2l1114:
  1021   0009D2  5003               	movf	___awmod@divisor^0,w,c
  1022   0009D4  5C01               	subwf	___awmod@dividend^0,w,c
  1023   0009D6  5004               	movf	(___awmod@divisor+1)^0,w,c
  1024   0009D8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1025   0009DA  A0D8               	btfss	status,0,c
  1026   0009DC  EFF2  F004         	goto	i2u30_41
  1027   0009E0  EFF4  F004         	goto	i2u30_40
  1028   0009E4                     i2u30_41:
  1029   0009E4  EFF8  F004         	goto	i2l1118
  1030   0009E8                     i2u30_40:
  1031   0009E8  5003               	movf	___awmod@divisor^0,w,c
  1032   0009EA  5E01               	subwf	___awmod@dividend^0,f,c
  1033   0009EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  1034   0009EE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1035   0009F0                     i2l1118:
  1036   0009F0  90D8               	bcf	status,0,c
  1037   0009F2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1038   0009F4  3203               	rrcf	___awmod@divisor^0,f,c
  1039   0009F6  2E05               	decfsz	___awmod@counter^0,f,c
  1040   0009F8  EFE9  F004         	goto	i2l1114
  1041   0009FC                     i2l1122:
  1042   0009FC  5006               	movf	___awmod@sign^0,w,c
  1043   0009FE  B4D8               	btfsc	status,2,c
  1044   000A00  EF04  F005         	goto	i2u31_41
  1045   000A04  EF06  F005         	goto	i2u31_40
  1046   000A08                     i2u31_41:
  1047   000A08  EF0A  F005         	goto	i2l1126
  1048   000A0C                     i2u31_40:
  1049   000A0C  6C01               	negf	___awmod@dividend^0,c
  1050   000A0E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1051   000A10  B0D8               	btfsc	status,0,c
  1052   000A12  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1053   000A14                     i2l1126:
  1054   000A14  C001  F001         	movff	___awmod@dividend,?___awmod
  1055   000A18  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1056   000A1C  0012               	return		;funcret
  1057   000A1E                     __end_of___awmod:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function ___awdiv *****************
  1061 ;; Defined at:
  1062 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  dividend        2    0[COMRAM] int 
  1065 ;;  divisor         2    2[COMRAM] int 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  quotient        2    6[COMRAM] int 
  1068 ;;  sign            1    5[COMRAM] unsigned char 
  1069 ;;  counter         1    4[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2    0[COMRAM] int 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1079 ;;      Params:         4       0       0       0       0       0       0
  1080 ;;      Locals:         4       0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0
  1082 ;;      Totals:         8       0       0       0       0       0       0
  1083 ;;Total ram usage:        8 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_H_ISR
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text5
  1093   0008AA                     __ptext5:
  1094                           	callstack 0
  1095   0008AA                     ___awdiv:
  1096                           	callstack 29
  1097   0008AA  0E00               	movlw	0
  1098   0008AC  6E06               	movwf	___awdiv@sign^0,c
  1099   0008AE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1100   0008B0  EF5E  F004         	goto	i2u20_40
  1101   0008B4  EF5C  F004         	goto	i2u20_41
  1102   0008B8                     i2u20_41:
  1103   0008B8  EF64  F004         	goto	i2l1058
  1104   0008BC                     i2u20_40:
  1105   0008BC  6C03               	negf	___awdiv@divisor^0,c
  1106   0008BE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1107   0008C0  B0D8               	btfsc	status,0,c
  1108   0008C2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1109   0008C4  0E01               	movlw	1
  1110   0008C6  6E06               	movwf	___awdiv@sign^0,c
  1111   0008C8                     i2l1058:
  1112   0008C8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1113   0008CA  EF6B  F004         	goto	i2u21_40
  1114   0008CE  EF69  F004         	goto	i2u21_41
  1115   0008D2                     i2u21_41:
  1116   0008D2  EF71  F004         	goto	i2l1064
  1117   0008D6                     i2u21_40:
  1118   0008D6  6C01               	negf	___awdiv@dividend^0,c
  1119   0008D8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1120   0008DA  B0D8               	btfsc	status,0,c
  1121   0008DC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1122   0008DE  0E01               	movlw	1
  1123   0008E0  1A06               	xorwf	___awdiv@sign^0,f,c
  1124   0008E2                     i2l1064:
  1125   0008E2  0E00               	movlw	0
  1126   0008E4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1127   0008E6  0E00               	movlw	0
  1128   0008E8  6E07               	movwf	___awdiv@quotient^0,c
  1129   0008EA  5003               	movf	___awdiv@divisor^0,w,c
  1130   0008EC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1131   0008EE  B4D8               	btfsc	status,2,c
  1132   0008F0  EF7C  F004         	goto	i2u22_41
  1133   0008F4  EF7E  F004         	goto	i2u22_40
  1134   0008F8                     i2u22_41:
  1135   0008F8  EFA6  F004         	goto	i2l1086
  1136   0008FC                     i2u22_40:
  1137   0008FC  0E01               	movlw	1
  1138   0008FE  6E05               	movwf	___awdiv@counter^0,c
  1139   000900  EF86  F004         	goto	i2l1072
  1140   000904                     i2l1070:
  1141   000904  90D8               	bcf	status,0,c
  1142   000906  3603               	rlcf	___awdiv@divisor^0,f,c
  1143   000908  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1144   00090A  2A05               	incf	___awdiv@counter^0,f,c
  1145   00090C                     i2l1072:
  1146   00090C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1147   00090E  EF8B  F004         	goto	i2u23_41
  1148   000912  EF8D  F004         	goto	i2u23_40
  1149   000916                     i2u23_41:
  1150   000916  EF82  F004         	goto	i2l1070
  1151   00091A                     i2u23_40:
  1152   00091A                     i2l1074:
  1153   00091A  90D8               	bcf	status,0,c
  1154   00091C  3607               	rlcf	___awdiv@quotient^0,f,c
  1155   00091E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1156   000920  5003               	movf	___awdiv@divisor^0,w,c
  1157   000922  5C01               	subwf	___awdiv@dividend^0,w,c
  1158   000924  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1159   000926  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1160   000928  A0D8               	btfss	status,0,c
  1161   00092A  EF99  F004         	goto	i2u24_41
  1162   00092E  EF9B  F004         	goto	i2u24_40
  1163   000932                     i2u24_41:
  1164   000932  EFA0  F004         	goto	i2l1082
  1165   000936                     i2u24_40:
  1166   000936  5003               	movf	___awdiv@divisor^0,w,c
  1167   000938  5E01               	subwf	___awdiv@dividend^0,f,c
  1168   00093A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1169   00093C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1170   00093E  8007               	bsf	___awdiv@quotient^0,0,c
  1171   000940                     i2l1082:
  1172   000940  90D8               	bcf	status,0,c
  1173   000942  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1174   000944  3203               	rrcf	___awdiv@divisor^0,f,c
  1175   000946  2E05               	decfsz	___awdiv@counter^0,f,c
  1176   000948  EF8D  F004         	goto	i2l1074
  1177   00094C                     i2l1086:
  1178   00094C  5006               	movf	___awdiv@sign^0,w,c
  1179   00094E  B4D8               	btfsc	status,2,c
  1180   000950  EFAC  F004         	goto	i2u25_41
  1181   000954  EFAE  F004         	goto	i2u25_40
  1182   000958                     i2u25_41:
  1183   000958  EFB2  F004         	goto	i2l1090
  1184   00095C                     i2u25_40:
  1185   00095C  6C07               	negf	___awdiv@quotient^0,c
  1186   00095E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1187   000960  B0D8               	btfsc	status,0,c
  1188   000962  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1189   000964                     i2l1090:
  1190   000964  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1191   000968  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1192   00096C  0012               	return		;funcret
  1193   00096E                     __end_of___awdiv:
  1194                           	callstack 0
  1195                           
  1196                           	psect	smallconst
  1197   000600                     __psmallconst:
  1198                           	callstack 0
  1199   000600  00                 	db	0
  1200   000601  00                 	db	0	; dummy byte at the end
  1201   000000                     
  1202                           	psect	rparam
  1203   000000                     
  1204                           	psect	temp
  1205   000017                     btemp:
  1206                           	callstack 0
  1207   000017                     	ds	1
  1208   000000                     int$flags	set	btemp
  1209   000000                     wtemp8	set	btemp+1
  1210   000000                     ttemp5	set	btemp+1
  1211   000000                     ttemp6	set	btemp+4
  1212   000000                     ttemp7	set	btemp+8
  1213                           
  1214                           	psect	idloc
  1215                           
  1216                           ;Config register IDLOC0 @ 0x200000
  1217                           ;	unspecified, using default values
  1218   200000                     	org	2097152
  1219   200000  FF                 	db	255
  1220                           
  1221                           ;Config register IDLOC1 @ 0x200001
  1222                           ;	unspecified, using default values
  1223   200001                     	org	2097153
  1224   200001  FF                 	db	255
  1225                           
  1226                           ;Config register IDLOC2 @ 0x200002
  1227                           ;	unspecified, using default values
  1228   200002                     	org	2097154
  1229   200002  FF                 	db	255
  1230                           
  1231                           ;Config register IDLOC3 @ 0x200003
  1232                           ;	unspecified, using default values
  1233   200003                     	org	2097155
  1234   200003  FF                 	db	255
  1235                           
  1236                           ;Config register IDLOC4 @ 0x200004
  1237                           ;	unspecified, using default values
  1238   200004                     	org	2097156
  1239   200004  FF                 	db	255
  1240                           
  1241                           ;Config register IDLOC5 @ 0x200005
  1242                           ;	unspecified, using default values
  1243   200005                     	org	2097157
  1244   200005  FF                 	db	255
  1245                           
  1246                           ;Config register IDLOC6 @ 0x200006
  1247                           ;	unspecified, using default values
  1248   200006                     	org	2097158
  1249   200006  FF                 	db	255
  1250                           
  1251                           ;Config register IDLOC7 @ 0x200007
  1252                           ;	unspecified, using default values
  1253   200007                     	org	2097159
  1254   200007  FF                 	db	255
  1255                           
  1256                           	psect	config
  1257                           
  1258                           ; Padding undefined space
  1259   300000                     	org	3145728
  1260   300000  FF                 	db	255
  1261                           
  1262                           ;Config register CONFIG1H @ 0x300001
  1263                           ;	Oscillator Selection bits
  1264                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1265                           ;	Fail-Safe Clock Monitor Enable bit
  1266                           ;	FCMEN = 0x0, unprogrammed default
  1267                           ;	Internal/External Oscillator Switchover bit
  1268                           ;	IESO = 0x0, unprogrammed default
  1269   300001                     	org	3145729
  1270   300001  08                 	db	8
  1271                           
  1272                           ;Config register CONFIG2L @ 0x300002
  1273                           ;	Power-up Timer Enable bit
  1274                           ;	PWRT = OFF, PWRT disabled
  1275                           ;	Brown-out Reset Enable bits
  1276                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  1277                           ;	Brown Out Reset Voltage bits
  1278                           ;	BORV = 0x3, unprogrammed default
  1279   300002                     	org	3145730
  1280   300002  1B                 	db	27
  1281                           
  1282                           ;Config register CONFIG2H @ 0x300003
  1283                           ;	Watchdog Timer Enable bit
  1284                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1285                           ;	Watchdog Timer Postscale Select bits
  1286                           ;	WDTPS = 0xF, unprogrammed default
  1287   300003                     	org	3145731
  1288   300003  1E                 	db	30
  1289                           
  1290                           ; Padding undefined space
  1291   300004                     	org	3145732
  1292   300004  FF                 	db	255
  1293                           
  1294                           ;Config register CONFIG3H @ 0x300005
  1295                           ;	CCP2 MUX bit
  1296                           ;	CCP2MX = 0x1, unprogrammed default
  1297                           ;	PORTB A/D Enable bit
  1298                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1299                           ;	Low-Power Timer1 Oscillator Enable bit
  1300                           ;	LPT1OSC = 0x0, unprogrammed default
  1301                           ;	MCLR Pin Enable bit
  1302                           ;	MCLRE = 0x1, unprogrammed default
  1303   300005                     	org	3145733
  1304   300005  81                 	db	129
  1305                           
  1306                           ;Config register CONFIG4L @ 0x300006
  1307                           ;	Stack Full/Underflow Reset Enable bit
  1308                           ;	STVREN = 0x1, unprogrammed default
  1309                           ;	Single-Supply ICSP Enable bit
  1310                           ;	LVP = OFF, Single-Supply ICSP disabled
  1311                           ;	Extended Instruction Set Enable bit
  1312                           ;	XINST = 0x0, unprogrammed default
  1313                           ;	Background Debugger Enable bit
  1314                           ;	DEBUG = 0x1, unprogrammed default
  1315   300006                     	org	3145734
  1316   300006  81                 	db	129
  1317                           
  1318                           ; Padding undefined space
  1319   300007                     	org	3145735
  1320   300007  FF                 	db	255
  1321                           
  1322                           ;Config register CONFIG5L @ 0x300008
  1323                           ;	unspecified, using default values
  1324                           ;	Code Protection bit
  1325                           ;	CP0 = 0x1, unprogrammed default
  1326                           ;	Code Protection bit
  1327                           ;	CP1 = 0x1, unprogrammed default
  1328                           ;	Code Protection bit
  1329                           ;	CP2 = 0x1, unprogrammed default
  1330                           ;	Code Protection bit
  1331                           ;	CP3 = 0x1, unprogrammed default
  1332   300008                     	org	3145736
  1333   300008  0F                 	db	15
  1334                           
  1335                           ;Config register CONFIG5H @ 0x300009
  1336                           ;	Boot Block Code Protection bit
  1337                           ;	CPB = 0x1, unprogrammed default
  1338                           ;	Data EEPROM Code Protection bit
  1339                           ;	CPD = OFF, Data EEPROM not code-protected
  1340   300009                     	org	3145737
  1341   300009  C0                 	db	192
  1342                           
  1343                           ;Config register CONFIG6L @ 0x30000A
  1344                           ;	unspecified, using default values
  1345                           ;	Write Protection bit
  1346                           ;	WRT0 = 0x1, unprogrammed default
  1347                           ;	Write Protection bit
  1348                           ;	WRT1 = 0x1, unprogrammed default
  1349                           ;	Write Protection bit
  1350                           ;	WRT2 = 0x1, unprogrammed default
  1351                           ;	Write Protection bit
  1352                           ;	WRT3 = 0x1, unprogrammed default
  1353   30000A                     	org	3145738
  1354   30000A  0F                 	db	15
  1355                           
  1356                           ;Config register CONFIG6H @ 0x30000B
  1357                           ;	unspecified, using default values
  1358                           ;	Configuration Register Write Protection bit
  1359                           ;	WRTC = 0x1, unprogrammed default
  1360                           ;	Boot Block Write Protection bit
  1361                           ;	WRTB = 0x1, unprogrammed default
  1362                           ;	Data EEPROM Write Protection bit
  1363                           ;	WRTD = 0x1, unprogrammed default
  1364   30000B                     	org	3145739
  1365   30000B  E0                 	db	224
  1366                           
  1367                           ;Config register CONFIG7L @ 0x30000C
  1368                           ;	unspecified, using default values
  1369                           ;	Table Read Protection bit
  1370                           ;	EBTR0 = 0x1, unprogrammed default
  1371                           ;	Table Read Protection bit
  1372                           ;	EBTR1 = 0x1, unprogrammed default
  1373                           ;	Table Read Protection bit
  1374                           ;	EBTR2 = 0x1, unprogrammed default
  1375                           ;	Table Read Protection bit
  1376                           ;	EBTR3 = 0x1, unprogrammed default
  1377   30000C                     	org	3145740
  1378   30000C  0F                 	db	15
  1379                           
  1380                           ;Config register CONFIG7H @ 0x30000D
  1381                           ;	unspecified, using default values
  1382                           ;	Boot Block Table Read Protection bit
  1383                           ;	EBTRB = 0x1, unprogrammed default
  1384   30000D                     	org	3145741
  1385   30000D  40                 	db	64
  1386                           tosu	equ	0xFFF
  1387                           tosh	equ	0xFFE
  1388                           tosl	equ	0xFFD
  1389                           stkptr	equ	0xFFC
  1390                           pclatu	equ	0xFFB
  1391                           pclath	equ	0xFFA
  1392                           pcl	equ	0xFF9
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodh	equ	0xFF4
  1398                           prodl	equ	0xFF3
  1399                           indf0	equ	0xFEF
  1400                           postinc0	equ	0xFEE
  1401                           postdec0	equ	0xFED
  1402                           preinc0	equ	0xFEC
  1403                           plusw0	equ	0xFEB
  1404                           fsr0h	equ	0xFEA
  1405                           fsr0l	equ	0xFE9
  1406                           wreg	equ	0xFE8
  1407                           indf1	equ	0xFE7
  1408                           postinc1	equ	0xFE6
  1409                           postdec1	equ	0xFE5
  1410                           preinc1	equ	0xFE4
  1411                           plusw1	equ	0xFE3
  1412                           fsr1h	equ	0xFE2
  1413                           fsr1l	equ	0xFE1
  1414                           bsr	equ	0xFE0
  1415                           indf2	equ	0xFDF
  1416                           postinc2	equ	0xFDE
  1417                           postdec2	equ	0xFDD
  1418                           preinc2	equ	0xFDC
  1419                           plusw2	equ	0xFDB
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     12      22
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->_convertion
    _convertion->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _H_ISR                                                0     0      0    2144
                            ___awdiv
                            ___awmod
                         _convertion
                    _initializeTimer
 ---------------------------------------------------------------------------------
 (2) _initializeTimer                                      6     4      2     126
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _convertion                                           4     2      2     510
                                              8 COMRAM     4     2      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _H_ISR (ROOT)
   ___awdiv
   ___awmod
   _convertion
     ___awdiv (ARG)
     ___awmod (ARG)
   _initializeTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      C      16       1       17.5%
BITBIGSFR_1hl       21      0       0      23        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1hhll      8      0       0      22        0.0%
BITBIGSFRhl          7      0       0      25        0.0%
BITBIGSFRhh          6      0       0      24        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRlh          5      0       0      26        0.0%
BITBIGSFR_1hhlh      4      0       0      21        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRll          1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      28        0.0%
DATA                 0      0      16      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 11 02:41:13 2024

                     l70 0ADC                       l69 0ADC             ___awdiv@sign 0006  
                    l970 0AB4                      l980 0AC6                      l972 0AB6  
                    l964 0AAC                      l982 0AC8                      l974 0AB8  
                    l966 0AB0                      l984 0ACA                      l976 0ABA  
                    l968 0AB2                      l986 0ACC                      l978 0AC4  
                    l988 0ACE                      _PR2 0FCB             ___awmod@sign 0006  
                   i2l60 0716                     i2l56 069C                     i2l59 07B4  
                   i2l92 0AA2                     i2l77 08A0                     i2l87 08A8  
                   i2l98 0AAA                     _main 0AAC                     fsr1l 0FE1  
                   btemp 0017                     start 000E             ___param_bank 0000  
                  ?_main 0001          __end_of___awdiv 096E          __end_of___awmod 0A1E  
        ___awdiv@divisor 0003                    _T2CON 0FCA                    i2l332 096C  
                  i2l345 0A1C          ___awdiv@counter 0005                    i2l998 07B8  
                  _H_ISR 0008                    _PORTC 0F82                    _PORTD 0F83  
                  _TRISC 0F94                    _TRISD 0F95        ??_initializeTimer 0003  
                  _start 0015                    tablat 0FF5                    ttemp5 0018  
                  ttemp6 001B                    ttemp7 001F                    status 0FD8  
                  wtemp8 0018          __initialization 0AE4             __end_of_main 0AE4  
          _statusSetting 0013                   ??_main 000D            __activetblptr 0002  
                 ?_H_ISR 0001                   _ADCON1 0FC1         ___awdiv@dividend 0001  
                 i2l1000 07BC                   i2l1010 07F8                   i2l1002 07C8  
                 i2l1100 0988                   i2l1012 0804                   i2l1004 07D4  
                 i2l1110 09BC                   i2l1102 098C                   i2l1014 0810  
                 i2l1006 07E0                   i2l1022 0834                   i2l1030 0A22  
                 i2l1120 09F6                   i2l1112 09C4                   i2l1104 099A  
                 i2l1016 081C                   i2l1008 07EC                   i2l1032 0A2E  
                 i2l1050 08AA                   i2l1114 09D2                   i2l1122 09FC  
                 i2l1106 09A2                   i2l1018 0828                   i2l1034 0A3A  
                 i2l1130 0604                   i2l1060 08D6                   i2l1052 08AE  
                 i2l1124 0A0C                   i2l1116 09E8                   i2l1108 09B4  
                 i2l1036 0A46                   i2l1044 0A5E                   i2l1028 0A1E  
                 i2l1140 0640                   i2l1132 0612                   i2l1070 0904  
                 i2l1062 08DE                   i2l1054 08BC                   i2l1126 0A14  
                 i2l1118 09F0                   i2l1038 0A52                   i2l1150 0696  
                 i2l1142 0642                   i2l1134 0624                   i2l1080 093E  
                 i2l1072 090C                   i2l1064 08E2                   i2l1056 08C4  
                 i2l1160 0710                   i2l1136 0636                   i2l1144 0648  
                 i2l1090 0964                   i2l1082 0940                   i2l1074 091A  
                 i2l1066 08EA                   i2l1058 08C8                   i2l1170 0742  
                 i2l1154 06AA                   i2l1146 064E                   i2l1138 063E  
                 i2l1084 0946                   i2l1076 0920                   i2l1068 08FC  
                 i2l1180 076A                   i2l1172 0744                   i2l1164 0724  
                 i2l1156 0706                   i2l1148 0672                   i2l1078 0936  
                 i2l1086 094C                   i2l1094 096E                   i2l1182 078E  
                 i2l1174 0756                   i2l1166 0736                   i2l1158 070E  
                 i2l1088 095C                   i2l1096 0972                   i2l1176 0758  
                 i2l1168 073E                   i2l1184 07B2                   i2l1098 0980  
                 i2l1178 0764                   i2l1196 0A74                   i2l1198 084A  
              ??___awdiv 0005                ??___awmod 0005                   _buffer 0011  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 0001  
        ___awmod@counter 0005                   _status 000D             __pdataCOMRAM 000D  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0080  __end_of__initialization 0B0C  
          ___rparam_used 0001            __end_of_H_ISR 07B8           __pcstackCOMRAM 0001  
                ??_H_ISR 000D          _initializeTimer 0A1E                  i2u20_40 08BC  
                i2u20_41 08B8                  i2u21_40 08D6                  i2u21_41 08D2  
                i2u22_40 08FC                  i2u30_40 09E8                  i2u22_41 08F8  
                i2u30_41 09E4                  i2u23_40 091A                  i2u31_40 0A0C  
                i2u23_41 0916                  i2u31_41 0A08                  i2u24_40 0936  
                i2u32_40 0612                  i2u24_41 0932                  i2u32_41 060E  
                i2u25_40 095C                  i2u33_40 0624                  i2u25_41 0958  
                i2u33_41 0620                  i2u26_40 0980                  i2u34_40 0636  
                i2u26_41 097C                  i2u34_41 0632                  i2u27_40 099A  
                i2u35_40 06AA                  i2u27_41 0996                  i2u35_41 06A6  
                i2u28_40 09B4                  i2u36_40 0724                  i2u28_41 09B0  
                i2u36_41 0720                  i2u29_40 09D2                  i2u37_40 0736  
                i2u29_41 09CE                  i2u37_41 0732                  i2u38_40 0756  
                i2u38_41 0752               _convertion 07B8                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 08AA                  ___awmod 096E  
           __psmallconst 0600                  __pcinit 0AE4                  __ramtop 0600  
                __ptext0 0AAC                  __ptext2 0A1E                  __ptext3 07B8  
                __ptext4 096E                  __ptext5 08AA                  _counter 000F  
       ___awmod@dividend 0001           __pintcode_body 0602     end_of_initialization 0B0C  
          __Lmediumconst 0000                  int_func 0602  __end_of_initializeTimer 0AAC  
                postdec1 0FE5                  postinc0 0FEE                _PORTAbits 0F80  
              _TRISAbits 0F92                _TRISBbits 0F93              ?_convertion 0009  
       initializeTimer@a 0001         initializeTimer@b 0005            __pidataCOMRAM 0B1A  
    start_initialization 0AE4         ?_initializeTimer 0001              __pbssCOMRAM 0013  
              __pintcode 0008                 ?___awdiv 0001                 ?___awmod 0001  
            __smallconst 0600                 _LATAbits 0F89                 _LATBbits 0F8A  
               _IPR1bits 0F9F                 _PIE1bits 0F9D                 _PIR1bits 0F9E  
               _RCONbits 0FD0                copy_data0 0AF8             ??_convertion 000B  
        convertion@degit 0009                 __Hrparam 0000                 __Lrparam 0000  
     __end_of_convertion 08AA                 isa$xinst 0000                 int$flags 0017  
             _INTCONbits 0FF2                 intlevel2 0000               _OSCCONbits 0FD3  
