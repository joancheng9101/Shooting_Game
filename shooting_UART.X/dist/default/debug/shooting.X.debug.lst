

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 11 02:58:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 18/08/2023 GMT
    58                           ; 
    59                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4520 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     _RCREG	set	4014
    92   000000                     _TXREG	set	4013
    93   000000                     _PIE1bits	set	3997
    94   000000                     _PIR1bits	set	3998
    95   000000                     _RCSTAbits	set	4011
    96   000000                     _SPBRG	set	4015
    97   000000                     _BAUDCONbits	set	4024
    98   000000                     _TXSTAbits	set	4012
    99   000000                     _TRISBbits	set	3987
   100   000000                     _TRISC	set	3988
   101   000000                     _CCP1CONbits	set	4029
   102   000000                     _ADCON0bits	set	4034
   103   000000                     _ADRESL	set	4035
   104   000000                     _ADRESH	set	4036
   105   000000                     _ADCON1	set	4033
   106   000000                     _PORTAbits	set	3968
   107   000000                     _PORTBbits	set	3969
   108   000000                     _LATDbits	set	3980
   109   000000                     _ADFM	set	32263
   110   000000                     _TRISCbits	set	3988
   111   000000                     _ADCON2bits	set	4032
   112   000000                     _CREN	set	32092
   113   000000                     _RCIF	set	31989
   114   000000                     _IRCF0	set	32412
   115   000000                     _IRCF1	set	32413
   116   000000                     _INTCONbits	set	4082
   117   000000                     _TRISA	set	3986
   118   000000                     _LATC	set	3979
   119   000000                     _T2CONbits	set	4042
   120   000000                     _RCONbits	set	4048
   121   000000                     _PR2	set	4043
   122   000000                     _CCPR1L	set	4030
   123   000000                     _TRISD	set	3989
   124   000000                     _IRCF2	set	32414
   125   000000                     _IPR1bits	set	3999
   126                           
   127                           	psect	mediumconst
   128   007CCC                     __pmediumconst:
   129                           	callstack 0
   130   007CCC  00                 	db	0
   131   007CCD                     STR_7:
   132   007CCD  50                 	db	80	;'P'
   133   007CCE  72                 	db	114	;'r'
   134   007CCF  65                 	db	101	;'e'
   135   007CD0  73                 	db	115	;'s'
   136   007CD1  73                 	db	115	;'s'
   137   007CD2  20                 	db	32
   138   007CD3  74                 	db	116	;'t'
   139   007CD4  68                 	db	104	;'h'
   140   007CD5  65                 	db	101	;'e'
   141   007CD6  20                 	db	32
   142   007CD7  62                 	db	98	;'b'
   143   007CD8  75                 	db	117	;'u'
   144   007CD9  74                 	db	116	;'t'
   145   007CDA  74                 	db	116	;'t'
   146   007CDB  6F                 	db	111	;'o'
   147   007CDC  6E                 	db	110	;'n'
   148   007CDD  20                 	db	32
   149   007CDE  74                 	db	116	;'t'
   150   007CDF  6F                 	db	111	;'o'
   151   007CE0  20                 	db	32
   152   007CE1  63                 	db	99	;'c'
   153   007CE2  6F                 	db	111	;'o'
   154   007CE3  6E                 	db	110	;'n'
   155   007CE4  74                 	db	116	;'t'
   156   007CE5  69                 	db	105	;'i'
   157   007CE6  6E                 	db	110	;'n'
   158   007CE7  75                 	db	117	;'u'
   159   007CE8  65                 	db	101	;'e'
   160   007CE9  20                 	db	32
   161   007CEA  74                 	db	116	;'t'
   162   007CEB  68                 	db	104	;'h'
   163   007CEC  65                 	db	101	;'e'
   164   007CED  20                 	db	32
   165   007CEE  63                 	db	99	;'c'
   166   007CEF  68                 	db	104	;'h'
   167   007CF0  61                 	db	97	;'a'
   168   007CF1  6C                 	db	108	;'l'
   169   007CF2  6C                 	db	108	;'l'
   170   007CF3  65                 	db	101	;'e'
   171   007CF4  6E                 	db	110	;'n'
   172   007CF5  67                 	db	103	;'g'
   173   007CF6  65                 	db	101	;'e'
   174   007CF7  21                 	db	33
   175   007CF8  0A                 	db	10
   176   007CF9  0D                 	db	13
   177   007CFA  00                 	db	0
   178   007CFB                     STR_5:
   179   007CFB  44                 	db	68	;'D'
   180   007CFC  6F                 	db	111	;'o'
   181   007CFD  6E                 	db	110	;'n'
   182   007CFE  27                 	db	39
   183   007CFF  74                 	db	116	;'t'
   184   007D00  20                 	db	32
   185   007D01  66                 	db	102	;'f'
   186   007D02  6F                 	db	111	;'o'
   187   007D03  72                 	db	114	;'r'
   188   007D04  67                 	db	103	;'g'
   189   007D05  65                 	db	101	;'e'
   190   007D06  74                 	db	116	;'t'
   191   007D07  20                 	db	32
   192   007D08  74                 	db	116	;'t'
   193   007D09  6F                 	db	111	;'o'
   194   007D0A  20                 	db	32
   195   007D0B  6B                 	db	107	;'k'
   196   007D0C  65                 	db	101	;'e'
   197   007D0D  65                 	db	101	;'e'
   198   007D0E  70                 	db	112	;'p'
   199   007D0F  20                 	db	32
   200   007D10  61                 	db	97	;'a'
   201   007D11  6E                 	db	110	;'n'
   202   007D12  20                 	db	32
   203   007D13  65                 	db	101	;'e'
   204   007D14  79                 	db	121	;'y'
   205   007D15  65                 	db	101	;'e'
   206   007D16  20                 	db	32
   207   007D17  6F                 	db	111	;'o'
   208   007D18  6E                 	db	110	;'n'
   209   007D19  20                 	db	32
   210   007D1A  74                 	db	116	;'t'
   211   007D1B  68                 	db	104	;'h'
   212   007D1C  65                 	db	101	;'e'
   213   007D1D  20                 	db	32
   214   007D1E  74                 	db	116	;'t'
   215   007D1F  69                 	db	105	;'i'
   216   007D20  6D                 	db	109	;'m'
   217   007D21  65                 	db	101	;'e'
   218   007D22  21                 	db	33
   219   007D23  0A                 	db	10
   220   007D24  0D                 	db	13
   221   007D25  00                 	db	0
   222   007D26                     STR_4:
   223   007D26  50                 	db	80	;'P'
   224   007D27  72                 	db	114	;'r'
   225   007D28  65                 	db	101	;'e'
   226   007D29  73                 	db	115	;'s'
   227   007D2A  73                 	db	115	;'s'
   228   007D2B  20                 	db	32
   229   007D2C  74                 	db	116	;'t'
   230   007D2D  68                 	db	104	;'h'
   231   007D2E  65                 	db	101	;'e'
   232   007D2F  20                 	db	32
   233   007D30  62                 	db	98	;'b'
   234   007D31  75                 	db	117	;'u'
   235   007D32  74                 	db	116	;'t'
   236   007D33  74                 	db	116	;'t'
   237   007D34  6F                 	db	111	;'o'
   238   007D35  6E                 	db	110	;'n'
   239   007D36  20                 	db	32
   240   007D37  74                 	db	116	;'t'
   241   007D38  6F                 	db	111	;'o'
   242   007D39  20                 	db	32
   243   007D3A  73                 	db	115	;'s'
   244   007D3B  74                 	db	116	;'t'
   245   007D3C  61                 	db	97	;'a'
   246   007D3D  72                 	db	114	;'r'
   247   007D3E  74                 	db	116	;'t'
   248   007D3F  20                 	db	32
   249   007D40  73                 	db	115	;'s'
   250   007D41  68                 	db	104	;'h'
   251   007D42  6F                 	db	111	;'o'
   252   007D43  6F                 	db	111	;'o'
   253   007D44  74                 	db	116	;'t'
   254   007D45  69                 	db	105	;'i'
   255   007D46  6E                 	db	110	;'n'
   256   007D47  67                 	db	103	;'g'
   257   007D48  21                 	db	33
   258   007D49  0A                 	db	10
   259   007D4A  0D                 	db	13
   260   007D4B  00                 	db	0
   261   007D4C                     STR_3:
   262   007D4C  57                 	db	87	;'W'
   263   007D4D  65                 	db	101	;'e'
   264   007D4E  6C                 	db	108	;'l'
   265   007D4F  63                 	db	99	;'c'
   266   007D50  6F                 	db	111	;'o'
   267   007D51  6D                 	db	109	;'m'
   268   007D52  65                 	db	101	;'e'
   269   007D53  20                 	db	32
   270   007D54  74                 	db	116	;'t'
   271   007D55  6F                 	db	111	;'o'
   272   007D56  20                 	db	32
   273   007D57  74                 	db	116	;'t'
   274   007D58  68                 	db	104	;'h'
   275   007D59  65                 	db	101	;'e'
   276   007D5A  20                 	db	32
   277   007D5B  73                 	db	115	;'s'
   278   007D5C  68                 	db	104	;'h'
   279   007D5D  6F                 	db	111	;'o'
   280   007D5E  6F                 	db	111	;'o'
   281   007D5F  74                 	db	116	;'t'
   282   007D60  69                 	db	105	;'i'
   283   007D61  6E                 	db	110	;'n'
   284   007D62  67                 	db	103	;'g'
   285   007D63  20                 	db	32
   286   007D64  67                 	db	103	;'g'
   287   007D65  61                 	db	97	;'a'
   288   007D66  6D                 	db	109	;'m'
   289   007D67  65                 	db	101	;'e'
   290   007D68  21                 	db	33
   291   007D69  0A                 	db	10
   292   007D6A  0D                 	db	13
   293   007D6B  00                 	db	0
   294   007D6C                     STR_10:
   295   007D6C  50                 	db	80	;'P'
   296   007D6D  72                 	db	114	;'r'
   297   007D6E  65                 	db	101	;'e'
   298   007D6F  73                 	db	115	;'s'
   299   007D70  73                 	db	115	;'s'
   300   007D71  20                 	db	32
   301   007D72  74                 	db	116	;'t'
   302   007D73  68                 	db	104	;'h'
   303   007D74  65                 	db	101	;'e'
   304   007D75  20                 	db	32
   305   007D76  62                 	db	98	;'b'
   306   007D77  75                 	db	117	;'u'
   307   007D78  74                 	db	116	;'t'
   308   007D79  74                 	db	116	;'t'
   309   007D7A  6F                 	db	111	;'o'
   310   007D7B  6E                 	db	110	;'n'
   311   007D7C  20                 	db	32
   312   007D7D  74                 	db	116	;'t'
   313   007D7E  6F                 	db	111	;'o'
   314   007D7F  20                 	db	32
   315   007D80  72                 	db	114	;'r'
   316   007D81  65                 	db	101	;'e'
   317   007D82  73                 	db	115	;'s'
   318   007D83  74                 	db	116	;'t'
   319   007D84  61                 	db	97	;'a'
   320   007D85  72                 	db	114	;'r'
   321   007D86  74                 	db	116	;'t'
   322   007D87  21                 	db	33
   323   007D88  0A                 	db	10
   324   007D89  0D                 	db	13
   325   007D8A  00                 	db	0
   326   007D8B                     STR_6:
   327   007D8B  0A                 	db	10
   328   007D8C  0D                 	db	13
   329   007D8D  47                 	db	71	;'G'
   330   007D8E  6F                 	db	111	;'o'
   331   007D8F  6F                 	db	111	;'o'
   332   007D90  64                 	db	100	;'d'
   333   007D91  20                 	db	32
   334   007D92  4A                 	db	74	;'J'
   335   007D93  6F                 	db	111	;'o'
   336   007D94  62                 	db	98	;'b'
   337   007D95  20                 	db	32
   338   007D96  21                 	db	33
   339   007D97  0A                 	db	10
   340   007D98  0D                 	db	13
   341   007D99  00                 	db	0
   342   007D9A                     STR_9:
   343   007D9A  0D                 	db	13
   344   007D9B  47                 	db	71	;'G'
   345   007D9C  61                 	db	97	;'a'
   346   007D9D  6D                 	db	109	;'m'
   347   007D9E  65                 	db	101	;'e'
   348   007D9F  20                 	db	32
   349   007DA0  4F                 	db	79	;'O'
   350   007DA1  76                 	db	118	;'v'
   351   007DA2  65                 	db	101	;'e'
   352   007DA3  72                 	db	114	;'r'
   353   007DA4  20                 	db	32
   354   007DA5  21                 	db	33
   355   007DA6  0A                 	db	10
   356   007DA7  0D                 	db	13
   357   007DA8  00                 	db	0
   358   007DA9                     STR_1:
   359   007DA9  0D                 	db	13
   360   007DAA  73                 	db	115	;'s'
   361   007DAB  63                 	db	99	;'c'
   362   007DAC  6F                 	db	111	;'o'
   363   007DAD  72                 	db	114	;'r'
   364   007DAE  65                 	db	101	;'e'
   365   007DAF  20                 	db	32
   366   007DB0  3A                 	db	58	;':'
   367   007DB1  20                 	db	32
   368   007DB2  00                 	db	0
   369   007DB3                     STR_12:
   370   007DB3  53                 	db	83	;'S'
   371   007DB4  54                 	db	84	;'T'
   372   007DB5  41                 	db	65	;'A'
   373   007DB6  52                 	db	82	;'R'
   374   007DB7  54                 	db	84	;'T'
   375   007DB8  0A                 	db	10
   376   007DB9  0D                 	db	13
   377   007DBA  00                 	db	0
   378   007DBB                     STR_2:
   379   007DBB  25                 	db	37
   380   007DBC  64                 	db	100	;'d'
   381   007DBD  00                 	db	0
   382   007DBE  00                 	db	0	; dummy byte at the end
   383   000000                     
   384                           ; #config settings
   385                           
   386                           	psect	cinit
   387   00133E                     __pcinit:
   388                           	callstack 0
   389   00133E                     start_initialization:
   390                           	callstack 0
   391   00133E                     __initialization:
   392                           	callstack 0
   393                           
   394                           ; Clear objects allocated to BANK2 (200 bytes)
   395   00133E  EE02  F000         	lfsr	0,__pbssBANK2
   396   001342  0EC8               	movlw	200
   397   001344                     clear_0:
   398   001344  6AEE               	clrf	postinc0,c
   399   001346  06E8               	decf	wreg,f,c
   400   001348  E1FD               	bnz	clear_0
   401                           
   402                           ; Clear objects allocated to BANK1 (200 bytes)
   403   00134A  EE01  F000         	lfsr	0,__pbssBANK1
   404   00134E  0EC8               	movlw	200
   405   001350                     clear_1:
   406   001350  6AEE               	clrf	postinc0,c
   407   001352  06E8               	decf	wreg,f,c
   408   001354  E1FD               	bnz	clear_1
   409                           
   410                           ; Clear objects allocated to BANK0 (59 bytes)
   411   001356  EE00  F080         	lfsr	0,__pbssBANK0
   412   00135A  0E3B               	movlw	59
   413   00135C                     clear_2:
   414   00135C  6AEE               	clrf	postinc0,c
   415   00135E  06E8               	decf	wreg,f,c
   416   001360  E1FD               	bnz	clear_2
   417                           
   418                           ; Clear objects allocated to COMRAM (4 bytes)
   419   001362  6A43               	clrf	(__pbssCOMRAM+3)& (0+255),c
   420   001364  6A42               	clrf	(__pbssCOMRAM+2)& (0+255),c
   421   001366  6A41               	clrf	(__pbssCOMRAM+1)& (0+255),c
   422   001368  6A40               	clrf	__pbssCOMRAM& (0+255),c
   423   00136A                     end_of_initialization:
   424                           	callstack 0
   425   00136A                     __end_of__initialization:
   426                           	callstack 0
   427   00136A  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   428   00136C  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   429   00136E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   430   001370  6EF8               	movwf	tblptru,c
   431   001372  0100               	movlb	0
   432   001374  EF38  F000         	goto	_main	;jump to C main() function
   433                           
   434                           	psect	bssCOMRAM
   435   000040                     __pbssCOMRAM:
   436                           	callstack 0
   437   000040                     _lenStr:
   438                           	callstack 0
   439   000040                     	ds	2
   440   000042                     _button:
   441                           	callstack 0
   442   000042                     	ds	2
   443                           
   444                           	psect	bssBANK0
   445   000080                     __pbssBANK0:
   446                           	callstack 0
   447   000080                     _dbuf:
   448                           	callstack 0
   449   000080                     	ds	32
   450   0000A0                     _width:
   451                           	callstack 0
   452   0000A0                     	ds	2
   453   0000A2                     _prec:
   454                           	callstack 0
   455   0000A2                     	ds	2
   456   0000A4                     _ready:
   457                           	callstack 0
   458   0000A4                     	ds	2
   459   0000A6                     _d6:
   460                           	callstack 0
   461   0000A6                     	ds	2
   462   0000A8                     _d5:
   463                           	callstack 0
   464   0000A8                     	ds	2
   465   0000AA                     _d4:
   466                           	callstack 0
   467   0000AA                     	ds	2
   468   0000AC                     _d3:
   469                           	callstack 0
   470   0000AC                     	ds	2
   471   0000AE                     _d2:
   472                           	callstack 0
   473   0000AE                     	ds	2
   474   0000B0                     _d1:
   475                           	callstack 0
   476   0000B0                     	ds	2
   477   0000B2                     _down:
   478                           	callstack 0
   479   0000B2                     	ds	2
   480   0000B4                     _stop:
   481                           	callstack 0
   482   0000B4                     	ds	2
   483   0000B6                     _state:
   484                           	callstack 0
   485   0000B6                     	ds	2
   486   0000B8                     _score:
   487                           	callstack 0
   488   0000B8                     	ds	2
   489   0000BA                     _flags:
   490                           	callstack 0
   491   0000BA                     	ds	1
   492                           
   493                           	psect	bssBANK1
   494   000100                     __pbssBANK1:
   495                           	callstack 0
   496   000100                     _str:
   497                           	callstack 0
   498   000100                     	ds	200
   499                           
   500                           	psect	bssBANK2
   501   000200                     __pbssBANK2:
   502                           	callstack 0
   503   000200                     _mystring:
   504                           	callstack 0
   505   000200                     	ds	200
   506                           
   507                           	psect	cstackBANK0
   508   0000BB                     __pcstackBANK0:
   509                           	callstack 0
   510   0000BB                     ??_Lo_ISR:
   511                           
   512                           ; 1 bytes @ 0x0
   513   0000BB                     	ds	5
   514   0000C0                     ??_CCP1_Initialize:
   515   0000C0                     ?___awdiv:
   516                           	callstack 0
   517   0000C0                     ?___awmod:
   518                           	callstack 0
   519   0000C0                     UART_Write@data:
   520                           	callstack 0
   521   0000C0                     ClearBuffer@i:
   522                           	callstack 0
   523   0000C0                     ___awdiv@dividend:
   524                           	callstack 0
   525   0000C0                     ___awmod@dividend:
   526                           	callstack 0
   527   0000C0                     fputc@c:
   528                           	callstack 0
   529   0000C0                     strcpy@dest:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x5
   533   0000C0                     	ds	1
   534   0000C1                     UART_Write_Text@text:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x6
   538   0000C1                     	ds	1
   539   0000C2                     fputc@fp:
   540                           	callstack 0
   541   0000C2                     ___awdiv@divisor:
   542                           	callstack 0
   543   0000C2                     ___awmod@divisor:
   544                           	callstack 0
   545   0000C2                     strcpy@src:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x7
   549   0000C2                     	ds	1
   550   0000C3                     ??_fputc:
   551   0000C3                     UART_Write_Text@i:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x8
   555   0000C3                     	ds	1
   556   0000C4                     ___awdiv@counter:
   557                           	callstack 0
   558   0000C4                     ___awmod@counter:
   559                           	callstack 0
   560   0000C4                     strcpy@d:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x9
   564   0000C4                     	ds	1
   565   0000C5                     ___awdiv@sign:
   566                           	callstack 0
   567   0000C5                     ___awmod@sign:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0xA
   571   0000C5                     	ds	1
   572   0000C6                     ?_abs:
   573                           	callstack 0
   574   0000C6                     ___awdiv@quotient:
   575                           	callstack 0
   576   0000C6                     abs@a:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0xB
   580   0000C6                     	ds	2
   581   0000C8                     ??_abs:
   582                           
   583                           ; 1 bytes @ 0xD
   584   0000C8                     	ds	2
   585   0000CA                     vfpfcnvrt@fp:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0xF
   589   0000CA                     	ds	1
   590   0000CB                     vfpfcnvrt@fmt:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x10
   594   0000CB                     	ds	1
   595   0000CC                     vfpfcnvrt@ap:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x11
   599   0000CC                     	ds	1
   600   0000CD                     ??_vfpfcnvrt:
   601                           
   602                           ; 1 bytes @ 0x12
   603   0000CD                     	ds	2
   604   0000CF                     vfpfcnvrt@done:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x14
   608   0000CF                     	ds	1
   609   0000D0                     vfpfcnvrt@cp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x15
   613   0000D0                     	ds	2
   614   0000D2                     vfpfcnvrt@convarg:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x17
   618   0000D2                     	ds	4
   619   0000D6                     vfpfcnvrt@c:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x1B
   623   0000D6                     	ds	1
   624   0000D7                     ?_vfprintf:
   625                           	callstack 0
   626   0000D7                     vfprintf@fp:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x1C
   630   0000D7                     	ds	1
   631   0000D8                     vfprintf@fmt:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x1D
   635   0000D8                     	ds	2
   636   0000DA                     vfprintf@ap:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x1F
   640   0000DA                     	ds	1
   641   0000DB                     vfprintf@cfmt:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x20
   645   0000DB                     	ds	2
   646   0000DD                     ?_sprintf:
   647                           	callstack 0
   648   0000DD                     sprintf@s:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x22
   652   0000DD                     	ds	2
   653   0000DF                     sprintf@fmt:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x24
   657   0000DF                     	ds	4
   658   0000E3                     sprintf@ap:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x28
   662   0000E3                     	ds	1
   663   0000E4                     sprintf@f:
   664                           	callstack 0
   665                           
   666                           ; 12 bytes @ 0x29
   667   0000E4                     	ds	12
   668   0000F0                     ??_add_score:
   669                           
   670                           ; 1 bytes @ 0x35
   671   0000F0                     	ds	2
   672   0000F2                     ??_main:
   673                           
   674                           ; 1 bytes @ 0x37
   675   0000F2                     	ds	2
   676                           
   677                           	psect	cstackCOMRAM
   678   000001                     __pcstackCOMRAM:
   679                           	callstack 0
   680   000001                     ?i2___awdiv:
   681                           	callstack 0
   682   000001                     ?i2___awmod:
   683                           	callstack 0
   684   000001                     i2UART_Write@data:
   685                           	callstack 0
   686   000001                     i2ClearBuffer@i:
   687                           	callstack 0
   688   000001                     i2___awdiv@dividend:
   689                           	callstack 0
   690   000001                     i2___awmod@dividend:
   691                           	callstack 0
   692   000001                     i2fputc@c:
   693                           	callstack 0
   694   000001                     i2strcpy@dest:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x0
   698   000001                     	ds	1
   699   000002                     i2UART_Write_Text@text:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x1
   703   000002                     	ds	1
   704   000003                     i2fputc@fp:
   705                           	callstack 0
   706   000003                     i2___awdiv@divisor:
   707                           	callstack 0
   708   000003                     i2___awmod@divisor:
   709                           	callstack 0
   710   000003                     i2strcpy@src:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x2
   714   000003                     	ds	1
   715   000004                     ??i2_fputc:
   716   000004                     i2UART_Write_Text@i:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x3
   720   000004                     	ds	1
   721   000005                     i2___awdiv@counter:
   722                           	callstack 0
   723   000005                     i2___awmod@counter:
   724                           	callstack 0
   725   000005                     i2strcpy@d:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729   000005                     	ds	1
   730   000006                     i2___awdiv@sign:
   731                           	callstack 0
   732   000006                     i2___awmod@sign:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x5
   736   000006                     	ds	1
   737   000007                     ?i2_abs:
   738                           	callstack 0
   739   000007                     i2___awdiv@quotient:
   740                           	callstack 0
   741   000007                     i2abs@a:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x6
   745   000007                     	ds	2
   746   000009                     ??i2_abs:
   747                           
   748                           ; 1 bytes @ 0x8
   749   000009                     	ds	2
   750   00000B                     i2vfpfcnvrt@fp:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0xA
   754   00000B                     	ds	1
   755   00000C                     i2vfpfcnvrt@fmt:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0xB
   759   00000C                     	ds	1
   760   00000D                     i2vfpfcnvrt@ap:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0xC
   764   00000D                     	ds	1
   765   00000E                     ??i2_vfpfcnvrt:
   766                           
   767                           ; 1 bytes @ 0xD
   768   00000E                     	ds	2
   769   000010                     i2vfpfcnvrt@done:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0xF
   773   000010                     	ds	1
   774   000011                     i2vfpfcnvrt@cp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x10
   778   000011                     	ds	2
   779   000013                     i2vfpfcnvrt@convarg:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x12
   783   000013                     	ds	4
   784   000017                     i2vfpfcnvrt@c:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x16
   788   000017                     	ds	1
   789   000018                     ?i2_vfprintf:
   790                           	callstack 0
   791   000018                     i2vfprintf@fp:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x17
   795   000018                     	ds	1
   796   000019                     i2vfprintf@fmt:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x18
   800   000019                     	ds	2
   801   00001B                     i2vfprintf@ap:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x1A
   805   00001B                     	ds	1
   806   00001C                     i2vfprintf@cfmt:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x1B
   810   00001C                     	ds	2
   811   00001E                     ?i2_sprintf:
   812                           	callstack 0
   813   00001E                     i2sprintf@s:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x1D
   817   00001E                     	ds	2
   818   000020                     i2sprintf@fmt:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1F
   822   000020                     	ds	4
   823   000024                     i2sprintf@ap:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x23
   827   000024                     	ds	1
   828   000025                     i2sprintf@f:
   829                           	callstack 0
   830                           
   831                           ; 12 bytes @ 0x24
   832   000025                     	ds	12
   833   000031                     ??_Hi_ISR:
   834                           
   835                           ; 1 bytes @ 0x30
   836   000031                     	ds	8
   837   000039                     ?i1___awmod:
   838                           	callstack 0
   839   000039                     i1UART_Write@data:
   840                           	callstack 0
   841   000039                     i1___awmod@dividend:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x38
   845   000039                     	ds	2
   846   00003B                     i1___awmod@divisor:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x3A
   850   00003B                     	ds	2
   851   00003D                     i1___awmod@counter:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x3C
   855   00003D                     	ds	1
   856   00003E                     i1___awmod@sign:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x3D
   860   00003E                     	ds	1
   861   00003F                     
   862                           ; 1 bytes @ 0x3E
   863   00003F                     	ds	1
   864                           
   865 ;;
   866 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   867 ;;
   868 ;; *************** function _main *****************
   869 ;; Defined at:
   870 ;;		line 51 in file "main.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   884 ;;      Params:         0       0       0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0
   886 ;;      Temps:          0       2       0       0       0       0       0
   887 ;;      Totals:         0       2       0       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels required when called: 15
   890 ;; This function calls:
   891 ;;		_ClearBuffer
   892 ;;		_SYSTEM_Initialize
   893 ;;		_UART_Write_Text
   894 ;;		_add_score
   895 ;;		_strcpy
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text0
   902   000070                     __ptext0:
   903                           	callstack 0
   904   000070                     _main:
   905                           	callstack 16
   906   000070                     
   907                           ;main.c: 53:     SYSTEM_Initialize() ;
   908   000070  EC53  F00A         	call	_SYSTEM_Initialize	;wreg free
   909   000074                     
   910                           ;main.c: 54:     LATDbits.LD0 = 1;
   911   000074  808C               	bsf	140,0,c	;volatile
   912   000076                     
   913                           ;main.c: 55:     _delay((unsigned long)((100)*(1000000/4000.0)));
   914   000076  0E21               	movlw	33
   915   000078  0100               	movlb	0	; () banked
   916   00007A  6FF2               	movwf	??_main& (0+255),b
   917   00007C  0E76               	movlw	118
   918   00007E                     u2167:
   919   00007E  2EE8               	decfsz	wreg,f,c
   920   000080  D7FE               	bra	u2167
   921   000082  2FF2               	decfsz	??_main& (0+255),f,b
   922   000084  D7FC               	bra	u2167
   923   000086  0000               	nop	
   924   000088                     
   925                           ;main.c: 56:     LATDbits.LD0 = 0;
   926   000088  908C               	bcf	140,0,c	;volatile
   927   00008A                     
   928                           ;main.c: 57:     strcpy(str,"Welcome to the shooting game!\n\r");
   929   00008A  0E00               	movlw	low _str
   930   00008C  0100               	movlb	0	; () banked
   931   00008E  6FC0               	movwf	strcpy@dest& (0+255),b
   932   000090  0E01               	movlw	high _str
   933   000092  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
   934   000094  0E4C               	movlw	low STR_3
   935   000096  6FC2               	movwf	strcpy@src& (0+255),b
   936   000098  0E7D               	movlw	high STR_3
   937   00009A  6FC3               	movwf	(strcpy@src+1)& (0+255),b
   938   00009C  ECBC  F009         	call	_strcpy	;wreg free
   939   0000A0                     
   940                           ;main.c: 58:     UART_Write_Text(str);
   941   0000A0  0E00               	movlw	low _str
   942   0000A2  0100               	movlb	0	; () banked
   943   0000A4  6FC1               	movwf	UART_Write_Text@text& (0+255),b
   944   0000A6  0E01               	movlw	high _str
   945   0000A8  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
   946   0000AA  ECDB  F008         	call	_UART_Write_Text	;wreg free
   947   0000AE                     
   948                           ;main.c: 59:     ClearBuffer();
   949   0000AE  ECFD  F008         	call	_ClearBuffer	;wreg free
   950   0000B2                     
   951                           ;main.c: 60:     strcpy(str,"Press the button to start shooting!\n\r");
   952   0000B2  0E00               	movlw	low _str
   953   0000B4  0100               	movlb	0	; () banked
   954   0000B6  6FC0               	movwf	strcpy@dest& (0+255),b
   955   0000B8  0E01               	movlw	high _str
   956   0000BA  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
   957   0000BC  0E26               	movlw	low STR_4
   958   0000BE  6FC2               	movwf	strcpy@src& (0+255),b
   959   0000C0  0E7D               	movlw	high STR_4
   960   0000C2  6FC3               	movwf	(strcpy@src+1)& (0+255),b
   961   0000C4  ECBC  F009         	call	_strcpy	;wreg free
   962   0000C8                     
   963                           ;main.c: 61:     UART_Write_Text(str);
   964   0000C8  0E00               	movlw	low _str
   965   0000CA  0100               	movlb	0	; () banked
   966   0000CC  6FC1               	movwf	UART_Write_Text@text& (0+255),b
   967   0000CE  0E01               	movlw	high _str
   968   0000D0  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
   969   0000D2  ECDB  F008         	call	_UART_Write_Text	;wreg free
   970   0000D6                     
   971                           ;main.c: 62:     ClearBuffer();
   972   0000D6  ECFD  F008         	call	_ClearBuffer	;wreg free
   973   0000DA                     
   974                           ;main.c: 63:     strcpy(str,"Don't forget to keep an eye on the time!\n\r");
   975   0000DA  0E00               	movlw	low _str
   976   0000DC  0100               	movlb	0	; () banked
   977   0000DE  6FC0               	movwf	strcpy@dest& (0+255),b
   978   0000E0  0E01               	movlw	high _str
   979   0000E2  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
   980   0000E4  0EFB               	movlw	low STR_5
   981   0000E6  6FC2               	movwf	strcpy@src& (0+255),b
   982   0000E8  0E7C               	movlw	high STR_5
   983   0000EA  6FC3               	movwf	(strcpy@src+1)& (0+255),b
   984   0000EC  ECBC  F009         	call	_strcpy	;wreg free
   985   0000F0                     
   986                           ;main.c: 64:     UART_Write_Text(str);
   987   0000F0  0E00               	movlw	low _str
   988   0000F2  0100               	movlb	0	; () banked
   989   0000F4  6FC1               	movwf	UART_Write_Text@text& (0+255),b
   990   0000F6  0E01               	movlw	high _str
   991   0000F8  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
   992   0000FA  ECDB  F008         	call	_UART_Write_Text	;wreg free
   993   0000FE                     
   994                           ;main.c: 65:     ClearBuffer();
   995   0000FE  ECFD  F008         	call	_ClearBuffer	;wreg free
   996   000102                     
   997                           ;main.c: 66:     score = 0;
   998   000102  0E00               	movlw	0
   999   000104  0100               	movlb	0	; () banked
  1000   000106  6FB9               	movwf	(_score+1)& (0+255),b
  1001   000108  0E00               	movlw	0
  1002   00010A  6FB8               	movwf	_score& (0+255),b
  1003   00010C                     
  1004                           ; BSR set to: 0
  1005                           ;main.c: 67:     button = 1;
  1006   00010C  0E00               	movlw	0
  1007   00010E  6E43               	movwf	(_button+1)^0,c
  1008   000110  0E01               	movlw	1
  1009   000112  6E42               	movwf	_button^0,c
  1010   000114                     l2395:
  1011                           
  1012                           ;main.c: 69:         if(down == 6){
  1013   000114  0E06               	movlw	6
  1014   000116  0100               	movlb	0	; () banked
  1015   000118  19B2               	xorwf	_down& (0+255),w,b
  1016   00011A  11B3               	iorwf	(_down+1)& (0+255),w,b
  1017   00011C  A4D8               	btfss	status,2,c
  1018   00011E  EF93  F000         	goto	u1801
  1019   000122  EF95  F000         	goto	u1800
  1020   000126                     u1801:
  1021   000126  EFFA  F000         	goto	l2429
  1022   00012A                     u1800:
  1023   00012A                     
  1024                           ; BSR set to: 0
  1025                           ;main.c: 70:             strcpy(str,"\n\rGood Job !\n\r");
  1026   00012A  0E00               	movlw	low _str
  1027   00012C  6FC0               	movwf	strcpy@dest& (0+255),b
  1028   00012E  0E01               	movlw	high _str
  1029   000130  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
  1030   000132  0E8B               	movlw	low STR_6
  1031   000134  6FC2               	movwf	strcpy@src& (0+255),b
  1032   000136  0E7D               	movlw	high STR_6
  1033   000138  6FC3               	movwf	(strcpy@src+1)& (0+255),b
  1034   00013A  ECBC  F009         	call	_strcpy	;wreg free
  1035   00013E                     
  1036                           ;main.c: 71:             UART_Write_Text(str);
  1037   00013E  0E00               	movlw	low _str
  1038   000140  0100               	movlb	0	; () banked
  1039   000142  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1040   000144  0E01               	movlw	high _str
  1041   000146  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1042   000148  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1043   00014C                     
  1044                           ;main.c: 72:             ClearBuffer();
  1045   00014C  ECFD  F008         	call	_ClearBuffer	;wreg free
  1046                           
  1047                           ;main.c: 73:             strcpy(str,"Press the button to continue the challenge!\n\r");
  1048   000150  0E00               	movlw	low _str
  1049   000152  0100               	movlb	0	; () banked
  1050   000154  6FC0               	movwf	strcpy@dest& (0+255),b
  1051   000156  0E01               	movlw	high _str
  1052   000158  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
  1053   00015A  0ECD               	movlw	low STR_7
  1054   00015C  6FC2               	movwf	strcpy@src& (0+255),b
  1055   00015E  0E7C               	movlw	high STR_7
  1056   000160  6FC3               	movwf	(strcpy@src+1)& (0+255),b
  1057   000162  ECBC  F009         	call	_strcpy	;wreg free
  1058   000166                     
  1059                           ;main.c: 74:             UART_Write_Text(str);
  1060   000166  0E00               	movlw	low _str
  1061   000168  0100               	movlb	0	; () banked
  1062   00016A  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1063   00016C  0E01               	movlw	high _str
  1064   00016E  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1065   000170  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1066   000174                     
  1067                           ;main.c: 75:             ClearBuffer();
  1068   000174  ECFD  F008         	call	_ClearBuffer	;wreg free
  1069                           
  1070                           ;main.c: 76:             strcpy(str,"Don't forget to keep an eye on the time!\n\r");
  1071   000178  0E00               	movlw	low _str
  1072   00017A  0100               	movlb	0	; () banked
  1073   00017C  6FC0               	movwf	strcpy@dest& (0+255),b
  1074   00017E  0E01               	movlw	high _str
  1075   000180  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
  1076   000182  0EFB               	movlw	low STR_5
  1077   000184  6FC2               	movwf	strcpy@src& (0+255),b
  1078   000186  0E7C               	movlw	high STR_5
  1079   000188  6FC3               	movwf	(strcpy@src+1)& (0+255),b
  1080   00018A  ECBC  F009         	call	_strcpy	;wreg free
  1081   00018E                     
  1082                           ;main.c: 77:             UART_Write_Text(str);
  1083   00018E  0E00               	movlw	low _str
  1084   000190  0100               	movlb	0	; () banked
  1085   000192  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1086   000194  0E01               	movlw	high _str
  1087   000196  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1088   000198  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1089   00019C                     
  1090                           ;main.c: 78:             ClearBuffer();
  1091   00019C  ECFD  F008         	call	_ClearBuffer	;wreg free
  1092   0001A0                     
  1093                           ;main.c: 79:             stop = 0;
  1094   0001A0  0E00               	movlw	0
  1095   0001A2  0100               	movlb	0	; () banked
  1096   0001A4  6FB5               	movwf	(_stop+1)& (0+255),b
  1097   0001A6  0E00               	movlw	0
  1098   0001A8  6FB4               	movwf	_stop& (0+255),b
  1099   0001AA                     
  1100                           ; BSR set to: 0
  1101                           ;main.c: 80:             down = 0;
  1102   0001AA  0E00               	movlw	0
  1103   0001AC  6FB3               	movwf	(_down+1)& (0+255),b
  1104   0001AE  0E00               	movlw	0
  1105   0001B0  6FB2               	movwf	_down& (0+255),b
  1106   0001B2                     
  1107                           ; BSR set to: 0
  1108                           ;main.c: 81:             ready = 0;
  1109   0001B2  0E00               	movlw	0
  1110   0001B4  6FA5               	movwf	(_ready+1)& (0+255),b
  1111   0001B6  0E00               	movlw	0
  1112   0001B8  6FA4               	movwf	_ready& (0+255),b
  1113   0001BA                     
  1114                           ; BSR set to: 0
  1115                           ;main.c: 82:             button = 1;
  1116   0001BA  0E00               	movlw	0
  1117   0001BC  6E43               	movwf	(_button+1)^0,c
  1118   0001BE  0E01               	movlw	1
  1119   0001C0  6E42               	movwf	_button^0,c
  1120   0001C2                     
  1121                           ; BSR set to: 0
  1122                           ;main.c: 83:             LATDbits.LD1 = 0;
  1123   0001C2  928C               	bcf	140,1,c	;volatile
  1124   0001C4                     
  1125                           ; BSR set to: 0
  1126                           ;main.c: 84:              _delay((unsigned long)((5000)*(1000000/4000.0)));
  1127   0001C4  0E07               	movlw	7
  1128   0001C6  0100               	movlb	0	; () banked
  1129   0001C8  6FF3               	movwf	(??_main+1)& (0+255),b
  1130   0001CA  0E58               	movlw	88
  1131   0001CC  6FF2               	movwf	??_main& (0+255),b
  1132   0001CE  0E59               	movlw	89
  1133   0001D0                     u2177:
  1134   0001D0  2EE8               	decfsz	wreg,f,c
  1135   0001D2  D7FE               	bra	u2177
  1136   0001D4  2FF2               	decfsz	??_main& (0+255),f,b
  1137   0001D6  D7FC               	bra	u2177
  1138   0001D8  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1139   0001DA  D7FA               	bra	u2177
  1140   0001DC  D000               	nop2	
  1141   0001DE                     
  1142                           ;main.c: 85:             LATDbits.LD0 = 1;
  1143   0001DE  808C               	bsf	140,0,c	;volatile
  1144   0001E0                     
  1145                           ;main.c: 86:             _delay((unsigned long)((100)*(1000000/4000.0)));
  1146   0001E0  0E21               	movlw	33
  1147   0001E2  0100               	movlb	0	; () banked
  1148   0001E4  6FF2               	movwf	??_main& (0+255),b
  1149   0001E6  0E76               	movlw	118
  1150   0001E8                     u2187:
  1151   0001E8  2EE8               	decfsz	wreg,f,c
  1152   0001EA  D7FE               	bra	u2187
  1153   0001EC  2FF2               	decfsz	??_main& (0+255),f,b
  1154   0001EE  D7FC               	bra	u2187
  1155   0001F0  0000               	nop	
  1156   0001F2                     
  1157                           ;main.c: 87:             LATDbits.LD0 = 0;
  1158   0001F2  908C               	bcf	140,0,c	;volatile
  1159   0001F4                     l2429:
  1160                           
  1161                           ;main.c: 89:         if(stop == 1 && down != 6){
  1162   0001F4  0100               	movlb	0	; () banked
  1163   0001F6  05B4               	decf	_stop& (0+255),w,b
  1164   0001F8  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1165   0001FA  A4D8               	btfss	status,2,c
  1166   0001FC  EF02  F001         	goto	u1811
  1167   000200  EF04  F001         	goto	u1810
  1168   000204                     u1811:
  1169   000204  EF7B  F001         	goto	l2469
  1170   000208                     u1810:
  1171   000208                     
  1172                           ; BSR set to: 0
  1173   000208  0E06               	movlw	6
  1174   00020A  19B2               	xorwf	_down& (0+255),w,b
  1175   00020C  11B3               	iorwf	(_down+1)& (0+255),w,b
  1176   00020E  B4D8               	btfsc	status,2,c
  1177   000210  EF0C  F001         	goto	u1821
  1178   000214  EF0E  F001         	goto	u1820
  1179   000218                     u1821:
  1180   000218  EF7B  F001         	goto	l2469
  1181   00021C                     u1820:
  1182   00021C                     
  1183                           ; BSR set to: 0
  1184                           ;main.c: 90:             strcpy(str,"\rGame Over !\n\r");
  1185   00021C  0E00               	movlw	low _str
  1186   00021E  6FC0               	movwf	strcpy@dest& (0+255),b
  1187   000220  0E01               	movlw	high _str
  1188   000222  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
  1189   000224  0E9A               	movlw	low STR_9
  1190   000226  6FC2               	movwf	strcpy@src& (0+255),b
  1191   000228  0E7D               	movlw	high STR_9
  1192   00022A  6FC3               	movwf	(strcpy@src+1)& (0+255),b
  1193   00022C  ECBC  F009         	call	_strcpy	;wreg free
  1194   000230                     
  1195                           ;main.c: 91:             UART_Write_Text(str);
  1196   000230  0E00               	movlw	low _str
  1197   000232  0100               	movlb	0	; () banked
  1198   000234  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1199   000236  0E01               	movlw	high _str
  1200   000238  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1201   00023A  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1202   00023E                     
  1203                           ;main.c: 92:             ClearBuffer();
  1204   00023E  ECFD  F008         	call	_ClearBuffer	;wreg free
  1205                           
  1206                           ;main.c: 93:             strcpy(str,"Press the button to restart!\n\r");
  1207   000242  0E00               	movlw	low _str
  1208   000244  0100               	movlb	0	; () banked
  1209   000246  6FC0               	movwf	strcpy@dest& (0+255),b
  1210   000248  0E01               	movlw	high _str
  1211   00024A  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
  1212   00024C  0E6C               	movlw	low STR_10
  1213   00024E  6FC2               	movwf	strcpy@src& (0+255),b
  1214   000250  0E7D               	movlw	high STR_10
  1215   000252  6FC3               	movwf	(strcpy@src+1)& (0+255),b
  1216   000254  ECBC  F009         	call	_strcpy	;wreg free
  1217   000258                     
  1218                           ;main.c: 94:             UART_Write_Text(str);
  1219   000258  0E00               	movlw	low _str
  1220   00025A  0100               	movlb	0	; () banked
  1221   00025C  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1222   00025E  0E01               	movlw	high _str
  1223   000260  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1224   000262  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1225   000266                     
  1226                           ;main.c: 95:             ClearBuffer();
  1227   000266  ECFD  F008         	call	_ClearBuffer	;wreg free
  1228                           
  1229                           ;main.c: 96:             strcpy(str,"Don't forget to keep an eye on the time!\n\r");
  1230   00026A  0E00               	movlw	low _str
  1231   00026C  0100               	movlb	0	; () banked
  1232   00026E  6FC0               	movwf	strcpy@dest& (0+255),b
  1233   000270  0E01               	movlw	high _str
  1234   000272  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
  1235   000274  0EFB               	movlw	low STR_5
  1236   000276  6FC2               	movwf	strcpy@src& (0+255),b
  1237   000278  0E7C               	movlw	high STR_5
  1238   00027A  6FC3               	movwf	(strcpy@src+1)& (0+255),b
  1239   00027C  ECBC  F009         	call	_strcpy	;wreg free
  1240   000280                     
  1241                           ;main.c: 97:             UART_Write_Text(str);
  1242   000280  0E00               	movlw	low _str
  1243   000282  0100               	movlb	0	; () banked
  1244   000284  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1245   000286  0E01               	movlw	high _str
  1246   000288  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1247   00028A  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1248   00028E                     
  1249                           ;main.c: 98:             ClearBuffer();
  1250   00028E  ECFD  F008         	call	_ClearBuffer	;wreg free
  1251   000292                     
  1252                           ;main.c: 99:             stop = 0;
  1253   000292  0E00               	movlw	0
  1254   000294  0100               	movlb	0	; () banked
  1255   000296  6FB5               	movwf	(_stop+1)& (0+255),b
  1256   000298  0E00               	movlw	0
  1257   00029A  6FB4               	movwf	_stop& (0+255),b
  1258   00029C                     
  1259                           ; BSR set to: 0
  1260                           ;main.c: 100:             down = 0;
  1261   00029C  0E00               	movlw	0
  1262   00029E  6FB3               	movwf	(_down+1)& (0+255),b
  1263   0002A0  0E00               	movlw	0
  1264   0002A2  6FB2               	movwf	_down& (0+255),b
  1265   0002A4                     
  1266                           ; BSR set to: 0
  1267                           ;main.c: 101:             score = 0;
  1268   0002A4  0E00               	movlw	0
  1269   0002A6  6FB9               	movwf	(_score+1)& (0+255),b
  1270   0002A8  0E00               	movlw	0
  1271   0002AA  6FB8               	movwf	_score& (0+255),b
  1272   0002AC                     
  1273                           ; BSR set to: 0
  1274                           ;main.c: 102:             state = 0;
  1275   0002AC  0E00               	movlw	0
  1276   0002AE  6FB7               	movwf	(_state+1)& (0+255),b
  1277   0002B0  0E00               	movlw	0
  1278   0002B2  6FB6               	movwf	_state& (0+255),b
  1279   0002B4                     
  1280                           ; BSR set to: 0
  1281                           ;main.c: 103:             ready = 0;
  1282   0002B4  0E00               	movlw	0
  1283   0002B6  6FA5               	movwf	(_ready+1)& (0+255),b
  1284   0002B8  0E00               	movlw	0
  1285   0002BA  6FA4               	movwf	_ready& (0+255),b
  1286   0002BC                     
  1287                           ; BSR set to: 0
  1288                           ;main.c: 104:             button = 1;
  1289   0002BC  0E00               	movlw	0
  1290   0002BE  6E43               	movwf	(_button+1)^0,c
  1291   0002C0  0E01               	movlw	1
  1292   0002C2  6E42               	movwf	_button^0,c
  1293   0002C4                     
  1294                           ; BSR set to: 0
  1295                           ;main.c: 105:             LATDbits.LD1 = 0;
  1296   0002C4  928C               	bcf	140,1,c	;volatile
  1297   0002C6                     
  1298                           ; BSR set to: 0
  1299                           ;main.c: 106:              _delay((unsigned long)((5000)*(1000000/4000.0)));
  1300   0002C6  0E07               	movlw	7
  1301   0002C8  0100               	movlb	0	; () banked
  1302   0002CA  6FF3               	movwf	(??_main+1)& (0+255),b
  1303   0002CC  0E58               	movlw	88
  1304   0002CE  6FF2               	movwf	??_main& (0+255),b
  1305   0002D0  0E59               	movlw	89
  1306   0002D2                     u2197:
  1307   0002D2  2EE8               	decfsz	wreg,f,c
  1308   0002D4  D7FE               	bra	u2197
  1309   0002D6  2FF2               	decfsz	??_main& (0+255),f,b
  1310   0002D8  D7FC               	bra	u2197
  1311   0002DA  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1312   0002DC  D7FA               	bra	u2197
  1313   0002DE  D000               	nop2	
  1314   0002E0                     
  1315                           ;main.c: 107:             LATDbits.LD0 = 1;
  1316   0002E0  808C               	bsf	140,0,c	;volatile
  1317   0002E2                     
  1318                           ;main.c: 108:             _delay((unsigned long)((100)*(1000000/4000.0)));
  1319   0002E2  0E21               	movlw	33
  1320   0002E4  0100               	movlb	0	; () banked
  1321   0002E6  6FF2               	movwf	??_main& (0+255),b
  1322   0002E8  0E76               	movlw	118
  1323   0002EA                     u2207:
  1324   0002EA  2EE8               	decfsz	wreg,f,c
  1325   0002EC  D7FE               	bra	u2207
  1326   0002EE  2FF2               	decfsz	??_main& (0+255),f,b
  1327   0002F0  D7FC               	bra	u2207
  1328   0002F2  0000               	nop	
  1329   0002F4                     
  1330                           ;main.c: 109:             LATDbits.LD0 = 0;
  1331   0002F4  908C               	bcf	140,0,c	;volatile
  1332   0002F6                     l2469:
  1333                           
  1334                           ;main.c: 111:         if(PORTBbits.RB1 == 1 && stop == 0){
  1335   0002F6  A281               	btfss	129,1,c	;volatile
  1336   0002F8  EF80  F001         	goto	u1831
  1337   0002FC  EF82  F001         	goto	u1830
  1338   000300                     u1831:
  1339   000300  EF9D  F001         	goto	l2477
  1340   000304                     u1830:
  1341   000304  0100               	movlb	0	; () banked
  1342   000306  51B4               	movf	_stop& (0+255),w,b
  1343   000308  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1344   00030A  A4D8               	btfss	status,2,c
  1345   00030C  EF8A  F001         	goto	u1841
  1346   000310  EF8C  F001         	goto	u1840
  1347   000314                     u1841:
  1348   000314  EF9D  F001         	goto	l2477
  1349   000318                     u1840:
  1350   000318                     
  1351                           ; BSR set to: 0
  1352                           ;main.c: 112:             stop = 1;
  1353   000318  0E00               	movlw	0
  1354   00031A  6FB5               	movwf	(_stop+1)& (0+255),b
  1355   00031C  0E01               	movlw	1
  1356   00031E  6FB4               	movwf	_stop& (0+255),b
  1357   000320                     
  1358                           ; BSR set to: 0
  1359                           ;main.c: 113:             _delay((unsigned long)((1000)*(1000000/4000.0)));
  1360   000320  0E02               	movlw	2
  1361   000322  0100               	movlb	0	; () banked
  1362   000324  6FF3               	movwf	(??_main+1)& (0+255),b
  1363   000326  0E45               	movlw	69
  1364   000328  6FF2               	movwf	??_main& (0+255),b
  1365   00032A  0EA9               	movlw	169
  1366   00032C                     u2217:
  1367   00032C  2EE8               	decfsz	wreg,f,c
  1368   00032E  D7FE               	bra	u2217
  1369   000330  2FF2               	decfsz	??_main& (0+255),f,b
  1370   000332  D7FC               	bra	u2217
  1371   000334  2FF3               	decfsz	(??_main+1)& (0+255),f,b
  1372   000336  D7FA               	bra	u2217
  1373   000338  D000               	nop2	
  1374   00033A                     l2477:
  1375                           
  1376                           ;main.c: 115:         if(PORTAbits.RA0 == 0 && stop == 0 && d1 == 0 && ready==1){
  1377   00033A  B080               	btfsc	128,0,c	;volatile
  1378   00033C  EFA2  F001         	goto	u1851
  1379   000340  EFA4  F001         	goto	u1850
  1380   000344                     u1851:
  1381   000344  EFC8  F001         	goto	l2491
  1382   000348                     u1850:
  1383   000348  0100               	movlb	0	; () banked
  1384   00034A  51B4               	movf	_stop& (0+255),w,b
  1385   00034C  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1386   00034E  A4D8               	btfss	status,2,c
  1387   000350  EFAC  F001         	goto	u1861
  1388   000354  EFAE  F001         	goto	u1860
  1389   000358                     u1861:
  1390   000358  EFC8  F001         	goto	l2491
  1391   00035C                     u1860:
  1392   00035C                     
  1393                           ; BSR set to: 0
  1394   00035C  51B0               	movf	_d1& (0+255),w,b
  1395   00035E  11B1               	iorwf	(_d1+1)& (0+255),w,b
  1396   000360  A4D8               	btfss	status,2,c
  1397   000362  EFB5  F001         	goto	u1871
  1398   000366  EFB7  F001         	goto	u1870
  1399   00036A                     u1871:
  1400   00036A  EFC8  F001         	goto	l2491
  1401   00036E                     u1870:
  1402   00036E                     
  1403                           ; BSR set to: 0
  1404   00036E  05A4               	decf	_ready& (0+255),w,b
  1405   000370  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1406   000372  A4D8               	btfss	status,2,c
  1407   000374  EFBE  F001         	goto	u1881
  1408   000378  EFC0  F001         	goto	u1880
  1409   00037C                     u1881:
  1410   00037C  EFC8  F001         	goto	l2491
  1411   000380                     u1880:
  1412   000380                     
  1413                           ; BSR set to: 0
  1414                           ;main.c: 116:             d1 = 1;
  1415   000380  0E00               	movlw	0
  1416   000382  6FB1               	movwf	(_d1+1)& (0+255),b
  1417   000384  0E01               	movlw	1
  1418   000386  6FB0               	movwf	_d1& (0+255),b
  1419   000388                     
  1420                           ; BSR set to: 0
  1421                           ;main.c: 117:             down ++;
  1422   000388  4BB2               	infsnz	_down& (0+255),f,b
  1423   00038A  2BB3               	incf	(_down+1)& (0+255),f,b
  1424   00038C                     
  1425                           ; BSR set to: 0
  1426                           ;main.c: 118:             add_score();
  1427   00038C  EC3E  F005         	call	_add_score	;wreg free
  1428   000390                     l2491:
  1429                           
  1430                           ;main.c: 120:          if(PORTAbits.RA1 == 0 && stop == 0 && d2 == 0 && ready==1){
  1431   000390  B280               	btfsc	128,1,c	;volatile
  1432   000392  EFCD  F001         	goto	u1891
  1433   000396  EFCF  F001         	goto	u1890
  1434   00039A                     u1891:
  1435   00039A  EFF3  F001         	goto	l2505
  1436   00039E                     u1890:
  1437   00039E  0100               	movlb	0	; () banked
  1438   0003A0  51B4               	movf	_stop& (0+255),w,b
  1439   0003A2  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1440   0003A4  A4D8               	btfss	status,2,c
  1441   0003A6  EFD7  F001         	goto	u1901
  1442   0003AA  EFD9  F001         	goto	u1900
  1443   0003AE                     u1901:
  1444   0003AE  EFF3  F001         	goto	l2505
  1445   0003B2                     u1900:
  1446   0003B2                     
  1447                           ; BSR set to: 0
  1448   0003B2  51AE               	movf	_d2& (0+255),w,b
  1449   0003B4  11AF               	iorwf	(_d2+1)& (0+255),w,b
  1450   0003B6  A4D8               	btfss	status,2,c
  1451   0003B8  EFE0  F001         	goto	u1911
  1452   0003BC  EFE2  F001         	goto	u1910
  1453   0003C0                     u1911:
  1454   0003C0  EFF3  F001         	goto	l2505
  1455   0003C4                     u1910:
  1456   0003C4                     
  1457                           ; BSR set to: 0
  1458   0003C4  05A4               	decf	_ready& (0+255),w,b
  1459   0003C6  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1460   0003C8  A4D8               	btfss	status,2,c
  1461   0003CA  EFE9  F001         	goto	u1921
  1462   0003CE  EFEB  F001         	goto	u1920
  1463   0003D2                     u1921:
  1464   0003D2  EFF3  F001         	goto	l2505
  1465   0003D6                     u1920:
  1466   0003D6                     
  1467                           ; BSR set to: 0
  1468                           ;main.c: 121:             d2 = 1;
  1469   0003D6  0E00               	movlw	0
  1470   0003D8  6FAF               	movwf	(_d2+1)& (0+255),b
  1471   0003DA  0E01               	movlw	1
  1472   0003DC  6FAE               	movwf	_d2& (0+255),b
  1473   0003DE                     
  1474                           ; BSR set to: 0
  1475                           ;main.c: 122:             down ++;
  1476   0003DE  4BB2               	infsnz	_down& (0+255),f,b
  1477   0003E0  2BB3               	incf	(_down+1)& (0+255),f,b
  1478   0003E2                     
  1479                           ; BSR set to: 0
  1480                           ;main.c: 123:             add_score();
  1481   0003E2  EC3E  F005         	call	_add_score	;wreg free
  1482   0003E6                     l2505:
  1483                           
  1484                           ;main.c: 125:          if(PORTAbits.RA2 == 0 && stop == 0 && d3 == 0 && ready==1){
  1485   0003E6  B480               	btfsc	128,2,c	;volatile
  1486   0003E8  EFF8  F001         	goto	u1931
  1487   0003EC  EFFA  F001         	goto	u1930
  1488   0003F0                     u1931:
  1489   0003F0  EF1E  F002         	goto	l2519
  1490   0003F4                     u1930:
  1491   0003F4  0100               	movlb	0	; () banked
  1492   0003F6  51B4               	movf	_stop& (0+255),w,b
  1493   0003F8  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1494   0003FA  A4D8               	btfss	status,2,c
  1495   0003FC  EF02  F002         	goto	u1941
  1496   000400  EF04  F002         	goto	u1940
  1497   000404                     u1941:
  1498   000404  EF1E  F002         	goto	l2519
  1499   000408                     u1940:
  1500   000408                     
  1501                           ; BSR set to: 0
  1502   000408  51AC               	movf	_d3& (0+255),w,b
  1503   00040A  11AD               	iorwf	(_d3+1)& (0+255),w,b
  1504   00040C  A4D8               	btfss	status,2,c
  1505   00040E  EF0B  F002         	goto	u1951
  1506   000412  EF0D  F002         	goto	u1950
  1507   000416                     u1951:
  1508   000416  EF1E  F002         	goto	l2519
  1509   00041A                     u1950:
  1510   00041A                     
  1511                           ; BSR set to: 0
  1512   00041A  05A4               	decf	_ready& (0+255),w,b
  1513   00041C  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1514   00041E  A4D8               	btfss	status,2,c
  1515   000420  EF14  F002         	goto	u1961
  1516   000424  EF16  F002         	goto	u1960
  1517   000428                     u1961:
  1518   000428  EF1E  F002         	goto	l2519
  1519   00042C                     u1960:
  1520   00042C                     
  1521                           ; BSR set to: 0
  1522                           ;main.c: 126:             d3 = 1;
  1523   00042C  0E00               	movlw	0
  1524   00042E  6FAD               	movwf	(_d3+1)& (0+255),b
  1525   000430  0E01               	movlw	1
  1526   000432  6FAC               	movwf	_d3& (0+255),b
  1527   000434                     
  1528                           ; BSR set to: 0
  1529                           ;main.c: 127:             down ++;
  1530   000434  4BB2               	infsnz	_down& (0+255),f,b
  1531   000436  2BB3               	incf	(_down+1)& (0+255),f,b
  1532   000438                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 128:             add_score();
  1535   000438  EC3E  F005         	call	_add_score	;wreg free
  1536   00043C                     l2519:
  1537                           
  1538                           ;main.c: 130:         if(PORTAbits.RA3 == 0 && stop == 0 && d4 == 0 && ready==1){
  1539   00043C  B680               	btfsc	128,3,c	;volatile
  1540   00043E  EF23  F002         	goto	u1971
  1541   000442  EF25  F002         	goto	u1970
  1542   000446                     u1971:
  1543   000446  EF49  F002         	goto	l2533
  1544   00044A                     u1970:
  1545   00044A  0100               	movlb	0	; () banked
  1546   00044C  51B4               	movf	_stop& (0+255),w,b
  1547   00044E  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1548   000450  A4D8               	btfss	status,2,c
  1549   000452  EF2D  F002         	goto	u1981
  1550   000456  EF2F  F002         	goto	u1980
  1551   00045A                     u1981:
  1552   00045A  EF49  F002         	goto	l2533
  1553   00045E                     u1980:
  1554   00045E                     
  1555                           ; BSR set to: 0
  1556   00045E  51AA               	movf	_d4& (0+255),w,b
  1557   000460  11AB               	iorwf	(_d4+1)& (0+255),w,b
  1558   000462  A4D8               	btfss	status,2,c
  1559   000464  EF36  F002         	goto	u1991
  1560   000468  EF38  F002         	goto	u1990
  1561   00046C                     u1991:
  1562   00046C  EF49  F002         	goto	l2533
  1563   000470                     u1990:
  1564   000470                     
  1565                           ; BSR set to: 0
  1566   000470  05A4               	decf	_ready& (0+255),w,b
  1567   000472  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1568   000474  A4D8               	btfss	status,2,c
  1569   000476  EF3F  F002         	goto	u2001
  1570   00047A  EF41  F002         	goto	u2000
  1571   00047E                     u2001:
  1572   00047E  EF49  F002         	goto	l2533
  1573   000482                     u2000:
  1574   000482                     
  1575                           ; BSR set to: 0
  1576                           ;main.c: 131:             d4 = 1;
  1577   000482  0E00               	movlw	0
  1578   000484  6FAB               	movwf	(_d4+1)& (0+255),b
  1579   000486  0E01               	movlw	1
  1580   000488  6FAA               	movwf	_d4& (0+255),b
  1581   00048A                     
  1582                           ; BSR set to: 0
  1583                           ;main.c: 132:             down ++;
  1584   00048A  4BB2               	infsnz	_down& (0+255),f,b
  1585   00048C  2BB3               	incf	(_down+1)& (0+255),f,b
  1586   00048E                     
  1587                           ; BSR set to: 0
  1588                           ;main.c: 133:             add_score();
  1589   00048E  EC3E  F005         	call	_add_score	;wreg free
  1590   000492                     l2533:
  1591                           
  1592                           ;main.c: 135:         if(PORTAbits.RA4 == 0 && stop == 0 && d5 == 0 && ready==1){
  1593   000492  B880               	btfsc	128,4,c	;volatile
  1594   000494  EF4E  F002         	goto	u2011
  1595   000498  EF50  F002         	goto	u2010
  1596   00049C                     u2011:
  1597   00049C  EF74  F002         	goto	l2547
  1598   0004A0                     u2010:
  1599   0004A0  0100               	movlb	0	; () banked
  1600   0004A2  51B4               	movf	_stop& (0+255),w,b
  1601   0004A4  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1602   0004A6  A4D8               	btfss	status,2,c
  1603   0004A8  EF58  F002         	goto	u2021
  1604   0004AC  EF5A  F002         	goto	u2020
  1605   0004B0                     u2021:
  1606   0004B0  EF74  F002         	goto	l2547
  1607   0004B4                     u2020:
  1608   0004B4                     
  1609                           ; BSR set to: 0
  1610   0004B4  51A8               	movf	_d5& (0+255),w,b
  1611   0004B6  11A9               	iorwf	(_d5+1)& (0+255),w,b
  1612   0004B8  A4D8               	btfss	status,2,c
  1613   0004BA  EF61  F002         	goto	u2031
  1614   0004BE  EF63  F002         	goto	u2030
  1615   0004C2                     u2031:
  1616   0004C2  EF74  F002         	goto	l2547
  1617   0004C6                     u2030:
  1618   0004C6                     
  1619                           ; BSR set to: 0
  1620   0004C6  05A4               	decf	_ready& (0+255),w,b
  1621   0004C8  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1622   0004CA  A4D8               	btfss	status,2,c
  1623   0004CC  EF6A  F002         	goto	u2041
  1624   0004D0  EF6C  F002         	goto	u2040
  1625   0004D4                     u2041:
  1626   0004D4  EF74  F002         	goto	l2547
  1627   0004D8                     u2040:
  1628   0004D8                     
  1629                           ; BSR set to: 0
  1630                           ;main.c: 136:             d5 = 1;
  1631   0004D8  0E00               	movlw	0
  1632   0004DA  6FA9               	movwf	(_d5+1)& (0+255),b
  1633   0004DC  0E01               	movlw	1
  1634   0004DE  6FA8               	movwf	_d5& (0+255),b
  1635   0004E0                     
  1636                           ; BSR set to: 0
  1637                           ;main.c: 137:             down ++;
  1638   0004E0  4BB2               	infsnz	_down& (0+255),f,b
  1639   0004E2  2BB3               	incf	(_down+1)& (0+255),f,b
  1640   0004E4                     
  1641                           ; BSR set to: 0
  1642                           ;main.c: 138:             add_score();
  1643   0004E4  EC3E  F005         	call	_add_score	;wreg free
  1644   0004E8                     l2547:
  1645                           
  1646                           ;main.c: 140:         if(PORTAbits.RA5 == 0 && stop == 0 && d6 == 0 && ready==1){
  1647   0004E8  BA80               	btfsc	128,5,c	;volatile
  1648   0004EA  EF79  F002         	goto	u2051
  1649   0004EE  EF7B  F002         	goto	u2050
  1650   0004F2                     u2051:
  1651   0004F2  EF8A  F000         	goto	l2395
  1652   0004F6                     u2050:
  1653   0004F6  0100               	movlb	0	; () banked
  1654   0004F8  51B4               	movf	_stop& (0+255),w,b
  1655   0004FA  11B5               	iorwf	(_stop+1)& (0+255),w,b
  1656   0004FC  A4D8               	btfss	status,2,c
  1657   0004FE  EF83  F002         	goto	u2061
  1658   000502  EF85  F002         	goto	u2060
  1659   000506                     u2061:
  1660   000506  EF8A  F000         	goto	l2395
  1661   00050A                     u2060:
  1662   00050A                     
  1663                           ; BSR set to: 0
  1664   00050A  51A6               	movf	_d6& (0+255),w,b
  1665   00050C  11A7               	iorwf	(_d6+1)& (0+255),w,b
  1666   00050E  A4D8               	btfss	status,2,c
  1667   000510  EF8C  F002         	goto	u2071
  1668   000514  EF8E  F002         	goto	u2070
  1669   000518                     u2071:
  1670   000518  EF8A  F000         	goto	l2395
  1671   00051C                     u2070:
  1672   00051C                     
  1673                           ; BSR set to: 0
  1674   00051C  05A4               	decf	_ready& (0+255),w,b
  1675   00051E  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1676   000520  A4D8               	btfss	status,2,c
  1677   000522  EF95  F002         	goto	u2081
  1678   000526  EF97  F002         	goto	u2080
  1679   00052A                     u2081:
  1680   00052A  EF8A  F000         	goto	l2395
  1681   00052E                     u2080:
  1682   00052E                     
  1683                           ; BSR set to: 0
  1684                           ;main.c: 141:             d6 = 1;
  1685   00052E  0E00               	movlw	0
  1686   000530  6FA7               	movwf	(_d6+1)& (0+255),b
  1687   000532  0E01               	movlw	1
  1688   000534  6FA6               	movwf	_d6& (0+255),b
  1689   000536                     
  1690                           ; BSR set to: 0
  1691                           ;main.c: 142:             down ++;
  1692   000536  4BB2               	infsnz	_down& (0+255),f,b
  1693   000538  2BB3               	incf	(_down+1)& (0+255),f,b
  1694   00053A                     
  1695                           ; BSR set to: 0
  1696                           ;main.c: 143:             add_score();
  1697   00053A  EC3E  F005         	call	_add_score	;wreg free
  1698   00053E  EF8A  F000         	goto	l2395
  1699   000542  EF36  F000         	goto	start
  1700   000546                     __end_of_main:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _add_score *****************
  1704 ;; Defined at:
  1705 ;;		line 22 in file "main.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1719 ;;      Params:         0       0       0       0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0       0       0
  1721 ;;      Temps:          0       2       0       0       0       0       0
  1722 ;;      Totals:         0       2       0       0       0       0       0
  1723 ;;Total ram usage:        2 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 14
  1726 ;; This function calls:
  1727 ;;		_ClearBuffer
  1728 ;;		_UART_Write_Text
  1729 ;;		_sprintf
  1730 ;;		_strcpy
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text1
  1737   000A7C                     __ptext1:
  1738                           	callstack 0
  1739   000A7C                     _add_score:
  1740                           	callstack 16
  1741   000A7C                     
  1742                           ;main.c: 23:     switch(state){
  1743   000A7C  EF5C  F005         	goto	l2285
  1744   000A80                     l2271:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 25:             score = 0;
  1748   000A80  0E00               	movlw	0
  1749   000A82  6FB9               	movwf	(_score+1)& (0+255),b
  1750   000A84  0E00               	movlw	0
  1751   000A86  6FB8               	movwf	_score& (0+255),b
  1752                           
  1753                           ;main.c: 26:             break;
  1754   000A88  EF7F  F005         	goto	l2287
  1755   000A8C                     l2273:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;main.c: 28:             score++;
  1759   000A8C  4BB8               	infsnz	_score& (0+255),f,b
  1760   000A8E  2BB9               	incf	(_score+1)& (0+255),f,b
  1761                           
  1762                           ;main.c: 29:             break;
  1763   000A90  EF7F  F005         	goto	l2287
  1764   000A94                     l2275:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;main.c: 31:             score += 2;
  1768   000A94  0E02               	movlw	2
  1769   000A96  27B8               	addwf	_score& (0+255),f,b
  1770   000A98  0E00               	movlw	0
  1771   000A9A  23B9               	addwfc	(_score+1)& (0+255),f,b
  1772                           
  1773                           ;main.c: 32:             break;
  1774   000A9C  EF7F  F005         	goto	l2287
  1775   000AA0                     l2277:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main.c: 34:             score += 3;
  1779   000AA0  0E03               	movlw	3
  1780   000AA2  27B8               	addwf	_score& (0+255),f,b
  1781   000AA4  0E00               	movlw	0
  1782   000AA6  23B9               	addwfc	(_score+1)& (0+255),f,b
  1783                           
  1784                           ;main.c: 35:             break;
  1785   000AA8  EF7F  F005         	goto	l2287
  1786   000AAC                     l2279:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 37:             score += 4;
  1790   000AAC  0E04               	movlw	4
  1791   000AAE  27B8               	addwf	_score& (0+255),f,b
  1792   000AB0  0E00               	movlw	0
  1793   000AB2  23B9               	addwfc	(_score+1)& (0+255),f,b
  1794                           
  1795                           ;main.c: 38:             break;
  1796   000AB4  EF7F  F005         	goto	l2287
  1797   000AB8                     l2285:
  1798   000AB8  C0B6  F0F0         	movff	_state,??_add_score
  1799   000ABC  C0B7  F0F1         	movff	_state+1,??_add_score+1
  1800                           
  1801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1802                           ; Switch size 1, requested type "simple"
  1803                           ; Number of cases is 1, Range of values is 0 to 0
  1804                           ; switch strategies available:
  1805                           ; Name         Instructions Cycles
  1806                           ; simple_byte            4     3 (average)
  1807                           ;	Chosen strategy is simple_byte
  1808   000AC0  0100               	movlb	0	; () banked
  1809   000AC2  51F1               	movf	(??_add_score+1)& (0+255),w,b
  1810   000AC4  0A00               	xorlw	0	; case 0
  1811   000AC6  B4D8               	btfsc	status,2,c
  1812   000AC8  EF68  F005         	goto	l2667
  1813   000ACC  EF56  F005         	goto	l2279
  1814   000AD0                     l2667:
  1815                           
  1816                           ; BSR set to: 0
  1817                           ; Switch size 1, requested type "simple"
  1818                           ; Number of cases is 5, Range of values is 0 to 4
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte           16     9 (average)
  1822                           ;	Chosen strategy is simple_byte
  1823   000AD0  51F0               	movf	??_add_score& (0+255),w,b
  1824   000AD2  0A00               	xorlw	0	; case 0
  1825   000AD4  B4D8               	btfsc	status,2,c
  1826   000AD6  EF40  F005         	goto	l2271
  1827   000ADA  0A01               	xorlw	1	; case 1
  1828   000ADC  B4D8               	btfsc	status,2,c
  1829   000ADE  EF46  F005         	goto	l2273
  1830   000AE2  0A03               	xorlw	3	; case 2
  1831   000AE4  B4D8               	btfsc	status,2,c
  1832   000AE6  EF4A  F005         	goto	l2275
  1833   000AEA  0A01               	xorlw	1	; case 3
  1834   000AEC  B4D8               	btfsc	status,2,c
  1835   000AEE  EF50  F005         	goto	l2277
  1836   000AF2  0A07               	xorlw	7	; case 4
  1837   000AF4  B4D8               	btfsc	status,2,c
  1838   000AF6  EF56  F005         	goto	l2279
  1839   000AFA  EF56  F005         	goto	l2279
  1840   000AFE                     l2287:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;main.c: 43:     strcpy(str,"\rscore : ");
  1844   000AFE  0E00               	movlw	low _str
  1845   000B00  6FC0               	movwf	strcpy@dest& (0+255),b
  1846   000B02  0E01               	movlw	high _str
  1847   000B04  6FC1               	movwf	(strcpy@dest+1)& (0+255),b
  1848   000B06  0EA9               	movlw	low STR_1
  1849   000B08  6FC2               	movwf	strcpy@src& (0+255),b
  1850   000B0A  0E7D               	movlw	high STR_1
  1851   000B0C  6FC3               	movwf	(strcpy@src+1)& (0+255),b
  1852   000B0E  ECBC  F009         	call	_strcpy	;wreg free
  1853   000B12                     
  1854                           ;main.c: 44:     UART_Write_Text(str);
  1855   000B12  0E00               	movlw	low _str
  1856   000B14  0100               	movlb	0	; () banked
  1857   000B16  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1858   000B18  0E01               	movlw	high _str
  1859   000B1A  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1860   000B1C  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1861   000B20                     
  1862                           ;main.c: 45:     ClearBuffer();
  1863   000B20  ECFD  F008         	call	_ClearBuffer	;wreg free
  1864   000B24                     
  1865                           ;main.c: 46:     sprintf(str,"%d",score);
  1866   000B24  0E00               	movlw	low _str
  1867   000B26  0100               	movlb	0	; () banked
  1868   000B28  6FDD               	movwf	sprintf@s& (0+255),b
  1869   000B2A  0E01               	movlw	high _str
  1870   000B2C  6FDE               	movwf	(sprintf@s+1)& (0+255),b
  1871   000B2E  0EBB               	movlw	low STR_2
  1872   000B30  6FDF               	movwf	sprintf@fmt& (0+255),b
  1873   000B32  0E7D               	movlw	high STR_2
  1874   000B34  6FE0               	movwf	(sprintf@fmt+1)& (0+255),b
  1875   000B36  C0B8  F0E1         	movff	_score,?_sprintf+4
  1876   000B3A  C0B9  F0E2         	movff	_score+1,?_sprintf+5
  1877   000B3E  ECB9  F008         	call	_sprintf	;wreg free
  1878   000B42                     
  1879                           ;main.c: 47:     UART_Write_Text(str);
  1880   000B42  0E00               	movlw	low _str
  1881   000B44  0100               	movlb	0	; () banked
  1882   000B46  6FC1               	movwf	UART_Write_Text@text& (0+255),b
  1883   000B48  0E01               	movlw	high _str
  1884   000B4A  6FC2               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1885   000B4C  ECDB  F008         	call	_UART_Write_Text	;wreg free
  1886   000B50                     
  1887                           ;main.c: 48:     ClearBuffer();
  1888   000B50  ECFD  F008         	call	_ClearBuffer	;wreg free
  1889   000B54  0012               	return		;funcret
  1890   000B56                     __end_of_add_score:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _strcpy *****************
  1894 ;; Defined at:
  1895 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  dest            2    5[BANK0 ] PTR unsigned char 
  1898 ;;		 -> str(200), 
  1899 ;;  src             2    7[BANK0 ] PTR const unsigned char 
  1900 ;;		 -> STR_13(10), STR_12(8), STR_11(43), STR_10(31), 
  1901 ;;		 -> STR_9(15), STR_8(43), STR_7(46), STR_6(15), 
  1902 ;;		 -> STR_5(43), STR_4(38), STR_3(32), STR_1(10), 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  d               2    9[BANK0 ] PTR unsigned char 
  1905 ;;		 -> str(200), 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2    5[BANK0 ] PTR unsigned char 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1915 ;;      Params:         0       4       0       0       0       0       0
  1916 ;;      Locals:         0       2       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0
  1918 ;;      Totals:         0       6       0       0       0       0       0
  1919 ;;Total ram usage:        6 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 9
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_add_score
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text2
  1931   001378                     __ptext2:
  1932                           	callstack 0
  1933   001378                     _strcpy:
  1934                           	callstack 21
  1935   001378  C0C0  F0C4         	movff	strcpy@dest,strcpy@d
  1936   00137C  C0C1  F0C5         	movff	strcpy@dest+1,strcpy@d+1
  1937   001380                     l2131:
  1938   001380  C0C2  FFF6         	movff	strcpy@src,tblptrl
  1939   001384  C0C3  FFF7         	movff	strcpy@src+1,tblptrh
  1940   001388  0100               	movlb	0	; () banked
  1941   00138A  4BC2               	infsnz	strcpy@src& (0+255),f,b
  1942   00138C  2BC3               	incf	(strcpy@src+1)& (0+255),f,b
  1943   00138E                     	if	0	;tblptru may be non-zero
  1944   00138E                     	endif
  1945   00138E                     	if	0	;tblptru may be non-zero
  1946   00138E                     	endif
  1947   00138E  C0C4  FFD9         	movff	strcpy@d,fsr2l
  1948   001392  C0C5  FFDA         	movff	strcpy@d+1,fsr2h
  1949   001396  4BC4               	infsnz	strcpy@d& (0+255),f,b
  1950   001398  2BC5               	incf	(strcpy@d+1)& (0+255),f,b
  1951   00139A  0008               	tblrd		*
  1952   00139C  CFF5 FFDF          	movff	tablat,indf2
  1953   0013A0  50DF               	movf	indf2,w,c
  1954   0013A2  A4D8               	btfss	status,2,c
  1955   0013A4  EFD6  F009         	goto	u1641
  1956   0013A8  EFD8  F009         	goto	u1640
  1957   0013AC                     u1641:
  1958   0013AC  EFC0  F009         	goto	l2131
  1959   0013B0                     u1640:
  1960   0013B0                     
  1961                           ; BSR set to: 0
  1962   0013B0  0012               	return		;funcret
  1963   0013B2                     __end_of_strcpy:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _sprintf *****************
  1967 ;; Defined at:
  1968 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  s               2   34[BANK0 ] PTR unsigned char 
  1971 ;;		 -> str(200), 
  1972 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  1973 ;;		 -> STR_14(3), STR_2(3), 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  f              12   41[BANK0 ] struct _IO_FILE
  1976 ;;  ret             2    0        int 
  1977 ;;  ap              1   40[BANK0 ] PTR void [1]
  1978 ;;		 -> ?_sprintf(2), 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2   34[BANK0 ] int 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1988 ;;      Params:         0       6       0       0       0       0       0
  1989 ;;      Locals:         0      13       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0
  1991 ;;      Totals:         0      19       0       0       0       0       0
  1992 ;;Total ram usage:       19 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 13
  1995 ;; This function calls:
  1996 ;;		_vfprintf
  1997 ;; This function is called by:
  1998 ;;		_add_score
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text3
  2003   001172                     __ptext3:
  2004                           	callstack 0
  2005   001172                     _sprintf:
  2006                           	callstack 16
  2007   001172  0EE1               	movlw	low (?_sprintf+4)
  2008   001174  0100               	movlb	0	; () banked
  2009   001176  6FE3               	movwf	sprintf@ap& (0+255),b
  2010   001178  C0DD  F0E4         	movff	sprintf@s,sprintf@f
  2011   00117C  C0DE  F0E5         	movff	sprintf@s+1,sprintf@f+1
  2012   001180                     
  2013                           ; BSR set to: 0
  2014   001180  0E00               	movlw	0
  2015   001182  6FE8               	movwf	(sprintf@f+4)& (0+255),b
  2016   001184  0E00               	movlw	0
  2017   001186  6FE7               	movwf	(sprintf@f+3)& (0+255),b
  2018   001188                     
  2019                           ; BSR set to: 0
  2020   001188  0E00               	movlw	0
  2021   00118A  6FEF               	movwf	(sprintf@f+11)& (0+255),b
  2022   00118C  0E00               	movlw	0
  2023   00118E  6FEE               	movwf	(sprintf@f+10)& (0+255),b
  2024   001190                     
  2025                           ; BSR set to: 0
  2026   001190  0EE4               	movlw	low sprintf@f
  2027   001192  6FD7               	movwf	vfprintf@fp& (0+255),b
  2028   001194  C0DF  F0D8         	movff	sprintf@fmt,vfprintf@fmt
  2029   001198  C0E0  F0D9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2030   00119C  0EE3               	movlw	low sprintf@ap
  2031   00119E  6FDA               	movwf	vfprintf@ap& (0+255),b
  2032   0011A0  EC73  F008         	call	_vfprintf	;wreg free
  2033   0011A4  0100               	movlb	0	; () banked
  2034   0011A6  51E7               	movf	(sprintf@f+3)& (0+255),w,b
  2035   0011A8  25DD               	addwf	sprintf@s& (0+255),w,b
  2036   0011AA  6ED9               	movwf	fsr2l,c
  2037   0011AC  51E8               	movf	(sprintf@f+4)& (0+255),w,b
  2038   0011AE  21DE               	addwfc	(sprintf@s+1)& (0+255),w,b
  2039   0011B0  6EDA               	movwf	fsr2h,c
  2040   0011B2  6ADF               	clrf	indf2,c
  2041   0011B4                     
  2042                           ; BSR set to: 0
  2043   0011B4  0012               	return		;funcret
  2044   0011B6                     __end_of_sprintf:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _vfprintf *****************
  2048 ;; Defined at:
  2049 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  fp              1   28[BANK0 ] PTR struct _IO_FILE
  2052 ;;		 -> sprintf@f(12), 
  2053 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2054 ;;		 -> STR_14(3), STR_2(3), 
  2055 ;;  ap              1   31[BANK0 ] PTR PTR void 
  2056 ;;		 -> sprintf@ap(1), 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
  2059 ;;		 -> STR_14(3), STR_2(3), 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2   28[BANK0 ] int 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2069 ;;      Params:         0       4       0       0       0       0       0
  2070 ;;      Locals:         0       2       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0
  2072 ;;      Totals:         0       6       0       0       0       0       0
  2073 ;;Total ram usage:        6 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 12
  2076 ;; This function calls:
  2077 ;;		_vfpfcnvrt
  2078 ;; This function is called by:
  2079 ;;		_sprintf
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text4
  2084   0010E6                     __ptext4:
  2085                           	callstack 0
  2086   0010E6                     _vfprintf:
  2087                           	callstack 16
  2088   0010E6                     
  2089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2090   0010E6  C0D8  F0DB         	movff	vfprintf@fmt,vfprintf@cfmt
  2091   0010EA  C0D9  F0DC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2094   0010EE  EF82  F008         	goto	l2073
  2095   0010F2                     l2071:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2098   0010F2  C0D7  F0CA         	movff	vfprintf@fp,vfpfcnvrt@fp
  2099   0010F6  0EDB               	movlw	low vfprintf@cfmt
  2100   0010F8  0100               	movlb	0	; () banked
  2101   0010FA  6FCB               	movwf	vfpfcnvrt@fmt& (0+255),b
  2102   0010FC  C0DA  F0CC         	movff	vfprintf@ap,vfpfcnvrt@ap
  2103   001100  ECA3  F002         	call	_vfpfcnvrt	;wreg free
  2104   001104                     l2073:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2107   001104  C0DB  FFF6         	movff	vfprintf@cfmt,tblptrl
  2108   001108  C0DC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2109   00110C                     	if	0	;tblptru may be non-zero
  2110   00110C                     	endif
  2111   00110C                     	if	0	;tblptru may be non-zero
  2112   00110C                     	endif
  2113   00110C  0008               	tblrd		*
  2114   00110E  50F5               	movf	tablat,w,c
  2115   001110  0900               	iorlw	0
  2116   001112  A4D8               	btfss	status,2,c
  2117   001114  EF8E  F008         	goto	u1531
  2118   001118  EF90  F008         	goto	u1530
  2119   00111C                     u1531:
  2120   00111C  EF79  F008         	goto	l2071
  2121   001120                     u1530:
  2122   001120                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2124   001120  0E00               	movlw	0
  2125   001122  0100               	movlb	0	; () banked
  2126   001124  6FD8               	movwf	(?_vfprintf+1)& (0+255),b
  2127   001126  0E00               	movlw	0
  2128   001128  6FD7               	movwf	?_vfprintf& (0+255),b
  2129   00112A                     
  2130                           ; BSR set to: 0
  2131   00112A  0012               	return		;funcret
  2132   00112C                     __end_of_vfprintf:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _vfpfcnvrt *****************
  2136 ;; Defined at:
  2137 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  2140 ;;		 -> sprintf@f(12), 
  2141 ;;  fmt             1   16[BANK0 ] PTR PTR unsigned char 
  2142 ;;		 -> vfprintf@cfmt(2), 
  2143 ;;  ap              1   17[BANK0 ] PTR PTR void 
  2144 ;;		 -> sprintf@ap(1), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  convarg         4   23[BANK0 ] struct .
  2147 ;;  cp              2   21[BANK0 ] PTR unsigned char 
  2148 ;;		 -> STR_14(3), STR_2(3), 
  2149 ;;  c               1   27[BANK0 ] unsigned char 
  2150 ;;  done            1   20[BANK0 ] _Bool 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2160 ;;      Params:         0       3       0       0       0       0       0
  2161 ;;      Locals:         0       8       0       0       0       0       0
  2162 ;;      Temps:          0       2       0       0       0       0       0
  2163 ;;      Totals:         0      13       0       0       0       0       0
  2164 ;;Total ram usage:       13 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 11
  2167 ;; This function calls:
  2168 ;;		___awdiv
  2169 ;;		___awmod
  2170 ;;		_abs
  2171 ;;		_fputc
  2172 ;; This function is called by:
  2173 ;;		_vfprintf
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text5
  2178   000546                     __ptext5:
  2179                           	callstack 0
  2180   000546                     _vfpfcnvrt:
  2181                           	callstack 16
  2182   000546                     
  2183                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2184   000546  0100               	movlb	0	; () banked
  2185   000548  51CB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2186   00054A  6ED9               	movwf	fsr2l,c
  2187   00054C  6ADA               	clrf	fsr2h,c
  2188   00054E  CFDE FFF6          	movff	postinc2,tblptrl
  2189   000552  CFDD FFF7          	movff	postdec2,tblptrh
  2190   000556                     	if	0	;tblptru may be non-zero
  2191   000556                     	endif
  2192   000556                     	if	0	;tblptru may be non-zero
  2193   000556                     	endif
  2194   000556  0008               	tblrd		*
  2195   000558  50F5               	movf	tablat,w,c
  2196   00055A  0A25               	xorlw	37
  2197   00055C  A4D8               	btfss	status,2,c
  2198   00055E  EFB3  F002         	goto	u1251
  2199   000562  EFB5  F002         	goto	u1250
  2200   000566                     u1251:
  2201   000566  EF80  F003         	goto	l1961
  2202   00056A                     u1250:
  2203   00056A                     
  2204                           ; BSR set to: 0
  2205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2206   00056A  51CB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2207   00056C  6ED9               	movwf	fsr2l,c
  2208   00056E  6ADA               	clrf	fsr2h,c
  2209   000570  2ADE               	incf	postinc2,f,c
  2210   000572  0E00               	movlw	0
  2211   000574  22DD               	addwfc	postdec2,f,c
  2212   000576                     
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2215   000576  0E00               	movlw	0
  2216   000578  6FA1               	movwf	(_width+1)& (0+255),b
  2217   00057A  0E00               	movlw	0
  2218   00057C  6FA0               	movwf	_width& (0+255),b
  2219   00057E  C0A0  F0BA         	movff	_width,_flags
  2220   000582                     
  2221                           ; BSR set to: 0
  2222                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2223   000582  69A2               	setf	_prec& (0+255),b
  2224   000584  69A3               	setf	(_prec+1)& (0+255),b
  2225   000586                     
  2226                           ; BSR set to: 0
  2227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2228   000586  51CB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2229   000588  6ED9               	movwf	fsr2l,c
  2230   00058A  6ADA               	clrf	fsr2h,c
  2231   00058C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@cp
  2232   000590  CFDD F0D1          	movff	postdec2,vfpfcnvrt@cp+1
  2233   000594                     
  2234                           ; BSR set to: 0
  2235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2236   000594  C0D0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2237   000598  C0D1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2238   00059C                     	if	0	;tblptru may be non-zero
  2239   00059C                     	endif
  2240   00059C                     	if	0	;tblptru may be non-zero
  2241   00059C                     	endif
  2242   00059C  0008               	tblrd		*
  2243   00059E  50F5               	movf	tablat,w,c
  2244   0005A0  0A64               	xorlw	100
  2245   0005A2  B4D8               	btfsc	status,2,c
  2246   0005A4  EFD6  F002         	goto	u1261
  2247   0005A8  EFD8  F002         	goto	u1260
  2248   0005AC                     u1261:
  2249   0005AC  EFE6  F002         	goto	l1931
  2250   0005B0                     u1260:
  2251   0005B0                     
  2252                           ; BSR set to: 0
  2253   0005B0  C0D0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2254   0005B4  C0D1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2255   0005B8                     	if	0	;tblptru may be non-zero
  2256   0005B8                     	endif
  2257   0005B8                     	if	0	;tblptru may be non-zero
  2258   0005B8                     	endif
  2259   0005B8  0008               	tblrd		*
  2260   0005BA  50F5               	movf	tablat,w,c
  2261   0005BC  0A69               	xorlw	105
  2262   0005BE  A4D8               	btfss	status,2,c
  2263   0005C0  EFE4  F002         	goto	u1271
  2264   0005C4  EFE6  F002         	goto	u1270
  2265   0005C8                     u1271:
  2266   0005C8  EF77  F003         	goto	l1957
  2267   0005CC                     u1270:
  2268   0005CC                     l1931:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2272   0005CC  51CC               	movf	vfpfcnvrt@ap& (0+255),w,b
  2273   0005CE  6ED9               	movwf	fsr2l,c
  2274   0005D0  6ADA               	clrf	fsr2h,c
  2275   0005D2  0E02               	movlw	2
  2276   0005D4  26DF               	addwf	indf2,f,c
  2277   0005D6  5CDF               	subwf	indf2,w,c
  2278   0005D8  6ED9               	movwf	fsr2l,c
  2279   0005DA  6ADA               	clrf	fsr2h,c
  2280   0005DC  CFDE F0D2          	movff	postinc2,vfpfcnvrt@convarg
  2281   0005E0  CFDE F0D3          	movff	postinc2,vfpfcnvrt@convarg+1
  2282   0005E4                     
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2285   0005E4  0E01               	movlw	1
  2286   0005E6  25D0               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2287   0005E8  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  2288   0005EA  0E00               	movlw	0
  2289   0005EC  21D1               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2290   0005EE  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2291   0005F0  51CB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2292   0005F2  6ED9               	movwf	fsr2l,c
  2293   0005F4  6ADA               	clrf	fsr2h,c
  2294   0005F6  C0CD  FFDE         	movff	??_vfpfcnvrt,postinc2
  2295   0005FA  C0CE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2296   0005FE                     
  2297                           ; BSR set to: 0
  2298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2299   0005FE  0E20               	movlw	32
  2300   000600  6FD6               	movwf	vfpfcnvrt@c& (0+255),b
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2303   000602  BFD3               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2304   000604  EF06  F003         	goto	u1281
  2305   000608  EF09  F003         	goto	u1280
  2306   00060C                     u1281:
  2307   00060C  0E01               	movlw	1
  2308   00060E  EF0A  F003         	goto	u1290
  2309   000612                     u1280:
  2310   000612  0E00               	movlw	0
  2311   000614                     u1290:
  2312   000614  6FCF               	movwf	vfpfcnvrt@done& (0+255),b
  2313   000616                     l1937:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2317   000616  07D6               	decf	vfpfcnvrt@c& (0+255),f,b
  2318   000618  51D6               	movf	vfpfcnvrt@c& (0+255),w,b
  2319   00061A  0F80               	addlw	low _dbuf
  2320   00061C  6ED9               	movwf	fsr2l,c
  2321   00061E  6ADA               	clrf	fsr2h,c
  2322   000620  C0D2  F0C0         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2323   000624  C0D3  F0C1         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2324   000628  0E00               	movlw	0
  2325   00062A  6FC3               	movwf	(___awmod@divisor+1)& (0+255),b
  2326   00062C  0E0A               	movlw	10
  2327   00062E  6FC2               	movwf	___awmod@divisor& (0+255),b
  2328   000630  EC2B  F007         	call	___awmod	;wreg free
  2329   000634  C0C0  F0C6         	movff	?___awmod,abs@a
  2330   000638  C0C1  F0C7         	movff	?___awmod+1,abs@a+1
  2331   00063C  ECF5  F009         	call	_abs	;wreg free
  2332   000640  0100               	movlb	0	; () banked
  2333   000642  51C6               	movf	?_abs& (0+255),w,b
  2334   000644  0F30               	addlw	48
  2335   000646  6EDF               	movwf	indf2,c
  2336   000648                     
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2339   000648  C0D2  F0C0         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2340   00064C  C0D3  F0C1         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2341   000650  0E00               	movlw	0
  2342   000652  6FC3               	movwf	(___awdiv@divisor+1)& (0+255),b
  2343   000654  0E0A               	movlw	10
  2344   000656  6FC2               	movwf	___awdiv@divisor& (0+255),b
  2345   000658  ECAB  F005         	call	___awdiv	;wreg free
  2346   00065C  C0C0  F0D2         	movff	?___awdiv,vfpfcnvrt@convarg
  2347   000660  C0C1  F0D3         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2348   000664                     
  2349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2350   000664  0100               	movlb	0	; () banked
  2351   000666  51D2               	movf	vfpfcnvrt@convarg& (0+255),w,b
  2352   000668  11D3               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  2353   00066A  B4D8               	btfsc	status,2,c
  2354   00066C  EF3A  F003         	goto	u1301
  2355   000670  EF3C  F003         	goto	u1300
  2356   000674                     u1301:
  2357   000674  EF44  F003         	goto	l1945
  2358   000678                     u1300:
  2359   000678                     
  2360                           ; BSR set to: 0
  2361   000678  51D6               	movf	vfpfcnvrt@c& (0+255),w,b
  2362   00067A  A4D8               	btfss	status,2,c
  2363   00067C  EF42  F003         	goto	u1311
  2364   000680  EF44  F003         	goto	u1310
  2365   000684                     u1311:
  2366   000684  EF0B  F003         	goto	l1937
  2367   000688                     u1310:
  2368   000688                     l1945:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2372   000688  51D6               	movf	vfpfcnvrt@c& (0+255),w,b
  2373   00068A  B4D8               	btfsc	status,2,c
  2374   00068C  EF4A  F003         	goto	u1321
  2375   000690  EF4C  F003         	goto	u1320
  2376   000694                     u1321:
  2377   000694  EF6C  F003         	goto	l1955
  2378   000698                     u1320:
  2379   000698                     
  2380                           ; BSR set to: 0
  2381   000698  51CF               	movf	vfpfcnvrt@done& (0+255),w,b
  2382   00069A  B4D8               	btfsc	status,2,c
  2383   00069C  EF52  F003         	goto	u1331
  2384   0006A0  EF54  F003         	goto	u1330
  2385   0006A4                     u1331:
  2386   0006A4  EF6C  F003         	goto	l1955
  2387   0006A8                     u1330:
  2388   0006A8                     
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2391   0006A8  07D6               	decf	vfpfcnvrt@c& (0+255),f,b
  2392   0006AA  51D6               	movf	vfpfcnvrt@c& (0+255),w,b
  2393   0006AC  0F80               	addlw	low _dbuf
  2394   0006AE  6ED9               	movwf	fsr2l,c
  2395   0006B0  6ADA               	clrf	fsr2h,c
  2396   0006B2  0E2D               	movlw	45
  2397   0006B4  6EDF               	movwf	indf2,c
  2398   0006B6  EF6C  F003         	goto	l1955
  2399   0006BA                     l1951:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2403   0006BA  51D6               	movf	vfpfcnvrt@c& (0+255),w,b
  2404   0006BC  0F80               	addlw	low _dbuf
  2405   0006BE  6ED9               	movwf	fsr2l,c
  2406   0006C0  6ADA               	clrf	fsr2h,c
  2407   0006C2  50DF               	movf	indf2,w,c
  2408   0006C4  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  2409   0006C6  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2410   0006C8  6FC0               	movwf	fputc@c& (0+255),b
  2411   0006CA  6BC1               	clrf	(fputc@c+1)& (0+255),b
  2412   0006CC  C0CA  F0C2         	movff	vfpfcnvrt@fp,fputc@fp
  2413   0006D0  EC70  F006         	call	_fputc	;wreg free
  2414   0006D4  0100               	movlb	0	; () banked
  2415   0006D6  2BD6               	incf	vfpfcnvrt@c& (0+255),f,b
  2416   0006D8                     l1955:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2420   0006D8  0E20               	movlw	32
  2421   0006DA  19D6               	xorwf	vfpfcnvrt@c& (0+255),w,b
  2422   0006DC  A4D8               	btfss	status,2,c
  2423   0006DE  EF73  F003         	goto	u1341
  2424   0006E2  EF75  F003         	goto	u1340
  2425   0006E6                     u1341:
  2426   0006E6  EF5D  F003         	goto	l1951
  2427   0006EA                     u1340:
  2428   0006EA  EF91  F003         	goto	l945
  2429   0006EE                     l1957:
  2430                           
  2431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2432   0006EE  0100               	movlb	0	; () banked
  2433   0006F0  51CB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2434   0006F2  6ED9               	movwf	fsr2l,c
  2435   0006F4  6ADA               	clrf	fsr2h,c
  2436   0006F6  2ADE               	incf	postinc2,f,c
  2437   0006F8  0E00               	movlw	0
  2438   0006FA  22DD               	addwfc	postdec2,f,c
  2439   0006FC  EF91  F003         	goto	l945
  2440   000700                     l1961:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2444   000700  51CB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2445   000702  6ED9               	movwf	fsr2l,c
  2446   000704  6ADA               	clrf	fsr2h,c
  2447   000706  CFDE FFF6          	movff	postinc2,tblptrl
  2448   00070A  CFDD FFF7          	movff	postdec2,tblptrh
  2449   00070E                     	if	0	;tblptru may be non-zero
  2450   00070E                     	endif
  2451   00070E                     	if	0	;tblptru may be non-zero
  2452   00070E                     	endif
  2453   00070E  0008               	tblrd		*
  2454   000710  50F5               	movf	tablat,w,c
  2455   000712  6FC0               	movwf	fputc@c& (0+255),b
  2456   000714  6BC1               	clrf	(fputc@c+1)& (0+255),b
  2457   000716  C0CA  F0C2         	movff	vfpfcnvrt@fp,fputc@fp
  2458   00071A  EC70  F006         	call	_fputc	;wreg free
  2459   00071E  EF77  F003         	goto	l1957
  2460   000722                     l945:
  2461                           
  2462                           ; BSR set to: 0
  2463   000722  0012               	return		;funcret
  2464   000724                     __end_of_vfpfcnvrt:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _fputc *****************
  2468 ;; Defined at:
  2469 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  c               2    5[BANK0 ] int 
  2472 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  2473 ;;		 -> sprintf@f(12), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2    5[BANK0 ] int 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2485 ;;      Params:         0       3       0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0
  2487 ;;      Temps:          0       5       0       0       0       0       0
  2488 ;;      Totals:         0       8       0       0       0       0       0
  2489 ;;Total ram usage:        8 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 10
  2492 ;; This function calls:
  2493 ;;		_putch
  2494 ;; This function is called by:
  2495 ;;		_vfpfcnvrt
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text6
  2500   000CE0                     __ptext6:
  2501                           	callstack 0
  2502   000CE0                     _fputc:
  2503                           	callstack 16
  2504   000CE0  0100               	movlb	0	; () banked
  2505   000CE2  51C2               	movf	fputc@fp& (0+255),w,b
  2506   000CE4  B4D8               	btfsc	status,2,c
  2507   000CE6  EF77  F006         	goto	u1201
  2508   000CEA  EF79  F006         	goto	u1200
  2509   000CEE                     u1201:
  2510   000CEE  EF81  F006         	goto	l1903
  2511   000CF2                     u1200:
  2512   000CF2                     
  2513                           ; BSR set to: 0
  2514   000CF2  51C2               	movf	fputc@fp& (0+255),w,b
  2515   000CF4  A4D8               	btfss	status,2,c
  2516   000CF6  EF7F  F006         	goto	u1211
  2517   000CFA  EF81  F006         	goto	u1210
  2518   000CFE                     u1211:
  2519   000CFE  EF86  F006         	goto	l1905
  2520   000D02                     u1210:
  2521   000D02                     l1903:
  2522                           
  2523                           ; BSR set to: 0
  2524   000D02  51C0               	movf	fputc@c& (0+255),w,b
  2525   000D04  EC84  F00A         	call	_putch
  2526   000D08  EFCD  F006         	goto	l970
  2527   000D0C                     l1905:
  2528                           
  2529                           ; BSR set to: 0
  2530   000D0C  51C2               	movf	fputc@fp& (0+255),w,b
  2531   000D0E  6ED9               	movwf	fsr2l,c
  2532   000D10  6ADA               	clrf	fsr2h,c
  2533   000D12  0E0A               	movlw	10
  2534   000D14  26D9               	addwf	fsr2l,f,c
  2535   000D16  50DE               	movf	postinc2,w,c
  2536   000D18  10DE               	iorwf	postinc2,w,c
  2537   000D1A  B4D8               	btfsc	status,2,c
  2538   000D1C  EF92  F006         	goto	u1221
  2539   000D20  EF94  F006         	goto	u1220
  2540   000D24                     u1221:
  2541   000D24  EFAD  F006         	goto	l1909
  2542   000D28                     u1220:
  2543   000D28                     
  2544                           ; BSR set to: 0
  2545   000D28  51C2               	movf	fputc@fp& (0+255),w,b
  2546   000D2A  6ED9               	movwf	fsr2l,c
  2547   000D2C  6ADA               	clrf	fsr2h,c
  2548   000D2E  0E0A               	movlw	10
  2549   000D30  26D9               	addwf	fsr2l,f,c
  2550   000D32  51C2               	movf	fputc@fp& (0+255),w,b
  2551   000D34  6EE1               	movwf	fsr1l,c
  2552   000D36  6AE2               	clrf	fsr1h,c
  2553   000D38  0E03               	movlw	3
  2554   000D3A  26E1               	addwf	fsr1l,f,c
  2555   000D3C  50DE               	movf	postinc2,w,c
  2556   000D3E  5CE6               	subwf	postinc1,w,c
  2557   000D40  50E6               	movf	postinc1,w,c
  2558   000D42  0A80               	xorlw	128
  2559   000D44  6FC7               	movwf	(??_fputc+4)& (0+255),b
  2560   000D46  50DE               	movf	postinc2,w,c
  2561   000D48  0A80               	xorlw	128
  2562   000D4A  59C7               	subwfb	(??_fputc+4)& (0+255),w,b
  2563   000D4C  B0D8               	btfsc	status,0,c
  2564   000D4E  EFAB  F006         	goto	u1231
  2565   000D52  EFAD  F006         	goto	u1230
  2566   000D56                     u1231:
  2567   000D56  EFCD  F006         	goto	l970
  2568   000D5A                     u1230:
  2569   000D5A                     l1909:
  2570                           
  2571                           ; BSR set to: 0
  2572   000D5A  51C2               	movf	fputc@fp& (0+255),w,b
  2573   000D5C  6ED9               	movwf	fsr2l,c
  2574   000D5E  6ADA               	clrf	fsr2h,c
  2575   000D60  0E03               	movlw	3
  2576   000D62  26D9               	addwf	fsr2l,f,c
  2577   000D64  CFDE F0C3          	movff	postinc2,??_fputc
  2578   000D68  CFDD F0C4          	movff	postdec2,??_fputc+1
  2579   000D6C  51C2               	movf	fputc@fp& (0+255),w,b
  2580   000D6E  6ED9               	movwf	fsr2l,c
  2581   000D70  6ADA               	clrf	fsr2h,c
  2582   000D72  CFDE F0C5          	movff	postinc2,??_fputc+2
  2583   000D76  CFDD F0C6          	movff	postdec2,??_fputc+3
  2584   000D7A  51C3               	movf	??_fputc& (0+255),w,b
  2585   000D7C  25C5               	addwf	(??_fputc+2)& (0+255),w,b
  2586   000D7E  6ED9               	movwf	fsr2l,c
  2587   000D80  51C4               	movf	(??_fputc+1)& (0+255),w,b
  2588   000D82  21C6               	addwfc	(??_fputc+3)& (0+255),w,b
  2589   000D84  6EDA               	movwf	fsr2h,c
  2590   000D86  C0C0  FFDF         	movff	fputc@c,indf2
  2591   000D8A  51C2               	movf	fputc@fp& (0+255),w,b
  2592   000D8C  6ED9               	movwf	fsr2l,c
  2593   000D8E  6ADA               	clrf	fsr2h,c
  2594   000D90  0E03               	movlw	3
  2595   000D92  26D9               	addwf	fsr2l,f,c
  2596   000D94  2ADE               	incf	postinc2,f,c
  2597   000D96  0E00               	movlw	0
  2598   000D98  22DD               	addwfc	postdec2,f,c
  2599   000D9A                     l970:
  2600   000D9A  0012               	return		;funcret
  2601   000D9C                     __end_of_fputc:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _putch *****************
  2605 ;; Defined at:
  2606 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  c               1    wreg     unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  c               1    0[COMRAM] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2620 ;;      Params:         0       0       0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 9
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_fputc
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text7
  2635   001508                     __ptext7:
  2636                           	callstack 0
  2637   001508                     _putch:
  2638                           	callstack 16
  2639   001508  0012               	return		;funcret
  2640   00150A                     __end_of_putch:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _abs *****************
  2644 ;; Defined at:
  2645 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  a               2   11[BANK0 ] int 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  2   11[BANK0 ] int 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2659 ;;      Params:         0       2       0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0
  2661 ;;      Temps:          0       2       0       0       0       0       0
  2662 ;;      Totals:         0       4       0       0       0       0       0
  2663 ;;Total ram usage:        4 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 9
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_vfpfcnvrt
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text8
  2674   0013EA                     __ptext8:
  2675                           	callstack 0
  2676   0013EA                     _abs:
  2677                           	callstack 17
  2678   0013EA  0100               	movlb	0	; () banked
  2679   0013EC  BFC7               	btfsc	(abs@a+1)& (0+255),7,b
  2680   0013EE  EFFB  F009         	goto	u1241
  2681   0013F2  EFFD  F009         	goto	u1240
  2682   0013F6                     u1241:
  2683   0013F6  EF03  F00A         	goto	l955
  2684   0013FA                     u1240:
  2685   0013FA                     
  2686                           ; BSR set to: 0
  2687   0013FA  C0C6  F0C6         	movff	abs@a,?_abs
  2688   0013FE  C0C7  F0C7         	movff	abs@a+1,?_abs+1
  2689   001402  EF0F  F00A         	goto	l958
  2690   001406                     l955:
  2691                           
  2692                           ; BSR set to: 0
  2693   001406  C0C6  F0C8         	movff	abs@a,??_abs
  2694   00140A  C0C7  F0C9         	movff	abs@a+1,??_abs+1
  2695   00140E  1FC8               	comf	??_abs& (0+255),f,b
  2696   001410  1FC9               	comf	(??_abs+1)& (0+255),f,b
  2697   001412  4BC8               	infsnz	??_abs& (0+255),f,b
  2698   001414  2BC9               	incf	(??_abs+1)& (0+255),f,b
  2699   001416  C0C8  F0C6         	movff	??_abs,?_abs
  2700   00141A  C0C9  F0C7         	movff	??_abs+1,?_abs+1
  2701   00141E                     l958:
  2702                           
  2703                           ; BSR set to: 0
  2704   00141E  0012               	return		;funcret
  2705   001420                     __end_of_abs:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function ___awmod *****************
  2709 ;; Defined at:
  2710 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  dividend        2    5[BANK0 ] int 
  2713 ;;  divisor         2    7[BANK0 ] int 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  sign            1   10[BANK0 ] unsigned char 
  2716 ;;  counter         1    9[BANK0 ] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  2    5[BANK0 ] int 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2726 ;;      Params:         0       4       0       0       0       0       0
  2727 ;;      Locals:         0       2       0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0
  2729 ;;      Totals:         0       6       0       0       0       0       0
  2730 ;;Total ram usage:        6 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 9
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_vfpfcnvrt
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text9
  2741   000E56                     __ptext9:
  2742                           	callstack 0
  2743   000E56                     ___awmod:
  2744                           	callstack 17
  2745   000E56  0E00               	movlw	0
  2746   000E58  0100               	movlb	0	; () banked
  2747   000E5A  6FC5               	movwf	___awmod@sign& (0+255),b
  2748   000E5C                     
  2749                           ; BSR set to: 0
  2750   000E5C  BFC1               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2751   000E5E  EF35  F007         	goto	u1140
  2752   000E62  EF33  F007         	goto	u1141
  2753   000E66                     u1141:
  2754   000E66  EF3B  F007         	goto	l1871
  2755   000E6A                     u1140:
  2756   000E6A                     
  2757                           ; BSR set to: 0
  2758   000E6A  6DC0               	negf	___awmod@dividend& (0+255),b
  2759   000E6C  1FC1               	comf	(___awmod@dividend+1)& (0+255),f,b
  2760   000E6E  B0D8               	btfsc	status,0,c
  2761   000E70  2BC1               	incf	(___awmod@dividend+1)& (0+255),f,b
  2762   000E72                     
  2763                           ; BSR set to: 0
  2764   000E72  0E01               	movlw	1
  2765   000E74  6FC5               	movwf	___awmod@sign& (0+255),b
  2766   000E76                     l1871:
  2767                           
  2768                           ; BSR set to: 0
  2769   000E76  BFC3               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2770   000E78  EF42  F007         	goto	u1150
  2771   000E7C  EF40  F007         	goto	u1151
  2772   000E80                     u1151:
  2773   000E80  EF46  F007         	goto	l1875
  2774   000E84                     u1150:
  2775   000E84                     
  2776                           ; BSR set to: 0
  2777   000E84  6DC2               	negf	___awmod@divisor& (0+255),b
  2778   000E86  1FC3               	comf	(___awmod@divisor+1)& (0+255),f,b
  2779   000E88  B0D8               	btfsc	status,0,c
  2780   000E8A  2BC3               	incf	(___awmod@divisor+1)& (0+255),f,b
  2781   000E8C                     l1875:
  2782                           
  2783                           ; BSR set to: 0
  2784   000E8C  51C2               	movf	___awmod@divisor& (0+255),w,b
  2785   000E8E  11C3               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2786   000E90  B4D8               	btfsc	status,2,c
  2787   000E92  EF4D  F007         	goto	u1161
  2788   000E96  EF4F  F007         	goto	u1160
  2789   000E9A                     u1161:
  2790   000E9A  EF73  F007         	goto	l1891
  2791   000E9E                     u1160:
  2792   000E9E                     
  2793                           ; BSR set to: 0
  2794   000E9E  0E01               	movlw	1
  2795   000EA0  6FC4               	movwf	___awmod@counter& (0+255),b
  2796   000EA2  EF57  F007         	goto	l1881
  2797   000EA6                     l1879:
  2798                           
  2799                           ; BSR set to: 0
  2800   000EA6  90D8               	bcf	status,0,c
  2801   000EA8  37C2               	rlcf	___awmod@divisor& (0+255),f,b
  2802   000EAA  37C3               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2803   000EAC  2BC4               	incf	___awmod@counter& (0+255),f,b
  2804   000EAE                     l1881:
  2805                           
  2806                           ; BSR set to: 0
  2807   000EAE  AFC3               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2808   000EB0  EF5C  F007         	goto	u1171
  2809   000EB4  EF5E  F007         	goto	u1170
  2810   000EB8                     u1171:
  2811   000EB8  EF53  F007         	goto	l1879
  2812   000EBC                     u1170:
  2813   000EBC                     l1883:
  2814                           
  2815                           ; BSR set to: 0
  2816   000EBC  51C2               	movf	___awmod@divisor& (0+255),w,b
  2817   000EBE  5DC0               	subwf	___awmod@dividend& (0+255),w,b
  2818   000EC0  51C3               	movf	(___awmod@divisor+1)& (0+255),w,b
  2819   000EC2  59C1               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2820   000EC4  A0D8               	btfss	status,0,c
  2821   000EC6  EF67  F007         	goto	u1181
  2822   000ECA  EF69  F007         	goto	u1180
  2823   000ECE                     u1181:
  2824   000ECE  EF6D  F007         	goto	l1887
  2825   000ED2                     u1180:
  2826   000ED2                     
  2827                           ; BSR set to: 0
  2828   000ED2  51C2               	movf	___awmod@divisor& (0+255),w,b
  2829   000ED4  5FC0               	subwf	___awmod@dividend& (0+255),f,b
  2830   000ED6  51C3               	movf	(___awmod@divisor+1)& (0+255),w,b
  2831   000ED8  5BC1               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2832   000EDA                     l1887:
  2833                           
  2834                           ; BSR set to: 0
  2835   000EDA  90D8               	bcf	status,0,c
  2836   000EDC  33C3               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2837   000EDE  33C2               	rrcf	___awmod@divisor& (0+255),f,b
  2838   000EE0                     
  2839                           ; BSR set to: 0
  2840   000EE0  2FC4               	decfsz	___awmod@counter& (0+255),f,b
  2841   000EE2  EF5E  F007         	goto	l1883
  2842   000EE6                     l1891:
  2843                           
  2844                           ; BSR set to: 0
  2845   000EE6  51C5               	movf	___awmod@sign& (0+255),w,b
  2846   000EE8  B4D8               	btfsc	status,2,c
  2847   000EEA  EF79  F007         	goto	u1191
  2848   000EEE  EF7B  F007         	goto	u1190
  2849   000EF2                     u1191:
  2850   000EF2  EF7F  F007         	goto	l1895
  2851   000EF6                     u1190:
  2852   000EF6                     
  2853                           ; BSR set to: 0
  2854   000EF6  6DC0               	negf	___awmod@dividend& (0+255),b
  2855   000EF8  1FC1               	comf	(___awmod@dividend+1)& (0+255),f,b
  2856   000EFA  B0D8               	btfsc	status,0,c
  2857   000EFC  2BC1               	incf	(___awmod@dividend+1)& (0+255),f,b
  2858   000EFE                     l1895:
  2859                           
  2860                           ; BSR set to: 0
  2861   000EFE  C0C0  F0C0         	movff	___awmod@dividend,?___awmod
  2862   000F02  C0C1  F0C1         	movff	___awmod@dividend+1,?___awmod+1
  2863   000F06                     
  2864                           ; BSR set to: 0
  2865   000F06  0012               	return		;funcret
  2866   000F08                     __end_of___awmod:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function ___awdiv *****************
  2870 ;; Defined at:
  2871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  dividend        2    5[BANK0 ] int 
  2874 ;;  divisor         2    7[BANK0 ] int 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  quotient        2   11[BANK0 ] int 
  2877 ;;  sign            1   10[BANK0 ] unsigned char 
  2878 ;;  counter         1    9[BANK0 ] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  2    5[BANK0 ] int 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2888 ;;      Params:         0       4       0       0       0       0       0
  2889 ;;      Locals:         0       4       0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0
  2891 ;;      Totals:         0       8       0       0       0       0       0
  2892 ;;Total ram usage:        8 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 9
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_vfpfcnvrt
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text10
  2903   000B56                     __ptext10:
  2904                           	callstack 0
  2905   000B56                     ___awdiv:
  2906                           	callstack 17
  2907   000B56  0E00               	movlw	0
  2908   000B58  0100               	movlb	0	; () banked
  2909   000B5A  6FC5               	movwf	___awdiv@sign& (0+255),b
  2910   000B5C                     
  2911                           ; BSR set to: 0
  2912   000B5C  BFC3               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2913   000B5E  EFB5  F005         	goto	u1080
  2914   000B62  EFB3  F005         	goto	u1081
  2915   000B66                     u1081:
  2916   000B66  EFBB  F005         	goto	l1827
  2917   000B6A                     u1080:
  2918   000B6A                     
  2919                           ; BSR set to: 0
  2920   000B6A  6DC2               	negf	___awdiv@divisor& (0+255),b
  2921   000B6C  1FC3               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2922   000B6E  B0D8               	btfsc	status,0,c
  2923   000B70  2BC3               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2924   000B72                     
  2925                           ; BSR set to: 0
  2926   000B72  0E01               	movlw	1
  2927   000B74  6FC5               	movwf	___awdiv@sign& (0+255),b
  2928   000B76                     l1827:
  2929                           
  2930                           ; BSR set to: 0
  2931   000B76  BFC1               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2932   000B78  EFC2  F005         	goto	u1090
  2933   000B7C  EFC0  F005         	goto	u1091
  2934   000B80                     u1091:
  2935   000B80  EFC8  F005         	goto	l1833
  2936   000B84                     u1090:
  2937   000B84                     
  2938                           ; BSR set to: 0
  2939   000B84  6DC0               	negf	___awdiv@dividend& (0+255),b
  2940   000B86  1FC1               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2941   000B88  B0D8               	btfsc	status,0,c
  2942   000B8A  2BC1               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2943   000B8C                     
  2944                           ; BSR set to: 0
  2945   000B8C  0E01               	movlw	1
  2946   000B8E  1BC5               	xorwf	___awdiv@sign& (0+255),f,b
  2947   000B90                     l1833:
  2948                           
  2949                           ; BSR set to: 0
  2950   000B90  0E00               	movlw	0
  2951   000B92  6FC7               	movwf	(___awdiv@quotient+1)& (0+255),b
  2952   000B94  0E00               	movlw	0
  2953   000B96  6FC6               	movwf	___awdiv@quotient& (0+255),b
  2954   000B98                     
  2955                           ; BSR set to: 0
  2956   000B98  51C2               	movf	___awdiv@divisor& (0+255),w,b
  2957   000B9A  11C3               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2958   000B9C  B4D8               	btfsc	status,2,c
  2959   000B9E  EFD3  F005         	goto	u1101
  2960   000BA2  EFD5  F005         	goto	u1100
  2961   000BA6                     u1101:
  2962   000BA6  EFFD  F005         	goto	l1855
  2963   000BAA                     u1100:
  2964   000BAA                     
  2965                           ; BSR set to: 0
  2966   000BAA  0E01               	movlw	1
  2967   000BAC  6FC4               	movwf	___awdiv@counter& (0+255),b
  2968   000BAE  EFDD  F005         	goto	l1841
  2969   000BB2                     l1839:
  2970                           
  2971                           ; BSR set to: 0
  2972   000BB2  90D8               	bcf	status,0,c
  2973   000BB4  37C2               	rlcf	___awdiv@divisor& (0+255),f,b
  2974   000BB6  37C3               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2975   000BB8  2BC4               	incf	___awdiv@counter& (0+255),f,b
  2976   000BBA                     l1841:
  2977                           
  2978                           ; BSR set to: 0
  2979   000BBA  AFC3               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2980   000BBC  EFE2  F005         	goto	u1111
  2981   000BC0  EFE4  F005         	goto	u1110
  2982   000BC4                     u1111:
  2983   000BC4  EFD9  F005         	goto	l1839
  2984   000BC8                     u1110:
  2985   000BC8                     l1843:
  2986                           
  2987                           ; BSR set to: 0
  2988   000BC8  90D8               	bcf	status,0,c
  2989   000BCA  37C6               	rlcf	___awdiv@quotient& (0+255),f,b
  2990   000BCC  37C7               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2991   000BCE                     
  2992                           ; BSR set to: 0
  2993   000BCE  51C2               	movf	___awdiv@divisor& (0+255),w,b
  2994   000BD0  5DC0               	subwf	___awdiv@dividend& (0+255),w,b
  2995   000BD2  51C3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2996   000BD4  59C1               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2997   000BD6  A0D8               	btfss	status,0,c
  2998   000BD8  EFF0  F005         	goto	u1121
  2999   000BDC  EFF2  F005         	goto	u1120
  3000   000BE0                     u1121:
  3001   000BE0  EFF7  F005         	goto	l1851
  3002   000BE4                     u1120:
  3003   000BE4                     
  3004                           ; BSR set to: 0
  3005   000BE4  51C2               	movf	___awdiv@divisor& (0+255),w,b
  3006   000BE6  5FC0               	subwf	___awdiv@dividend& (0+255),f,b
  3007   000BE8  51C3               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3008   000BEA  5BC1               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3009   000BEC                     
  3010                           ; BSR set to: 0
  3011   000BEC  81C6               	bsf	___awdiv@quotient& (0+255),0,b
  3012   000BEE                     l1851:
  3013                           
  3014                           ; BSR set to: 0
  3015   000BEE  90D8               	bcf	status,0,c
  3016   000BF0  33C3               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3017   000BF2  33C2               	rrcf	___awdiv@divisor& (0+255),f,b
  3018   000BF4                     
  3019                           ; BSR set to: 0
  3020   000BF4  2FC4               	decfsz	___awdiv@counter& (0+255),f,b
  3021   000BF6  EFE4  F005         	goto	l1843
  3022   000BFA                     l1855:
  3023                           
  3024                           ; BSR set to: 0
  3025   000BFA  51C5               	movf	___awdiv@sign& (0+255),w,b
  3026   000BFC  B4D8               	btfsc	status,2,c
  3027   000BFE  EF03  F006         	goto	u1131
  3028   000C02  EF05  F006         	goto	u1130
  3029   000C06                     u1131:
  3030   000C06  EF09  F006         	goto	l1859
  3031   000C0A                     u1130:
  3032   000C0A                     
  3033                           ; BSR set to: 0
  3034   000C0A  6DC6               	negf	___awdiv@quotient& (0+255),b
  3035   000C0C  1FC7               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3036   000C0E  B0D8               	btfsc	status,0,c
  3037   000C10  2BC7               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3038   000C12                     l1859:
  3039                           
  3040                           ; BSR set to: 0
  3041   000C12  C0C6  F0C0         	movff	___awdiv@quotient,?___awdiv
  3042   000C16  C0C7  F0C1         	movff	___awdiv@quotient+1,?___awdiv+1
  3043   000C1A                     
  3044                           ; BSR set to: 0
  3045   000C1A  0012               	return		;funcret
  3046   000C1C                     __end_of___awdiv:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _UART_Write_Text *****************
  3050 ;; Defined at:
  3051 ;;		line 46 in file "setting_hardaware/uart.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  text            2    6[BANK0 ] PTR unsigned char 
  3054 ;;		 -> str(200), 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  i               2    8[BANK0 ] int 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3066 ;;      Params:         0       2       0       0       0       0       0
  3067 ;;      Locals:         0       2       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0
  3069 ;;      Totals:         0       4       0       0       0       0       0
  3070 ;;Total ram usage:        4 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 10
  3073 ;; This function calls:
  3074 ;;		_UART_Write
  3075 ;; This function is called by:
  3076 ;;		_add_score
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text11
  3082   0011B6                     __ptext11:
  3083                           	callstack 0
  3084   0011B6                     _UART_Write_Text:
  3085                           	callstack 19
  3086   0011B6                     
  3087                           ;setting_hardaware/uart.c: 47:     for(int i=0;text[i]!='\0';i++){
  3088   0011B6  0E00               	movlw	0
  3089   0011B8  0100               	movlb	0	; () banked
  3090   0011BA  6FC4               	movwf	(UART_Write_Text@i+1)& (0+255),b
  3091   0011BC  0E00               	movlw	0
  3092   0011BE  6FC3               	movwf	UART_Write_Text@i& (0+255),b
  3093   0011C0  EFEE  F008         	goto	l2139
  3094   0011C4                     l2135:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;setting_hardaware/uart.c: 48:         UART_Write(text[i]);
  3098   0011C4  51C3               	movf	UART_Write_Text@i& (0+255),w,b
  3099   0011C6  25C1               	addwf	UART_Write_Text@text& (0+255),w,b
  3100   0011C8  6ED9               	movwf	fsr2l,c
  3101   0011CA  51C4               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  3102   0011CC  21C2               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  3103   0011CE  6EDA               	movwf	fsr2h,c
  3104   0011D0  50DF               	movf	indf2,w,c
  3105   0011D2  EC3B  F00A         	call	_UART_Write
  3106   0011D6                     
  3107                           ;setting_hardaware/uart.c: 49:     }
  3108   0011D6  0100               	movlb	0	; () banked
  3109   0011D8  4BC3               	infsnz	UART_Write_Text@i& (0+255),f,b
  3110   0011DA  2BC4               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  3111   0011DC                     l2139:
  3112                           
  3113                           ; BSR set to: 0
  3114   0011DC  51C3               	movf	UART_Write_Text@i& (0+255),w,b
  3115   0011DE  25C1               	addwf	UART_Write_Text@text& (0+255),w,b
  3116   0011E0  6ED9               	movwf	fsr2l,c
  3117   0011E2  51C4               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  3118   0011E4  21C2               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  3119   0011E6  6EDA               	movwf	fsr2h,c
  3120   0011E8  50DF               	movf	indf2,w,c
  3121   0011EA  A4D8               	btfss	status,2,c
  3122   0011EC  EFFA  F008         	goto	u1651
  3123   0011F0  EFFC  F008         	goto	u1650
  3124   0011F4                     u1651:
  3125   0011F4  EFE2  F008         	goto	l2135
  3126   0011F8                     u1650:
  3127   0011F8                     
  3128                           ; BSR set to: 0
  3129   0011F8  0012               	return		;funcret
  3130   0011FA                     __end_of_UART_Write_Text:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _UART_Write *****************
  3134 ;; Defined at:
  3135 ;;		line 39 in file "setting_hardaware/uart.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  data            1    wreg     unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  data            1    5[BANK0 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3149 ;;      Params:         0       0       0       0       0       0       0
  3150 ;;      Locals:         0       1       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0
  3152 ;;      Totals:         0       1       0       0       0       0       0
  3153 ;;Total ram usage:        1 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 9
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_UART_Write_Text
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text12
  3164   001476                     __ptext12:
  3165                           	callstack 0
  3166   001476                     _UART_Write:
  3167                           	callstack 19
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;incstack = 0
  3171                           ;UART_Write@data stored from wreg
  3172   001476  0100               	movlb	0	; () banked
  3173   001478  6FC0               	movwf	UART_Write@data& (0+255),b
  3174   00147A                     l197:
  3175   00147A  A2AC               	btfss	172,1,c	;volatile
  3176   00147C  EF42  F00A         	goto	u1521
  3177   001480  EF44  F00A         	goto	u1520
  3178   001484                     u1521:
  3179   001484  EF3D  F00A         	goto	l197
  3180   001488                     u1520:
  3181   001488                     
  3182                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  3183   001488  C0C0  FFAD         	movff	UART_Write@data,4013	;volatile
  3184   00148C  0012               	return		;funcret
  3185   00148E                     __end_of_UART_Write:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _ClearBuffer *****************
  3189 ;; Defined at:
  3190 ;;		line 52 in file "setting_hardaware/uart.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  i               2    5[BANK0 ] int 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3204 ;;      Params:         0       0       0       0       0       0       0
  3205 ;;      Locals:         0       2       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0
  3207 ;;      Totals:         0       2       0       0       0       0       0
  3208 ;;Total ram usage:        2 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 9
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_add_score
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text13
  3220   0011FA                     __ptext13:
  3221                           	callstack 0
  3222   0011FA                     _ClearBuffer:
  3223                           	callstack 20
  3224   0011FA                     
  3225                           ;setting_hardaware/uart.c: 53:     for(int i = 0; i < 10 ; i++)
  3226   0011FA  0E00               	movlw	0
  3227   0011FC  0100               	movlb	0	; () banked
  3228   0011FE  6FC1               	movwf	(ClearBuffer@i+1)& (0+255),b
  3229   001200  0E00               	movlw	0
  3230   001202  6FC0               	movwf	ClearBuffer@i& (0+255),b
  3231   001204                     l2147:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;setting_hardaware/uart.c: 54:         mystring[i] = '\0';
  3235   001204  0E00               	movlw	low _mystring
  3236   001206  25C0               	addwf	ClearBuffer@i& (0+255),w,b
  3237   001208  6ED9               	movwf	fsr2l,c
  3238   00120A  0E02               	movlw	high _mystring
  3239   00120C  21C1               	addwfc	(ClearBuffer@i+1)& (0+255),w,b
  3240   00120E  6EDA               	movwf	fsr2h,c
  3241   001210  6ADF               	clrf	indf2,c
  3242   001212                     
  3243                           ; BSR set to: 0
  3244   001212  4BC0               	infsnz	ClearBuffer@i& (0+255),f,b
  3245   001214  2BC1               	incf	(ClearBuffer@i+1)& (0+255),f,b
  3246   001216                     
  3247                           ; BSR set to: 0
  3248   001216  BFC1               	btfsc	(ClearBuffer@i+1)& (0+255),7,b
  3249   001218  EF17  F009         	goto	u1661
  3250   00121C  51C1               	movf	(ClearBuffer@i+1)& (0+255),w,b
  3251   00121E  E109               	bnz	u1660
  3252   001220  0E0A               	movlw	10
  3253   001222  5DC0               	subwf	ClearBuffer@i& (0+255),w,b
  3254   001224  A0D8               	btfss	status,0,c
  3255   001226  EF17  F009         	goto	u1661
  3256   00122A  EF19  F009         	goto	u1660
  3257   00122E                     u1661:
  3258   00122E  EF02  F009         	goto	l2147
  3259   001232                     u1660:
  3260   001232                     
  3261                           ; BSR set to: 0
  3262                           ;setting_hardaware/uart.c: 55:     lenStr = 0;
  3263   001232  0E00               	movlw	0
  3264   001234  6E41               	movwf	(_lenStr+1)^0,c
  3265   001236  0E00               	movlw	0
  3266   001238  6E40               	movwf	_lenStr^0,c
  3267   00123A                     
  3268                           ; BSR set to: 0
  3269   00123A  0012               	return		;funcret
  3270   00123C                     __end_of_ClearBuffer:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _SYSTEM_Initialize *****************
  3274 ;; Defined at:
  3275 ;;		line 60 in file "setting_hardaware/setting.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3289 ;;      Params:         0       0       0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 10
  3296 ;; This function calls:
  3297 ;;		_ADC_Initialize
  3298 ;;		_CCP1_Initialize
  3299 ;;		_INTERRUPT_Initialize
  3300 ;;		_OSCILLATOR_Initialize
  3301 ;;		_UART_Initialize
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text14
  3308   0014A6                     __ptext14:
  3309                           	callstack 0
  3310   0014A6                     _SYSTEM_Initialize:
  3311                           	callstack 20
  3312   0014A6                     
  3313                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  3314   0014A6  EC47  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  3315   0014AA                     
  3316                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  3317   0014AA  EC7F  F00A         	call	_INTERRUPT_Initialize	;wreg free
  3318   0014AE                     
  3319                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  3320   0014AE  EC2A  F00A         	call	_UART_Initialize	;wreg free
  3321   0014B2                     
  3322                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  3323   0014B2  EC96  F008         	call	_CCP1_Initialize	;wreg free
  3324   0014B6                     
  3325                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  3326   0014B6  EC5E  F00A         	call	_ADC_Initialize	;wreg free
  3327   0014BA  0012               	return		;funcret
  3328   0014BC                     __end_of_SYSTEM_Initialize:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _UART_Initialize *****************
  3332 ;; Defined at:
  3333 ;;		line 7 in file "setting_hardaware/uart.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3347 ;;      Params:         0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 9
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_SYSTEM_Initialize
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text15
  3362   001454                     __ptext15:
  3363                           	callstack 0
  3364   001454                     _UART_Initialize:
  3365                           	callstack 20
  3366   001454                     
  3367                           ;setting_hardaware/uart.c: 17:     TRISCbits.TRISC6 = 1;
  3368   001454  8C94               	bsf	148,6,c	;volatile
  3369                           
  3370                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC7 = 1;
  3371   001456  8E94               	bsf	148,7,c	;volatile
  3372                           
  3373                           ;setting_hardaware/uart.c: 21:     TXSTAbits.SYNC = 0;
  3374   001458  98AC               	bcf	172,4,c	;volatile
  3375                           
  3376                           ;setting_hardaware/uart.c: 22:     BAUDCONbits.BRG16 = 0;
  3377   00145A  96B8               	bcf	184,3,c	;volatile
  3378                           
  3379                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
  3380   00145C  94AC               	bcf	172,2,c	;volatile
  3381   00145E                     
  3382                           ;setting_hardaware/uart.c: 24:     SPBRG = 51;
  3383   00145E  0E33               	movlw	51
  3384   001460  6EAF               	movwf	175,c	;volatile
  3385   001462                     
  3386                           ;setting_hardaware/uart.c: 27:     RCSTAbits.SPEN = 1;
  3387   001462  8EAB               	bsf	171,7,c	;volatile
  3388   001464                     
  3389                           ;setting_hardaware/uart.c: 28:     PIR1bits.TXIF = 1 ;
  3390   001464  889E               	bsf	158,4,c	;volatile
  3391   001466                     
  3392                           ;setting_hardaware/uart.c: 29:     PIR1bits.RCIF = 0 ;
  3393   001466  9A9E               	bcf	158,5,c	;volatile
  3394   001468                     
  3395                           ;setting_hardaware/uart.c: 30:     TXSTAbits.TXEN = 1;
  3396   001468  8AAC               	bsf	172,5,c	;volatile
  3397   00146A                     
  3398                           ;setting_hardaware/uart.c: 31:     RCSTAbits.CREN = 1;
  3399   00146A  88AB               	bsf	171,4,c	;volatile
  3400   00146C                     
  3401                           ;setting_hardaware/uart.c: 32:     PIE1bits.TXIE = 0;
  3402   00146C  989D               	bcf	157,4,c	;volatile
  3403   00146E                     
  3404                           ;setting_hardaware/uart.c: 33:     IPR1bits.TXIP = 0;
  3405   00146E  989F               	bcf	159,4,c	;volatile
  3406   001470                     
  3407                           ;setting_hardaware/uart.c: 34:     PIE1bits.RCIE = 1;
  3408   001470  8A9D               	bsf	157,5,c	;volatile
  3409   001472                     
  3410                           ;setting_hardaware/uart.c: 35:     IPR1bits.RCIP = 0;
  3411   001472  9A9F               	bcf	159,5,c	;volatile
  3412   001474  0012               	return		;funcret
  3413   001476                     __end_of_UART_Initialize:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _OSCILLATOR_Initialize *****************
  3417 ;; Defined at:
  3418 ;;		line 73 in file "setting_hardaware/setting.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 9
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_SYSTEM_Initialize
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text16
  3447   00148E                     __ptext16:
  3448                           	callstack 0
  3449   00148E                     _OSCILLATOR_Initialize:
  3450                           	callstack 20
  3451   00148E                     
  3452                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  3453   00148E  8CD3               	bsf	4051,6,c	;volatile
  3454                           
  3455                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  3456   001490  8AD3               	bsf	4051,5,c	;volatile
  3457                           
  3458                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  3459   001492  98D3               	bcf	4051,4,c	;volatile
  3460   001494                     
  3461                           ;setting_hardaware/setting.c: 79:     TRISD = 0x00;
  3462   001494  0E00               	movlw	0
  3463   001496  6E95               	movwf	149,c	;volatile
  3464   001498                     
  3465                           ;setting_hardaware/setting.c: 81:     LATDbits.LD0 = 0;
  3466   001498  908C               	bcf	140,0,c	;volatile
  3467   00149A                     
  3468                           ;setting_hardaware/setting.c: 82:     LATDbits.LD1 = 0;
  3469   00149A  928C               	bcf	140,1,c	;volatile
  3470   00149C                     
  3471                           ;setting_hardaware/setting.c: 83:     TRISBbits.RB0 = 1;
  3472   00149C  8093               	bsf	147,0,c	;volatile
  3473   00149E                     
  3474                           ;setting_hardaware/setting.c: 84:     TRISBbits.RB1 = 1;
  3475   00149E  8293               	bsf	147,1,c	;volatile
  3476                           
  3477                           ;setting_hardaware/setting.c: 85:     TRISA = 1;
  3478   0014A0  0E01               	movlw	1
  3479   0014A2  6E92               	movwf	146,c	;volatile
  3480   0014A4  0012               	return		;funcret
  3481   0014A6                     __end_of_OSCILLATOR_Initialize:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _INTERRUPT_Initialize *****************
  3485 ;; Defined at:
  3486 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		None
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3500 ;;      Params:         0       0       0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 9
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_SYSTEM_Initialize
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text17
  3515   0014FE                     __ptext17:
  3516                           	callstack 0
  3517   0014FE                     _INTERRUPT_Initialize:
  3518                           	callstack 20
  3519   0014FE                     
  3520                           ;setting_hardaware/interrupt_manager.c: 8:     RCONbits.IPEN = 1;
  3521   0014FE  8ED0               	bsf	208,7,c	;volatile
  3522                           
  3523                           ;setting_hardaware/interrupt_manager.c: 9:     INTCONbits.INT0F = 0;
  3524   001500  92F2               	bcf	242,1,c	;volatile
  3525                           
  3526                           ;setting_hardaware/interrupt_manager.c: 10:     INTCONbits.INT0E = 1;
  3527   001502  88F2               	bsf	242,4,c	;volatile
  3528                           
  3529                           ;setting_hardaware/interrupt_manager.c: 11:     INTCONbits.GIE = 1;
  3530   001504  8EF2               	bsf	242,7,c	;volatile
  3531   001506  0012               	return		;funcret
  3532   001508                     __end_of_INTERRUPT_Initialize:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _CCP1_Initialize *****************
  3536 ;; Defined at:
  3537 ;;		line 4 in file "setting_hardaware/ccp1.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3551 ;;      Params:         0       0       0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0
  3553 ;;      Temps:          0       1       0       0       0       0       0
  3554 ;;      Totals:         0       1       0       0       0       0       0
  3555 ;;Total ram usage:        1 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 9
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_SYSTEM_Initialize
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text18
  3566   00112C                     __ptext18:
  3567                           	callstack 0
  3568   00112C                     _CCP1_Initialize:
  3569                           	callstack 20
  3570   00112C                     
  3571                           ;setting_hardaware/ccp1.c: 6:     T2CONbits.TMR2ON = 0b1;
  3572   00112C  84CA               	bsf	202,2,c	;volatile
  3573   00112E                     
  3574                           ;setting_hardaware/ccp1.c: 7:     T2CONbits.T2CKPS = 0b10;
  3575   00112E  50CA               	movf	202,w,c	;volatile
  3576   001130  0BFC               	andlw	-4
  3577   001132  0902               	iorlw	2
  3578   001134  6ECA               	movwf	202,c	;volatile
  3579                           
  3580                           ;setting_hardaware/ccp1.c: 8:     T2CONbits.T2OUTPS = 0b0001;
  3581   001136  50CA               	movf	202,w,c	;volatile
  3582   001138  0B87               	andlw	-121
  3583   00113A  0908               	iorlw	8
  3584   00113C  6ECA               	movwf	202,c	;volatile
  3585                           
  3586                           ;setting_hardaware/ccp1.c: 9:     CCP1CONbits.CCP1M = 0b1100;
  3587   00113E  50BD               	movf	189,w,c	;volatile
  3588   001140  0BF0               	andlw	-16
  3589   001142  090C               	iorlw	12
  3590   001144  6EBD               	movwf	189,c	;volatile
  3591                           
  3592                           ;setting_hardaware/ccp1.c: 11:     TRISC = 0;
  3593   001146  0E00               	movlw	0
  3594   001148  6E94               	movwf	148,c	;volatile
  3595                           
  3596                           ;setting_hardaware/ccp1.c: 12:     LATC = 0;
  3597   00114A  0E00               	movlw	0
  3598   00114C  6E8B               	movwf	139,c	;volatile
  3599                           
  3600                           ;setting_hardaware/ccp1.c: 21:     PR2 = 0x9b;
  3601   00114E  0E9B               	movlw	155
  3602   001150  6ECB               	movwf	203,c	;volatile
  3603                           
  3604                           ;setting_hardaware/ccp1.c: 24:     CCPR1L = 0x0b;
  3605   001152  0E0B               	movlw	11
  3606   001154  6EBE               	movwf	190,c	;volatile
  3607                           
  3608                           ;setting_hardaware/ccp1.c: 25:     CCP1CONbits.DC1B = 0b10;
  3609   001156  50BD               	movf	189,w,c	;volatile
  3610   001158  0BCF               	andlw	-49
  3611   00115A  0920               	iorlw	32
  3612   00115C  6EBD               	movwf	189,c	;volatile
  3613   00115E                     
  3614                           ;setting_hardaware/ccp1.c: 26:      _delay((unsigned long)((200)*(1000000/4000.0)));
  3615   00115E  0E41               	movlw	65
  3616   001160  0100               	movlb	0	; () banked
  3617   001162  6FC0               	movwf	??_CCP1_Initialize& (0+255),b
  3618   001164  0EEE               	movlw	238
  3619   001166                     u2227:
  3620   001166  2EE8               	decfsz	wreg,f,c
  3621   001168  D7FE               	bra	u2227
  3622   00116A  2FC0               	decfsz	??_CCP1_Initialize& (0+255),f,b
  3623   00116C  D7FC               	bra	u2227
  3624   00116E  0000               	nop	
  3625   001170  0012               	return		;funcret
  3626   001172                     __end_of_CCP1_Initialize:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _ADC_Initialize *****************
  3630 ;; Defined at:
  3631 ;;		line 3 in file "setting_hardaware/adc.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3645 ;;      Params:         0       0       0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 9
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_SYSTEM_Initialize
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text19
  3660   0014BC                     __ptext19:
  3661                           	callstack 0
  3662   0014BC                     _ADC_Initialize:
  3663                           	callstack 20
  3664   0014BC                     
  3665                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  3666   0014BC  6892               	setf	146,c	;volatile
  3667   0014BE                     
  3668                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0f;
  3669   0014BE  0E0F               	movlw	15
  3670   0014C0  6EC1               	movwf	193,c	;volatile
  3671   0014C2                     
  3672                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  3673   0014C2  8EC0               	bsf	4032,7,c	;volatile
  3674                           
  3675                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  3676   0014C4  0E07               	movlw	7
  3677   0014C6  12C0               	iorwf	192,f,c	;volatile
  3678                           
  3679                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  3680   0014C8  0E00               	movlw	0
  3681   0014CA  6EC4               	movwf	196,c	;volatile
  3682                           
  3683                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  3684   0014CC  0E00               	movlw	0
  3685   0014CE  6EC3               	movwf	195,c	;volatile
  3686   0014D0  0012               	return		;funcret
  3687   0014D2                     __end_of_ADC_Initialize:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function _Lo_ISR *****************
  3691 ;; Defined at:
  3692 ;;		line 79 in file "setting_hardaware/uart.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3706 ;;      Params:         0       0       0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0
  3708 ;;      Temps:          0       5       0       0       0       0       0
  3709 ;;      Totals:         0       5       0       0       0       0       0
  3710 ;;Total ram usage:        5 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 8
  3713 ;; This function calls:
  3714 ;;		_MyusartRead
  3715 ;; This function is called by:
  3716 ;;		Interrupt level 1
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	intcodelo
  3721   000018                     __pintcodelo:
  3722                           	callstack 0
  3723   000018                     _Lo_ISR:
  3724                           	callstack 16
  3725                           
  3726                           ;incstack = 0
  3727   000018  8044               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3728   00001A  CFD8 F0BB          	movff	status,??_Lo_ISR
  3729   00001E  CFE8 F0BC          	movff	wreg,??_Lo_ISR+1
  3730   000022  CFE0 F0BD          	movff	bsr,??_Lo_ISR+2
  3731   000026  CFD9 F0BE          	movff	fsr2l,??_Lo_ISR+3
  3732   00002A  CFDA F0BF          	movff	fsr2h,??_Lo_ISR+4
  3733   00002E                     
  3734                           ;setting_hardaware/uart.c: 81:     if(RCIF)
  3735   00002E  AA9E               	btfss	3998,5,c	;volatile
  3736   000030  EF1C  F000         	goto	i1u214_21
  3737   000034  EF1E  F000         	goto	i1u214_20
  3738   000038                     i1u214_21:
  3739   000038  EF2A  F000         	goto	i1l226
  3740   00003C                     i1u214_20:
  3741   00003C                     
  3742                           ;setting_hardaware/uart.c: 82:     {;setting_hardaware/uart.c: 83:         if(RCSTAbits.
      +                          OERR)
  3743   00003C  A2AB               	btfss	171,1,c	;volatile
  3744   00003E  EF23  F000         	goto	i1u215_21
  3745   000042  EF25  F000         	goto	i1u215_20
  3746   000046                     i1u215_21:
  3747   000046  EF28  F000         	goto	i1l2643
  3748   00004A                     i1u215_20:
  3749   00004A                     
  3750                           ;setting_hardaware/uart.c: 84:         {;setting_hardaware/uart.c: 85:             CREN 
      +                          = 0;
  3751   00004A  98AB               	bcf	4011,4,c	;volatile
  3752                           
  3753                           ;setting_hardaware/uart.c: 86:             __nop();
  3754   00004C  0000               	nop	
  3755                           
  3756                           ;setting_hardaware/uart.c: 87:             CREN = 1;
  3757   00004E  88AB               	bsf	4011,4,c	;volatile
  3758   000050                     i1l2643:
  3759                           
  3760                           ;setting_hardaware/uart.c: 90:         MyusartRead();
  3761   000050  EC34  F008         	call	_MyusartRead	;wreg free
  3762   000054                     i1l226:
  3763   000054  C0BF  FFDA         	movff	??_Lo_ISR+4,fsr2h
  3764   000058  C0BE  FFD9         	movff	??_Lo_ISR+3,fsr2l
  3765   00005C  C0BD  FFE0         	movff	??_Lo_ISR+2,bsr
  3766   000060  C0BC  FFE8         	movff	??_Lo_ISR+1,wreg
  3767   000064  C0BB  FFD8         	movff	??_Lo_ISR,status
  3768   000068  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3769   00006A  0010               	retfie	
  3770   00006C                     __end_of_Lo_ISR:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _MyusartRead *****************
  3774 ;; Defined at:
  3775 ;;		line 58 in file "setting_hardaware/uart.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3789 ;;      Params:         0       0       0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0
  3791 ;;      Temps:          1       0       0       0       0       0       0
  3792 ;;      Totals:         1       0       0       0       0       0       0
  3793 ;;Total ram usage:        1 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 7
  3796 ;; This function calls:
  3797 ;;		i1_UART_Write
  3798 ;;		i1___awmod
  3799 ;; This function is called by:
  3800 ;;		_Lo_ISR
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text21
  3805   001068                     __ptext21:
  3806                           	callstack 0
  3807   001068                     _MyusartRead:
  3808                           	callstack 16
  3809   001068                     
  3810                           ;setting_hardaware/uart.c: 61:     mystring[lenStr] = RCREG;
  3811   001068  0E00               	movlw	low _mystring
  3812   00106A  2440               	addwf	_lenStr^0,w,c
  3813   00106C  6ED9               	movwf	fsr2l,c
  3814   00106E  0E02               	movlw	high _mystring
  3815   001070  2041               	addwfc	(_lenStr+1)^0,w,c
  3816   001072  6EDA               	movwf	fsr2h,c
  3817   001074  CFAE FFDF          	movff	4014,indf2	;volatile
  3818                           
  3819                           ;setting_hardaware/uart.c: 62:     if (mystring[lenStr] == '\r'){
  3820   001078  0E00               	movlw	low _mystring
  3821   00107A  2440               	addwf	_lenStr^0,w,c
  3822   00107C  6ED9               	movwf	fsr2l,c
  3823   00107E  0E02               	movlw	high _mystring
  3824   001080  2041               	addwfc	(_lenStr+1)^0,w,c
  3825   001082  6EDA               	movwf	fsr2h,c
  3826   001084  0E0D               	movlw	13
  3827   001086  18DE               	xorwf	postinc2,w,c
  3828   001088  A4D8               	btfss	status,2,c
  3829   00108A  EF49  F008         	goto	i1u176_21
  3830   00108E  EF4B  F008         	goto	i1u176_20
  3831   001092                     i1u176_21:
  3832   001092  EF59  F008         	goto	i1l2319
  3833   001096                     i1u176_20:
  3834   001096                     
  3835                           ;setting_hardaware/uart.c: 63:         UART_Write(mystring[lenStr]);
  3836   001096  0E00               	movlw	low _mystring
  3837   001098  2440               	addwf	_lenStr^0,w,c
  3838   00109A  6ED9               	movwf	fsr2l,c
  3839   00109C  0E02               	movlw	high _mystring
  3840   00109E  2041               	addwfc	(_lenStr+1)^0,w,c
  3841   0010A0  6EDA               	movwf	fsr2h,c
  3842   0010A2  50DF               	movf	indf2,w,c
  3843   0010A4  EC69  F00A         	call	i1_UART_Write
  3844   0010A8                     
  3845                           ;setting_hardaware/uart.c: 64:         UART_Write('\n');
  3846   0010A8  0E0A               	movlw	10
  3847   0010AA  EC69  F00A         	call	i1_UART_Write
  3848                           
  3849                           ;setting_hardaware/uart.c: 65:     }
  3850   0010AE  EF62  F008         	goto	i1l2321
  3851   0010B2                     i1l2319:
  3852                           
  3853                           ;setting_hardaware/uart.c: 67:         UART_Write(mystring[lenStr]);
  3854   0010B2  0E00               	movlw	low _mystring
  3855   0010B4  2440               	addwf	_lenStr^0,w,c
  3856   0010B6  6ED9               	movwf	fsr2l,c
  3857   0010B8  0E02               	movlw	high _mystring
  3858   0010BA  2041               	addwfc	(_lenStr+1)^0,w,c
  3859   0010BC  6EDA               	movwf	fsr2h,c
  3860   0010BE  50DF               	movf	indf2,w,c
  3861   0010C0  EC69  F00A         	call	i1_UART_Write
  3862   0010C4                     i1l2321:
  3863                           
  3864                           ;setting_hardaware/uart.c: 68:     lenStr++;
  3865   0010C4  4A40               	infsnz	_lenStr^0,f,c
  3866   0010C6  2A41               	incf	(_lenStr+1)^0,f,c
  3867   0010C8                     
  3868                           ;setting_hardaware/uart.c: 69:     lenStr%=10;
  3869   0010C8  C040  F039         	movff	_lenStr,i1___awmod@dividend
  3870   0010CC  C041  F03A         	movff	_lenStr+1,i1___awmod@dividend+1
  3871   0010D0  0E00               	movlw	0
  3872   0010D2  6E3C               	movwf	(i1___awmod@divisor+1)^0,c
  3873   0010D4  0E0A               	movlw	10
  3874   0010D6  6E3B               	movwf	i1___awmod@divisor^0,c
  3875   0010D8  EC84  F007         	call	i1___awmod	;wreg free
  3876   0010DC  C039  F040         	movff	?i1___awmod,_lenStr
  3877   0010E0  C03A  F041         	movff	?i1___awmod+1,_lenStr+1
  3878   0010E4  0012               	return		;funcret
  3879   0010E6                     __end_of_MyusartRead:
  3880                           	callstack 0
  3881                           
  3882 ;; *************** function i1___awmod *****************
  3883 ;; Defined at:
  3884 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  dividend        2   56[COMRAM] int 
  3887 ;;  divisor         2   58[COMRAM] int 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  sign            1   61[COMRAM] unsigned char 
  3890 ;;  counter         1   60[COMRAM] unsigned char 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  2   56[COMRAM] int 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3900 ;;      Params:         4       0       0       0       0       0       0
  3901 ;;      Locals:         2       0       0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0
  3903 ;;      Totals:         6       0       0       0       0       0       0
  3904 ;;Total ram usage:        6 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 6
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_MyusartRead
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text22
  3915   000F08                     __ptext22:
  3916                           	callstack 0
  3917   000F08                     i1___awmod:
  3918                           	callstack 16
  3919   000F08  0E00               	movlw	0
  3920   000F0A  6E3E               	movwf	i1___awmod@sign^0,c
  3921   000F0C  BE3A               	btfsc	(i1___awmod@dividend+1)^0,7,c
  3922   000F0E  EF8D  F007         	goto	i1u169_20
  3923   000F12  EF8B  F007         	goto	i1u169_21
  3924   000F16                     i1u169_21:
  3925   000F16  EF93  F007         	goto	i1l2231
  3926   000F1A                     i1u169_20:
  3927   000F1A  6C39               	negf	i1___awmod@dividend^0,c
  3928   000F1C  1E3A               	comf	(i1___awmod@dividend+1)^0,f,c
  3929   000F1E  B0D8               	btfsc	status,0,c
  3930   000F20  2A3A               	incf	(i1___awmod@dividend+1)^0,f,c
  3931   000F22  0E01               	movlw	1
  3932   000F24  6E3E               	movwf	i1___awmod@sign^0,c
  3933   000F26                     i1l2231:
  3934   000F26  BE3C               	btfsc	(i1___awmod@divisor+1)^0,7,c
  3935   000F28  EF9A  F007         	goto	i1u170_20
  3936   000F2C  EF98  F007         	goto	i1u170_21
  3937   000F30                     i1u170_21:
  3938   000F30  EF9E  F007         	goto	i1l2235
  3939   000F34                     i1u170_20:
  3940   000F34  6C3B               	negf	i1___awmod@divisor^0,c
  3941   000F36  1E3C               	comf	(i1___awmod@divisor+1)^0,f,c
  3942   000F38  B0D8               	btfsc	status,0,c
  3943   000F3A  2A3C               	incf	(i1___awmod@divisor+1)^0,f,c
  3944   000F3C                     i1l2235:
  3945   000F3C  503B               	movf	i1___awmod@divisor^0,w,c
  3946   000F3E  103C               	iorwf	(i1___awmod@divisor+1)^0,w,c
  3947   000F40  B4D8               	btfsc	status,2,c
  3948   000F42  EFA5  F007         	goto	i1u171_21
  3949   000F46  EFA7  F007         	goto	i1u171_20
  3950   000F4A                     i1u171_21:
  3951   000F4A  EFCB  F007         	goto	i1l2251
  3952   000F4E                     i1u171_20:
  3953   000F4E  0E01               	movlw	1
  3954   000F50  6E3D               	movwf	i1___awmod@counter^0,c
  3955   000F52  EFAF  F007         	goto	i1l2241
  3956   000F56                     i1l2239:
  3957   000F56  90D8               	bcf	status,0,c
  3958   000F58  363B               	rlcf	i1___awmod@divisor^0,f,c
  3959   000F5A  363C               	rlcf	(i1___awmod@divisor+1)^0,f,c
  3960   000F5C  2A3D               	incf	i1___awmod@counter^0,f,c
  3961   000F5E                     i1l2241:
  3962   000F5E  AE3C               	btfss	(i1___awmod@divisor+1)^0,7,c
  3963   000F60  EFB4  F007         	goto	i1u172_21
  3964   000F64  EFB6  F007         	goto	i1u172_20
  3965   000F68                     i1u172_21:
  3966   000F68  EFAB  F007         	goto	i1l2239
  3967   000F6C                     i1u172_20:
  3968   000F6C                     i1l2243:
  3969   000F6C  503B               	movf	i1___awmod@divisor^0,w,c
  3970   000F6E  5C39               	subwf	i1___awmod@dividend^0,w,c
  3971   000F70  503C               	movf	(i1___awmod@divisor+1)^0,w,c
  3972   000F72  583A               	subwfb	(i1___awmod@dividend+1)^0,w,c
  3973   000F74  A0D8               	btfss	status,0,c
  3974   000F76  EFBF  F007         	goto	i1u173_21
  3975   000F7A  EFC1  F007         	goto	i1u173_20
  3976   000F7E                     i1u173_21:
  3977   000F7E  EFC5  F007         	goto	i1l2247
  3978   000F82                     i1u173_20:
  3979   000F82  503B               	movf	i1___awmod@divisor^0,w,c
  3980   000F84  5E39               	subwf	i1___awmod@dividend^0,f,c
  3981   000F86  503C               	movf	(i1___awmod@divisor+1)^0,w,c
  3982   000F88  5A3A               	subwfb	(i1___awmod@dividend+1)^0,f,c
  3983   000F8A                     i1l2247:
  3984   000F8A  90D8               	bcf	status,0,c
  3985   000F8C  323C               	rrcf	(i1___awmod@divisor+1)^0,f,c
  3986   000F8E  323B               	rrcf	i1___awmod@divisor^0,f,c
  3987   000F90  2E3D               	decfsz	i1___awmod@counter^0,f,c
  3988   000F92  EFB6  F007         	goto	i1l2243
  3989   000F96                     i1l2251:
  3990   000F96  503E               	movf	i1___awmod@sign^0,w,c
  3991   000F98  B4D8               	btfsc	status,2,c
  3992   000F9A  EFD1  F007         	goto	i1u174_21
  3993   000F9E  EFD3  F007         	goto	i1u174_20
  3994   000FA2                     i1u174_21:
  3995   000FA2  EFD7  F007         	goto	i1l2255
  3996   000FA6                     i1u174_20:
  3997   000FA6  6C39               	negf	i1___awmod@dividend^0,c
  3998   000FA8  1E3A               	comf	(i1___awmod@dividend+1)^0,f,c
  3999   000FAA  B0D8               	btfsc	status,0,c
  4000   000FAC  2A3A               	incf	(i1___awmod@dividend+1)^0,f,c
  4001   000FAE                     i1l2255:
  4002   000FAE  C039  F039         	movff	i1___awmod@dividend,?i1___awmod
  4003   000FB2  C03A  F03A         	movff	i1___awmod@dividend+1,?i1___awmod+1
  4004   000FB6  0012               	return		;funcret
  4005   000FB8                     __end_ofi1___awmod:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function i1_UART_Write *****************
  4009 ;; Defined at:
  4010 ;;		line 39 in file "setting_hardaware/uart.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  data            1    wreg     unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  data            1   56[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4024 ;;      Params:         0       0       0       0       0       0       0
  4025 ;;      Locals:         1       0       0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0
  4027 ;;      Totals:         1       0       0       0       0       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 6
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_MyusartRead
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text23
  4039   0014D2                     __ptext23:
  4040                           	callstack 0
  4041   0014D2                     i1_UART_Write:
  4042                           	callstack 16
  4043                           
  4044                           ;incstack = 0
  4045                           ;i1UART_Write@data stored from wreg
  4046   0014D2  6E39               	movwf	i1UART_Write@data^0,c
  4047   0014D4                     i1l197:
  4048   0014D4  A2AC               	btfss	172,1,c	;volatile
  4049   0014D6  EF6F  F00A         	goto	i1u167_21
  4050   0014DA  EF71  F00A         	goto	i1u167_20
  4051   0014DE                     i1u167_21:
  4052   0014DE  EF6A  F00A         	goto	i1l197
  4053   0014E2                     i1u167_20:
  4054   0014E2                     
  4055                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  4056   0014E2  C039  FFAD         	movff	i1UART_Write@data,4013	;volatile
  4057   0014E6  0012               	return		;funcret
  4058   0014E8                     __end_ofi1_UART_Write:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _Hi_ISR *****************
  4062 ;; Defined at:
  4063 ;;		line 149 in file "main.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4077 ;;      Params:         0       0       0       0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0
  4079 ;;      Temps:          8       0       0       0       0       0       0
  4080 ;;      Totals:         8       0       0       0       0       0       0
  4081 ;;Total ram usage:        8 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; Hardware stack levels required when called: 5
  4084 ;; This function calls:
  4085 ;;		i2_ClearBuffer
  4086 ;;		i2_UART_Write_Text
  4087 ;;		i2_sprintf
  4088 ;;		i2_strcpy
  4089 ;; This function is called by:
  4090 ;;		Interrupt level 2
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	intcode
  4095   000008                     __pintcode:
  4096                           	callstack 0
  4097   000008                     _Hi_ISR:
  4098                           	callstack 16
  4099                           
  4100                           ;incstack = 0
  4101   000008  8244               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4102   00000A  ED7D  F004         	call	int_func,f	;refresh shadow registers
  4103                           
  4104                           	psect	intcode_body
  4105   0008FA                     __pintcode_body:
  4106                           	callstack 16
  4107   0008FA                     int_func:
  4108                           	callstack 16
  4109   0008FA  0006               	pop		; remove dummy address from shadow register refresh
  4110   0008FC  CFE1 F031          	movff	fsr1l,??_Hi_ISR
  4111   000900  CFE2 F032          	movff	fsr1h,??_Hi_ISR+1
  4112   000904  CFD9 F033          	movff	fsr2l,??_Hi_ISR+2
  4113   000908  CFDA F034          	movff	fsr2h,??_Hi_ISR+3
  4114   00090C  CFF6 F035          	movff	tblptrl,??_Hi_ISR+4
  4115   000910  CFF7 F036          	movff	tblptrh,??_Hi_ISR+5
  4116   000914  CFF8 F037          	movff	tblptru,??_Hi_ISR+6
  4117   000918  CFF5 F038          	movff	tablat,??_Hi_ISR+7
  4118   00091C                     
  4119                           ;main.c: 151:     if(INTCONbits.INT0F == 1){
  4120   00091C  A2F2               	btfss	242,1,c	;volatile
  4121   00091E  EF93  F004         	goto	i2u209_41
  4122   000922  EF95  F004         	goto	i2u209_40
  4123   000926                     i2u209_41:
  4124   000926  EF2C  F005         	goto	i2l84
  4125   00092A                     i2u209_40:
  4126   00092A                     
  4127                           ;main.c: 152:         if(button){
  4128   00092A  5042               	movf	_button^0,w,c
  4129   00092C  1043               	iorwf	(_button+1)^0,w,c
  4130   00092E  B4D8               	btfsc	status,2,c
  4131   000930  EF9C  F004         	goto	i2u210_41
  4132   000934  EF9E  F004         	goto	i2u210_40
  4133   000938                     i2u210_41:
  4134   000938  EF2B  F005         	goto	i2l80
  4135   00093C                     i2u210_40:
  4136   00093C                     
  4137                           ;main.c: 153:             strcpy(str,"START\n\r");
  4138   00093C  0E00               	movlw	low _str
  4139   00093E  6E01               	movwf	i2strcpy@dest^0,c
  4140   000940  0E01               	movlw	high _str
  4141   000942  6E02               	movwf	(i2strcpy@dest+1)^0,c
  4142   000944  0EB3               	movlw	low STR_12
  4143   000946  6E03               	movwf	i2strcpy@src^0,c
  4144   000948  0E7D               	movlw	high STR_12
  4145   00094A  6E04               	movwf	(i2strcpy@src+1)^0,c
  4146   00094C  ECD9  F009         	call	i2_strcpy	;wreg free
  4147   000950                     
  4148                           ;main.c: 154:             UART_Write_Text(str);
  4149   000950  0E00               	movlw	low _str
  4150   000952  6E02               	movwf	i2UART_Write_Text@text^0,c
  4151   000954  0E01               	movlw	high _str
  4152   000956  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4153   000958  EC5F  F009         	call	i2_UART_Write_Text	;wreg free
  4154   00095C                     
  4155                           ;main.c: 155:             ClearBuffer();
  4156   00095C  EC7F  F009         	call	i2_ClearBuffer	;wreg free
  4157                           
  4158                           ;main.c: 156:             strcpy(str,"\rscore : ");
  4159   000960  0E00               	movlw	low _str
  4160   000962  6E01               	movwf	i2strcpy@dest^0,c
  4161   000964  0E01               	movlw	high _str
  4162   000966  6E02               	movwf	(i2strcpy@dest+1)^0,c
  4163   000968  0EA9               	movlw	low STR_1
  4164   00096A  6E03               	movwf	i2strcpy@src^0,c
  4165   00096C  0E7D               	movlw	high STR_1
  4166   00096E  6E04               	movwf	(i2strcpy@src+1)^0,c
  4167   000970  ECD9  F009         	call	i2_strcpy	;wreg free
  4168   000974                     
  4169                           ;main.c: 157:             UART_Write_Text(str);
  4170   000974  0E00               	movlw	low _str
  4171   000976  6E02               	movwf	i2UART_Write_Text@text^0,c
  4172   000978  0E01               	movlw	high _str
  4173   00097A  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4174   00097C  EC5F  F009         	call	i2_UART_Write_Text	;wreg free
  4175   000980                     
  4176                           ;main.c: 158:             ClearBuffer();
  4177   000980  EC7F  F009         	call	i2_ClearBuffer	;wreg free
  4178   000984                     
  4179                           ;main.c: 159:             sprintf(str,"%d",score);
  4180   000984  0E00               	movlw	low _str
  4181   000986  6E1E               	movwf	i2sprintf@s^0,c
  4182   000988  0E01               	movlw	high _str
  4183   00098A  6E1F               	movwf	(i2sprintf@s+1)^0,c
  4184   00098C  0EBB               	movlw	low STR_2
  4185   00098E  6E20               	movwf	i2sprintf@fmt^0,c
  4186   000990  0E7D               	movlw	high STR_2
  4187   000992  6E21               	movwf	(i2sprintf@fmt+1)^0,c
  4188   000994  C0B8  F022         	movff	_score,?i2_sprintf+4
  4189   000998  C0B9  F023         	movff	_score+1,?i2_sprintf+5
  4190   00099C  EC3F  F009         	call	i2_sprintf	;wreg free
  4191   0009A0                     
  4192                           ;main.c: 160:             UART_Write_Text(str);
  4193   0009A0  0E00               	movlw	low _str
  4194   0009A2  6E02               	movwf	i2UART_Write_Text@text^0,c
  4195   0009A4  0E01               	movlw	high _str
  4196   0009A6  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4197   0009A8  EC5F  F009         	call	i2_UART_Write_Text	;wreg free
  4198   0009AC                     
  4199                           ;main.c: 161:             ClearBuffer();
  4200   0009AC  EC7F  F009         	call	i2_ClearBuffer	;wreg free
  4201   0009B0                     
  4202                           ;main.c: 163:             ready = 1;
  4203   0009B0  0E00               	movlw	0
  4204   0009B2  0100               	movlb	0	; () banked
  4205   0009B4  6FA5               	movwf	(_ready+1)& (0+255),b
  4206   0009B6  0E01               	movlw	1
  4207   0009B8  6FA4               	movwf	_ready& (0+255),b
  4208   0009BA                     
  4209                           ; BSR set to: 0
  4210                           ;main.c: 164:             stop =0;
  4211   0009BA  0E00               	movlw	0
  4212   0009BC  6FB5               	movwf	(_stop+1)& (0+255),b
  4213   0009BE  0E00               	movlw	0
  4214   0009C0  6FB4               	movwf	_stop& (0+255),b
  4215   0009C2                     
  4216                           ; BSR set to: 0
  4217                           ;main.c: 165:             if(state < 5){
  4218   0009C2  BFB7               	btfsc	(_state+1)& (0+255),7,b
  4219   0009C4  EFEF  F004         	goto	i2u211_40
  4220   0009C8  51B7               	movf	(_state+1)& (0+255),w,b
  4221   0009CA  E107               	bnz	i2u211_41
  4222   0009CC  0E05               	movlw	5
  4223   0009CE  5DB6               	subwf	_state& (0+255),w,b
  4224   0009D0  B0D8               	btfsc	status,0,c
  4225   0009D2  EFED  F004         	goto	i2u211_41
  4226   0009D6  EFEF  F004         	goto	i2u211_40
  4227   0009DA                     i2u211_41:
  4228   0009DA  EF0B  F005         	goto	i2l2601
  4229   0009DE                     i2u211_40:
  4230   0009DE                     
  4231                           ; BSR set to: 0
  4232                           ;main.c: 166:                 state ++;
  4233   0009DE  4BB6               	infsnz	_state& (0+255),f,b
  4234   0009E0  2BB7               	incf	(_state+1)& (0+255),f,b
  4235   0009E2                     
  4236                           ; BSR set to: 0
  4237                           ;main.c: 167:                 d1 = 0;
  4238   0009E2  0E00               	movlw	0
  4239   0009E4  6FB1               	movwf	(_d1+1)& (0+255),b
  4240   0009E6  0E00               	movlw	0
  4241   0009E8  6FB0               	movwf	_d1& (0+255),b
  4242   0009EA                     
  4243                           ; BSR set to: 0
  4244                           ;main.c: 168:                 d2 = 0;
  4245   0009EA  0E00               	movlw	0
  4246   0009EC  6FAF               	movwf	(_d2+1)& (0+255),b
  4247   0009EE  0E00               	movlw	0
  4248   0009F0  6FAE               	movwf	_d2& (0+255),b
  4249   0009F2                     
  4250                           ; BSR set to: 0
  4251                           ;main.c: 169:                 d3 = 0;
  4252   0009F2  0E00               	movlw	0
  4253   0009F4  6FAD               	movwf	(_d3+1)& (0+255),b
  4254   0009F6  0E00               	movlw	0
  4255   0009F8  6FAC               	movwf	_d3& (0+255),b
  4256   0009FA                     
  4257                           ; BSR set to: 0
  4258                           ;main.c: 170:                 d4 = 0;
  4259   0009FA  0E00               	movlw	0
  4260   0009FC  6FAB               	movwf	(_d4+1)& (0+255),b
  4261   0009FE  0E00               	movlw	0
  4262   000A00  6FAA               	movwf	_d4& (0+255),b
  4263   000A02                     
  4264                           ; BSR set to: 0
  4265                           ;main.c: 171:                 d5 = 0;
  4266   000A02  0E00               	movlw	0
  4267   000A04  6FA9               	movwf	(_d5+1)& (0+255),b
  4268   000A06  0E00               	movlw	0
  4269   000A08  6FA8               	movwf	_d5& (0+255),b
  4270   000A0A                     
  4271                           ; BSR set to: 0
  4272                           ;main.c: 172:                 d6 = 0;
  4273   000A0A  0E00               	movlw	0
  4274   000A0C  6FA7               	movwf	(_d6+1)& (0+255),b
  4275   000A0E  0E00               	movlw	0
  4276   000A10  6FA6               	movwf	_d6& (0+255),b
  4277                           
  4278                           ;main.c: 173:             }else{
  4279   000A12  EF23  F005         	goto	i2l2603
  4280   000A16                     i2l2601:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;main.c: 174:                 d1 = 0;
  4284   000A16  0E00               	movlw	0
  4285   000A18  6FB1               	movwf	(_d1+1)& (0+255),b
  4286   000A1A  0E00               	movlw	0
  4287   000A1C  6FB0               	movwf	_d1& (0+255),b
  4288                           
  4289                           ;main.c: 175:                 d2 = 0;
  4290   000A1E  0E00               	movlw	0
  4291   000A20  6FAF               	movwf	(_d2+1)& (0+255),b
  4292   000A22  0E00               	movlw	0
  4293   000A24  6FAE               	movwf	_d2& (0+255),b
  4294                           
  4295                           ;main.c: 176:                 d3 = 0;
  4296   000A26  0E00               	movlw	0
  4297   000A28  6FAD               	movwf	(_d3+1)& (0+255),b
  4298   000A2A  0E00               	movlw	0
  4299   000A2C  6FAC               	movwf	_d3& (0+255),b
  4300                           
  4301                           ;main.c: 177:                 d4 = 0;
  4302   000A2E  0E00               	movlw	0
  4303   000A30  6FAB               	movwf	(_d4+1)& (0+255),b
  4304   000A32  0E00               	movlw	0
  4305   000A34  6FAA               	movwf	_d4& (0+255),b
  4306                           
  4307                           ;main.c: 178:                 d5 = 0;
  4308   000A36  0E00               	movlw	0
  4309   000A38  6FA9               	movwf	(_d5+1)& (0+255),b
  4310   000A3A  0E00               	movlw	0
  4311   000A3C  6FA8               	movwf	_d5& (0+255),b
  4312                           
  4313                           ;main.c: 179:                 d6 = 0;
  4314   000A3E  0E00               	movlw	0
  4315   000A40  6FA7               	movwf	(_d6+1)& (0+255),b
  4316   000A42  0E00               	movlw	0
  4317   000A44  6FA6               	movwf	_d6& (0+255),b
  4318   000A46                     i2l2603:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;main.c: 181:             LATDbits.LD1 = 1;
  4322   000A46  828C               	bsf	140,1,c	;volatile
  4323   000A48                     
  4324                           ; BSR set to: 0
  4325                           ;main.c: 182:             INTCONbits.INT0F = 0;
  4326   000A48  92F2               	bcf	242,1,c	;volatile
  4327                           
  4328                           ;main.c: 183:             button = 0;
  4329   000A4A  0E00               	movlw	0
  4330   000A4C  6E43               	movwf	(_button+1)^0,c
  4331   000A4E  0E00               	movlw	0
  4332   000A50  6E42               	movwf	_button^0,c
  4333                           
  4334                           ;main.c: 184:         }else{
  4335   000A52  EF2C  F005         	goto	i2l84
  4336   000A56                     i2l80:
  4337                           
  4338                           ;main.c: 185:             INTCONbits.INT0F = 0;
  4339   000A56  92F2               	bcf	242,1,c	;volatile
  4340   000A58                     i2l84:
  4341   000A58  C038  FFF5         	movff	??_Hi_ISR+7,tablat
  4342   000A5C  C037  FFF8         	movff	??_Hi_ISR+6,tblptru
  4343   000A60  C036  FFF7         	movff	??_Hi_ISR+5,tblptrh
  4344   000A64  C035  FFF6         	movff	??_Hi_ISR+4,tblptrl
  4345   000A68  C034  FFDA         	movff	??_Hi_ISR+3,fsr2h
  4346   000A6C  C033  FFD9         	movff	??_Hi_ISR+2,fsr2l
  4347   000A70  C032  FFE2         	movff	??_Hi_ISR+1,fsr1h
  4348   000A74  C031  FFE1         	movff	??_Hi_ISR,fsr1l
  4349   000A78  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4350   000A7A  0011               	retfie		f
  4351   000A7C                     __end_of_Hi_ISR:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function i2_strcpy *****************
  4355 ;; Defined at:
  4356 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4359 ;;		 -> str(200), 
  4360 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4361 ;;		 -> STR_13(10), STR_12(8), STR_11(43), STR_10(31), 
  4362 ;;		 -> STR_9(15), STR_8(43), STR_7(46), STR_6(15), 
  4363 ;;		 -> STR_5(43), STR_4(38), STR_3(32), STR_1(10), 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  d               2    4[COMRAM] PTR unsigned char 
  4366 ;;		 -> str(200), 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  2    0[COMRAM] PTR unsigned char 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4376 ;;      Params:         4       0       0       0       0       0       0
  4377 ;;      Locals:         2       0       0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0       0       0
  4379 ;;      Totals:         6       0       0       0       0       0       0
  4380 ;;Total ram usage:        6 bytes
  4381 ;; Hardware stack levels used: 1
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_Hi_ISR
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text25
  4390   0013B2                     __ptext25:
  4391                           	callstack 0
  4392   0013B2                     i2_strcpy:
  4393                           	callstack 20
  4394   0013B2  C001  F005         	movff	i2strcpy@dest,i2strcpy@d
  4395   0013B6  C002  F006         	movff	i2strcpy@dest+1,i2strcpy@d+1
  4396   0013BA                     i2l2363:
  4397   0013BA  C003  FFF6         	movff	i2strcpy@src,tblptrl
  4398   0013BE  C004  FFF7         	movff	i2strcpy@src+1,tblptrh
  4399   0013C2  4A03               	infsnz	i2strcpy@src^0,f,c
  4400   0013C4  2A04               	incf	(i2strcpy@src+1)^0,f,c
  4401   0013C6                     	if	0	;tblptru may be non-zero
  4402   0013C6                     	endif
  4403   0013C6                     	if	0	;tblptru may be non-zero
  4404   0013C6                     	endif
  4405   0013C6  C005  FFD9         	movff	i2strcpy@d,fsr2l
  4406   0013CA  C006  FFDA         	movff	i2strcpy@d+1,fsr2h
  4407   0013CE  4A05               	infsnz	i2strcpy@d^0,f,c
  4408   0013D0  2A06               	incf	(i2strcpy@d+1)^0,f,c
  4409   0013D2  0008               	tblrd		*
  4410   0013D4  CFF5 FFDF          	movff	tablat,indf2
  4411   0013D8  50DF               	movf	indf2,w,c
  4412   0013DA  A4D8               	btfss	status,2,c
  4413   0013DC  EFF2  F009         	goto	i2u179_41
  4414   0013E0  EFF4  F009         	goto	i2u179_40
  4415   0013E4                     i2u179_41:
  4416   0013E4  EFDD  F009         	goto	i2l2363
  4417   0013E8                     i2u179_40:
  4418   0013E8  0012               	return		;funcret
  4419   0013EA                     __end_ofi2_strcpy:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function i2_sprintf *****************
  4423 ;; Defined at:
  4424 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  s               2   29[COMRAM] PTR unsigned char 
  4427 ;;		 -> str(200), 
  4428 ;;  fmt             2   31[COMRAM] PTR const unsigned char 
  4429 ;;		 -> STR_14(3), STR_2(3), 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  f              12   36[COMRAM] struct _IO_FILE
  4432 ;;  ret             2    0        int 
  4433 ;;  ap              1   35[COMRAM] PTR void [1]
  4434 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2   29[COMRAM] int 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4444 ;;      Params:         6       0       0       0       0       0       0
  4445 ;;      Locals:        13       0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0
  4447 ;;      Totals:        19       0       0       0       0       0       0
  4448 ;;Total ram usage:       19 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 4
  4451 ;; This function calls:
  4452 ;;		i2_vfprintf
  4453 ;; This function is called by:
  4454 ;;		_Hi_ISR
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text26
  4459   00127E                     __ptext26:
  4460                           	callstack 0
  4461   00127E                     i2_sprintf:
  4462                           	callstack 16
  4463   00127E  0E22               	movlw	low (?i2_sprintf+4)
  4464   001280  6E24               	movwf	i2sprintf@ap^0,c
  4465   001282  C01E  F025         	movff	i2sprintf@s,i2sprintf@f
  4466   001286  C01F  F026         	movff	i2sprintf@s+1,i2sprintf@f+1
  4467   00128A  0E00               	movlw	0
  4468   00128C  6E29               	movwf	(i2sprintf@f+4)^0,c
  4469   00128E  0E00               	movlw	0
  4470   001290  6E28               	movwf	(i2sprintf@f+3)^0,c
  4471   001292  0E00               	movlw	0
  4472   001294  6E30               	movwf	(i2sprintf@f+11)^0,c
  4473   001296  0E00               	movlw	0
  4474   001298  6E2F               	movwf	(i2sprintf@f+10)^0,c
  4475   00129A  0E25               	movlw	low i2sprintf@f
  4476   00129C  6E18               	movwf	i2vfprintf@fp^0,c
  4477   00129E  C020  F019         	movff	i2sprintf@fmt,i2vfprintf@fmt
  4478   0012A2  C021  F01A         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  4479   0012A6  0E24               	movlw	low i2sprintf@ap
  4480   0012A8  6E1B               	movwf	i2vfprintf@ap^0,c
  4481   0012AA  EC1E  F009         	call	i2_vfprintf	;wreg free
  4482   0012AE  5028               	movf	(i2sprintf@f+3)^0,w,c
  4483   0012B0  241E               	addwf	i2sprintf@s^0,w,c
  4484   0012B2  6ED9               	movwf	fsr2l,c
  4485   0012B4  5029               	movf	(i2sprintf@f+4)^0,w,c
  4486   0012B6  201F               	addwfc	(i2sprintf@s+1)^0,w,c
  4487   0012B8  6EDA               	movwf	fsr2h,c
  4488   0012BA  6ADF               	clrf	indf2,c
  4489   0012BC  0012               	return		;funcret
  4490   0012BE                     __end_ofi2_sprintf:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function i2_vfprintf *****************
  4494 ;; Defined at:
  4495 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  4498 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  4499 ;;  fmt             2   24[COMRAM] PTR const unsigned char 
  4500 ;;		 -> STR_14(3), STR_2(3), 
  4501 ;;  ap              1   26[COMRAM] PTR PTR void 
  4502 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  cfmt            2   27[COMRAM] PTR unsigned char 
  4505 ;;		 -> STR_14(3), STR_2(3), 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  2   23[COMRAM] int 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4515 ;;      Params:         4       0       0       0       0       0       0
  4516 ;;      Locals:         2       0       0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0
  4518 ;;      Totals:         6       0       0       0       0       0       0
  4519 ;;Total ram usage:        6 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; Hardware stack levels required when called: 3
  4522 ;; This function calls:
  4523 ;;		i2_vfpfcnvrt
  4524 ;; This function is called by:
  4525 ;;		i2_sprintf
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text27
  4530   00123C                     __ptext27:
  4531                           	callstack 0
  4532   00123C                     i2_vfprintf:
  4533                           	callstack 16
  4534   00123C                     
  4535                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4536   00123C  C019  F01C         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4537   001240  C01A  F01D         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4540   001244  EF2C  F009         	goto	i2l2263
  4541   001248                     i2l2261:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4544   001248  C018  F00B         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4545   00124C  0E1C               	movlw	low i2vfprintf@cfmt
  4546   00124E  6E0C               	movwf	i2vfpfcnvrt@fmt^0,c
  4547   001250  C01B  F00D         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4548   001254  EC92  F003         	call	i2_vfpfcnvrt	;wreg free
  4549   001258                     i2l2263:
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4552   001258  C01C  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4553   00125C  C01D  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  4554   001260                     	if	0	;tblptru may be non-zero
  4555   001260                     	endif
  4556   001260                     	if	0	;tblptru may be non-zero
  4557   001260                     	endif
  4558   001260  0008               	tblrd		*
  4559   001262  50F5               	movf	tablat,w,c
  4560   001264  0900               	iorlw	0
  4561   001266  A4D8               	btfss	status,2,c
  4562   001268  EF38  F009         	goto	i2u175_41
  4563   00126C  EF3A  F009         	goto	i2u175_40
  4564   001270                     i2u175_41:
  4565   001270  EF24  F009         	goto	i2l2261
  4566   001274                     i2u175_40:
  4567   001274                     
  4568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4569   001274  0E00               	movlw	0
  4570   001276  6E19               	movwf	(?i2_vfprintf+1)^0,c
  4571   001278  0E00               	movlw	0
  4572   00127A  6E18               	movwf	?i2_vfprintf^0,c
  4573   00127C  0012               	return		;funcret
  4574   00127E                     __end_ofi2_vfprintf:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function i2_vfpfcnvrt *****************
  4578 ;; Defined at:
  4579 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4582 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  4583 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  4584 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  4585 ;;  ap              1   12[COMRAM] PTR PTR void 
  4586 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  convarg         4   18[COMRAM] struct .
  4589 ;;  cp              2   16[COMRAM] PTR unsigned char 
  4590 ;;		 -> STR_14(3), STR_2(3), 
  4591 ;;  c               1   22[COMRAM] unsigned char 
  4592 ;;  done            1   15[COMRAM] _Bool 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4602 ;;      Params:         3       0       0       0       0       0       0
  4603 ;;      Locals:         8       0       0       0       0       0       0
  4604 ;;      Temps:          2       0       0       0       0       0       0
  4605 ;;      Totals:        13       0       0       0       0       0       0
  4606 ;;Total ram usage:       13 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 2
  4609 ;; This function calls:
  4610 ;;		i2___awdiv
  4611 ;;		i2___awmod
  4612 ;;		i2_abs
  4613 ;;		i2_fputc
  4614 ;; This function is called by:
  4615 ;;		i2_vfprintf
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text28
  4620   000724                     __ptext28:
  4621                           	callstack 0
  4622   000724                     i2_vfpfcnvrt:
  4623                           	callstack 16
  4624   000724                     
  4625                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4626   000724  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4627   000726  6ED9               	movwf	fsr2l,c
  4628   000728  6ADA               	clrf	fsr2h,c
  4629   00072A  CFDE FFF6          	movff	postinc2,tblptrl
  4630   00072E  CFDD FFF7          	movff	postdec2,tblptrh
  4631   000732                     	if	0	;tblptru may be non-zero
  4632   000732                     	endif
  4633   000732                     	if	0	;tblptru may be non-zero
  4634   000732                     	endif
  4635   000732  0008               	tblrd		*
  4636   000734  50F5               	movf	tablat,w,c
  4637   000736  0A25               	xorlw	37
  4638   000738  A4D8               	btfss	status,2,c
  4639   00073A  EFA1  F003         	goto	i2u154_41
  4640   00073E  EFA3  F003         	goto	i2u154_40
  4641   000742                     i2u154_41:
  4642   000742  EF6B  F004         	goto	i2l2123
  4643   000746                     i2u154_40:
  4644   000746                     
  4645                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4646   000746  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4647   000748  6ED9               	movwf	fsr2l,c
  4648   00074A  6ADA               	clrf	fsr2h,c
  4649   00074C  2ADE               	incf	postinc2,f,c
  4650   00074E  0E00               	movlw	0
  4651   000750  22DD               	addwfc	postdec2,f,c
  4652   000752                     
  4653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4654   000752  0E00               	movlw	0
  4655   000754  0100               	movlb	0	; () banked
  4656   000756  6FA1               	movwf	(_width+1)& (0+255),b
  4657   000758  0E00               	movlw	0
  4658   00075A  6FA0               	movwf	_width& (0+255),b
  4659   00075C  C0A0  F0BA         	movff	_width,_flags
  4660   000760                     
  4661                           ; BSR set to: 0
  4662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4663   000760  69A2               	setf	_prec& (0+255),b
  4664   000762  69A3               	setf	(_prec+1)& (0+255),b
  4665   000764                     
  4666                           ; BSR set to: 0
  4667                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4668   000764  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4669   000766  6ED9               	movwf	fsr2l,c
  4670   000768  6ADA               	clrf	fsr2h,c
  4671   00076A  CFDE F011          	movff	postinc2,i2vfpfcnvrt@cp
  4672   00076E  CFDD F012          	movff	postdec2,i2vfpfcnvrt@cp+1
  4673   000772                     
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4676   000772  C011  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4677   000776  C012  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  4678   00077A                     	if	0	;tblptru may be non-zero
  4679   00077A                     	endif
  4680   00077A                     	if	0	;tblptru may be non-zero
  4681   00077A                     	endif
  4682   00077A  0008               	tblrd		*
  4683   00077C  50F5               	movf	tablat,w,c
  4684   00077E  0A64               	xorlw	100
  4685   000780  B4D8               	btfsc	status,2,c
  4686   000782  EFC5  F003         	goto	i2u155_41
  4687   000786  EFC7  F003         	goto	i2u155_40
  4688   00078A                     i2u155_41:
  4689   00078A  EFD5  F003         	goto	i2l2093
  4690   00078E                     i2u155_40:
  4691   00078E                     
  4692                           ; BSR set to: 0
  4693   00078E  C011  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4694   000792  C012  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  4695   000796                     	if	0	;tblptru may be non-zero
  4696   000796                     	endif
  4697   000796                     	if	0	;tblptru may be non-zero
  4698   000796                     	endif
  4699   000796  0008               	tblrd		*
  4700   000798  50F5               	movf	tablat,w,c
  4701   00079A  0A69               	xorlw	105
  4702   00079C  A4D8               	btfss	status,2,c
  4703   00079E  EFD3  F003         	goto	i2u156_41
  4704   0007A2  EFD5  F003         	goto	i2u156_40
  4705   0007A6                     i2u156_41:
  4706   0007A6  EF63  F004         	goto	i2l2119
  4707   0007AA                     i2u156_40:
  4708   0007AA                     i2l2093:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4712   0007AA  500D               	movf	i2vfpfcnvrt@ap^0,w,c
  4713   0007AC  6ED9               	movwf	fsr2l,c
  4714   0007AE  6ADA               	clrf	fsr2h,c
  4715   0007B0  0E02               	movlw	2
  4716   0007B2  26DF               	addwf	indf2,f,c
  4717   0007B4  5CDF               	subwf	indf2,w,c
  4718   0007B6  6ED9               	movwf	fsr2l,c
  4719   0007B8  6ADA               	clrf	fsr2h,c
  4720   0007BA  CFDE F013          	movff	postinc2,i2vfpfcnvrt@convarg
  4721   0007BE  CFDE F014          	movff	postinc2,i2vfpfcnvrt@convarg+1
  4722   0007C2                     
  4723                           ; BSR set to: 0
  4724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4725   0007C2  0E01               	movlw	1
  4726   0007C4  2411               	addwf	i2vfpfcnvrt@cp^0,w,c
  4727   0007C6  6E0E               	movwf	??i2_vfpfcnvrt^0,c
  4728   0007C8  0E00               	movlw	0
  4729   0007CA  2012               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  4730   0007CC  6E0F               	movwf	(??i2_vfpfcnvrt+1)^0,c
  4731   0007CE  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4732   0007D0  6ED9               	movwf	fsr2l,c
  4733   0007D2  6ADA               	clrf	fsr2h,c
  4734   0007D4  C00E  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  4735   0007D8  C00F  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  4736   0007DC                     
  4737                           ; BSR set to: 0
  4738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4739   0007DC  0E20               	movlw	32
  4740   0007DE  6E17               	movwf	i2vfpfcnvrt@c^0,c
  4741                           
  4742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4743   0007E0  BE14               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
  4744   0007E2  EFF5  F003         	goto	i2u157_41
  4745   0007E6  EFF8  F003         	goto	i2u157_40
  4746   0007EA                     i2u157_41:
  4747   0007EA  0E01               	movlw	1
  4748   0007EC  EFF9  F003         	goto	i2u158_40
  4749   0007F0                     i2u157_40:
  4750   0007F0  0E00               	movlw	0
  4751   0007F2                     i2u158_40:
  4752   0007F2  6E10               	movwf	i2vfpfcnvrt@done^0,c
  4753   0007F4                     i2l2099:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4756   0007F4  0617               	decf	i2vfpfcnvrt@c^0,f,c
  4757   0007F6  5017               	movf	i2vfpfcnvrt@c^0,w,c
  4758   0007F8  0F80               	addlw	low _dbuf
  4759   0007FA  6ED9               	movwf	fsr2l,c
  4760   0007FC  6ADA               	clrf	fsr2h,c
  4761   0007FE  C013  F001         	movff	i2vfpfcnvrt@convarg,i2___awmod@dividend
  4762   000802  C014  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awmod@dividend+1
  4763   000806  0E00               	movlw	0
  4764   000808  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4765   00080A  0E0A               	movlw	10
  4766   00080C  6E03               	movwf	i2___awmod@divisor^0,c
  4767   00080E  ECDC  F007         	call	i2___awmod	;wreg free
  4768   000812  C001  F007         	movff	?i2___awmod,i2abs@a
  4769   000816  C002  F008         	movff	?i2___awmod+1,i2abs@a+1
  4770   00081A  EC10  F00A         	call	i2_abs	;wreg free
  4771   00081E  5007               	movf	?i2_abs^0,w,c
  4772   000820  0F30               	addlw	48
  4773   000822  6EDF               	movwf	indf2,c
  4774   000824                     
  4775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4776   000824  C013  F001         	movff	i2vfpfcnvrt@convarg,i2___awdiv@dividend
  4777   000828  C014  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awdiv@dividend+1
  4778   00082C  0E00               	movlw	0
  4779   00082E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4780   000830  0E0A               	movlw	10
  4781   000832  6E03               	movwf	i2___awdiv@divisor^0,c
  4782   000834  EC0E  F006         	call	i2___awdiv	;wreg free
  4783   000838  C001  F013         	movff	?i2___awdiv,i2vfpfcnvrt@convarg
  4784   00083C  C002  F014         	movff	?i2___awdiv+1,i2vfpfcnvrt@convarg+1
  4785   000840                     
  4786                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4787   000840  5013               	movf	i2vfpfcnvrt@convarg^0,w,c
  4788   000842  1014               	iorwf	(i2vfpfcnvrt@convarg+1)^0,w,c
  4789   000844  B4D8               	btfsc	status,2,c
  4790   000846  EF27  F004         	goto	i2u159_41
  4791   00084A  EF29  F004         	goto	i2u159_40
  4792   00084E                     i2u159_41:
  4793   00084E  EF31  F004         	goto	i2l2107
  4794   000852                     i2u159_40:
  4795   000852  5017               	movf	i2vfpfcnvrt@c^0,w,c
  4796   000854  A4D8               	btfss	status,2,c
  4797   000856  EF2F  F004         	goto	i2u160_41
  4798   00085A  EF31  F004         	goto	i2u160_40
  4799   00085E                     i2u160_41:
  4800   00085E  EFFA  F003         	goto	i2l2099
  4801   000862                     i2u160_40:
  4802   000862                     i2l2107:
  4803                           
  4804                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4805   000862  5017               	movf	i2vfpfcnvrt@c^0,w,c
  4806   000864  B4D8               	btfsc	status,2,c
  4807   000866  EF37  F004         	goto	i2u161_41
  4808   00086A  EF39  F004         	goto	i2u161_40
  4809   00086E                     i2u161_41:
  4810   00086E  EF58  F004         	goto	i2l2117
  4811   000872                     i2u161_40:
  4812   000872  5010               	movf	i2vfpfcnvrt@done^0,w,c
  4813   000874  B4D8               	btfsc	status,2,c
  4814   000876  EF3F  F004         	goto	i2u162_41
  4815   00087A  EF41  F004         	goto	i2u162_40
  4816   00087E                     i2u162_41:
  4817   00087E  EF58  F004         	goto	i2l2117
  4818   000882                     i2u162_40:
  4819   000882                     
  4820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4821   000882  0617               	decf	i2vfpfcnvrt@c^0,f,c
  4822   000884  5017               	movf	i2vfpfcnvrt@c^0,w,c
  4823   000886  0F80               	addlw	low _dbuf
  4824   000888  6ED9               	movwf	fsr2l,c
  4825   00088A  6ADA               	clrf	fsr2h,c
  4826   00088C  0E2D               	movlw	45
  4827   00088E  6EDF               	movwf	indf2,c
  4828   000890  EF58  F004         	goto	i2l2117
  4829   000894                     i2l2113:
  4830                           
  4831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4832   000894  5017               	movf	i2vfpfcnvrt@c^0,w,c
  4833   000896  0F80               	addlw	low _dbuf
  4834   000898  6ED9               	movwf	fsr2l,c
  4835   00089A  6ADA               	clrf	fsr2h,c
  4836   00089C  50DF               	movf	indf2,w,c
  4837   00089E  6E0E               	movwf	??i2_vfpfcnvrt^0,c
  4838   0008A0  500E               	movf	??i2_vfpfcnvrt^0,w,c
  4839   0008A2  6E01               	movwf	i2fputc@c^0,c
  4840   0008A4  6A02               	clrf	(i2fputc@c+1)^0,c
  4841   0008A6  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4842   0008AA  ECCE  F006         	call	i2_fputc	;wreg free
  4843   0008AE  2A17               	incf	i2vfpfcnvrt@c^0,f,c
  4844   0008B0                     i2l2117:
  4845                           
  4846                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4847   0008B0  0E20               	movlw	32
  4848   0008B2  1817               	xorwf	i2vfpfcnvrt@c^0,w,c
  4849   0008B4  A4D8               	btfss	status,2,c
  4850   0008B6  EF5F  F004         	goto	i2u163_41
  4851   0008BA  EF61  F004         	goto	i2u163_40
  4852   0008BE                     i2u163_41:
  4853   0008BE  EF4A  F004         	goto	i2l2113
  4854   0008C2                     i2u163_40:
  4855   0008C2  EF7C  F004         	goto	i2l945
  4856   0008C6                     i2l2119:
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4859   0008C6  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4860   0008C8  6ED9               	movwf	fsr2l,c
  4861   0008CA  6ADA               	clrf	fsr2h,c
  4862   0008CC  2ADE               	incf	postinc2,f,c
  4863   0008CE  0E00               	movlw	0
  4864   0008D0  22DD               	addwfc	postdec2,f,c
  4865   0008D2  EF7C  F004         	goto	i2l945
  4866   0008D6                     i2l2123:
  4867                           
  4868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4869   0008D6  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4870   0008D8  6ED9               	movwf	fsr2l,c
  4871   0008DA  6ADA               	clrf	fsr2h,c
  4872   0008DC  CFDE FFF6          	movff	postinc2,tblptrl
  4873   0008E0  CFDD FFF7          	movff	postdec2,tblptrh
  4874   0008E4                     	if	0	;tblptru may be non-zero
  4875   0008E4                     	endif
  4876   0008E4                     	if	0	;tblptru may be non-zero
  4877   0008E4                     	endif
  4878   0008E4  0008               	tblrd		*
  4879   0008E6  50F5               	movf	tablat,w,c
  4880   0008E8  6E01               	movwf	i2fputc@c^0,c
  4881   0008EA  6A02               	clrf	(i2fputc@c+1)^0,c
  4882   0008EC  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4883   0008F0  ECCE  F006         	call	i2_fputc	;wreg free
  4884   0008F4  EF63  F004         	goto	i2l2119
  4885   0008F8                     i2l945:
  4886   0008F8  0012               	return		;funcret
  4887   0008FA                     __end_ofi2_vfpfcnvrt:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function i2_fputc *****************
  4891 ;; Defined at:
  4892 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  c               2    0[COMRAM] int 
  4895 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4896 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  2    0[COMRAM] int 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4908 ;;      Params:         3       0       0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0
  4910 ;;      Temps:          5       0       0       0       0       0       0
  4911 ;;      Totals:         8       0       0       0       0       0       0
  4912 ;;Total ram usage:        8 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 1
  4915 ;; This function calls:
  4916 ;;		i2_putch
  4917 ;; This function is called by:
  4918 ;;		i2_vfpfcnvrt
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text29
  4923   000D9C                     __ptext29:
  4924                           	callstack 0
  4925   000D9C                     i2_fputc:
  4926                           	callstack 16
  4927   000D9C  5003               	movf	i2fputc@fp^0,w,c
  4928   000D9E  B4D8               	btfsc	status,2,c
  4929   000DA0  EFD4  F006         	goto	i2u148_41
  4930   000DA4  EFD6  F006         	goto	i2u148_40
  4931   000DA8                     i2u148_41:
  4932   000DA8  EFDE  F006         	goto	i2l2055
  4933   000DAC                     i2u148_40:
  4934   000DAC  5003               	movf	i2fputc@fp^0,w,c
  4935   000DAE  A4D8               	btfss	status,2,c
  4936   000DB0  EFDC  F006         	goto	i2u149_41
  4937   000DB4  EFDE  F006         	goto	i2u149_40
  4938   000DB8                     i2u149_41:
  4939   000DB8  EFE3  F006         	goto	i2l2057
  4940   000DBC                     i2u149_40:
  4941   000DBC                     i2l2055:
  4942   000DBC  5001               	movf	i2fputc@c^0,w,c
  4943   000DBE  EC85  F00A         	call	i2_putch
  4944   000DC2  EF2A  F007         	goto	i2l970
  4945   000DC6                     i2l2057:
  4946   000DC6  5003               	movf	i2fputc@fp^0,w,c
  4947   000DC8  6ED9               	movwf	fsr2l,c
  4948   000DCA  6ADA               	clrf	fsr2h,c
  4949   000DCC  0E0A               	movlw	10
  4950   000DCE  26D9               	addwf	fsr2l,f,c
  4951   000DD0  50DE               	movf	postinc2,w,c
  4952   000DD2  10DE               	iorwf	postinc2,w,c
  4953   000DD4  B4D8               	btfsc	status,2,c
  4954   000DD6  EFEF  F006         	goto	i2u150_41
  4955   000DDA  EFF1  F006         	goto	i2u150_40
  4956   000DDE                     i2u150_41:
  4957   000DDE  EF0A  F007         	goto	i2l2061
  4958   000DE2                     i2u150_40:
  4959   000DE2  5003               	movf	i2fputc@fp^0,w,c
  4960   000DE4  6ED9               	movwf	fsr2l,c
  4961   000DE6  6ADA               	clrf	fsr2h,c
  4962   000DE8  0E0A               	movlw	10
  4963   000DEA  26D9               	addwf	fsr2l,f,c
  4964   000DEC  5003               	movf	i2fputc@fp^0,w,c
  4965   000DEE  6EE1               	movwf	fsr1l,c
  4966   000DF0  6AE2               	clrf	fsr1h,c
  4967   000DF2  0E03               	movlw	3
  4968   000DF4  26E1               	addwf	fsr1l,f,c
  4969   000DF6  50DE               	movf	postinc2,w,c
  4970   000DF8  5CE6               	subwf	postinc1,w,c
  4971   000DFA  50E6               	movf	postinc1,w,c
  4972   000DFC  0A80               	xorlw	128
  4973   000DFE  6E08               	movwf	(??i2_fputc+4)^0,c
  4974   000E00  50DE               	movf	postinc2,w,c
  4975   000E02  0A80               	xorlw	128
  4976   000E04  5808               	subwfb	(??i2_fputc+4)^0,w,c
  4977   000E06  B0D8               	btfsc	status,0,c
  4978   000E08  EF08  F007         	goto	i2u151_41
  4979   000E0C  EF0A  F007         	goto	i2u151_40
  4980   000E10                     i2u151_41:
  4981   000E10  EF2A  F007         	goto	i2l970
  4982   000E14                     i2u151_40:
  4983   000E14                     i2l2061:
  4984   000E14  5003               	movf	i2fputc@fp^0,w,c
  4985   000E16  6ED9               	movwf	fsr2l,c
  4986   000E18  6ADA               	clrf	fsr2h,c
  4987   000E1A  0E03               	movlw	3
  4988   000E1C  26D9               	addwf	fsr2l,f,c
  4989   000E1E  CFDE F004          	movff	postinc2,??i2_fputc
  4990   000E22  CFDD F005          	movff	postdec2,??i2_fputc+1
  4991   000E26  5003               	movf	i2fputc@fp^0,w,c
  4992   000E28  6ED9               	movwf	fsr2l,c
  4993   000E2A  6ADA               	clrf	fsr2h,c
  4994   000E2C  CFDE F006          	movff	postinc2,??i2_fputc+2
  4995   000E30  CFDD F007          	movff	postdec2,??i2_fputc+3
  4996   000E34  5004               	movf	??i2_fputc^0,w,c
  4997   000E36  2406               	addwf	(??i2_fputc+2)^0,w,c
  4998   000E38  6ED9               	movwf	fsr2l,c
  4999   000E3A  5005               	movf	(??i2_fputc+1)^0,w,c
  5000   000E3C  2007               	addwfc	(??i2_fputc+3)^0,w,c
  5001   000E3E  6EDA               	movwf	fsr2h,c
  5002   000E40  C001  FFDF         	movff	i2fputc@c,indf2
  5003   000E44  5003               	movf	i2fputc@fp^0,w,c
  5004   000E46  6ED9               	movwf	fsr2l,c
  5005   000E48  6ADA               	clrf	fsr2h,c
  5006   000E4A  0E03               	movlw	3
  5007   000E4C  26D9               	addwf	fsr2l,f,c
  5008   000E4E  2ADE               	incf	postinc2,f,c
  5009   000E50  0E00               	movlw	0
  5010   000E52  22DD               	addwfc	postdec2,f,c
  5011   000E54                     i2l970:
  5012   000E54  0012               	return		;funcret
  5013   000E56                     __end_ofi2_fputc:
  5014                           	callstack 0
  5015                           
  5016 ;; *************** function i2_putch *****************
  5017 ;; Defined at:
  5018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  c               1    wreg     unsigned char 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  c               1  (no storage) unsigned char 
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5032 ;;      Params:         0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		i2_fputc
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text30
  5046   00150A                     __ptext30:
  5047                           	callstack 0
  5048   00150A                     i2_putch:
  5049                           	callstack 16
  5050   00150A  0012               	return		;funcret
  5051   00150C                     __end_ofi2_putch:
  5052                           	callstack 0
  5053                           
  5054 ;; *************** function i2_abs *****************
  5055 ;; Defined at:
  5056 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  a               2    6[COMRAM] int 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2    6[COMRAM] int 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5070 ;;      Params:         2       0       0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0
  5072 ;;      Temps:          2       0       0       0       0       0       0
  5073 ;;      Totals:         4       0       0       0       0       0       0
  5074 ;;Total ram usage:        4 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; This function calls:
  5077 ;;		Nothing
  5078 ;; This function is called by:
  5079 ;;		i2_vfpfcnvrt
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text31
  5084   001420                     __ptext31:
  5085                           	callstack 0
  5086   001420                     i2_abs:
  5087                           	callstack 17
  5088   001420  BE08               	btfsc	(i2abs@a+1)^0,7,c
  5089   001422  EF15  F00A         	goto	i2u147_41
  5090   001426  EF17  F00A         	goto	i2u147_40
  5091   00142A                     i2u147_41:
  5092   00142A  EF1D  F00A         	goto	i2l955
  5093   00142E                     i2u147_40:
  5094   00142E  C007  F007         	movff	i2abs@a,?i2_abs
  5095   001432  C008  F008         	movff	i2abs@a+1,?i2_abs+1
  5096   001436  EF29  F00A         	goto	i2l958
  5097   00143A                     i2l955:
  5098   00143A  C007  F009         	movff	i2abs@a,??i2_abs
  5099   00143E  C008  F00A         	movff	i2abs@a+1,??i2_abs+1
  5100   001442  1E09               	comf	??i2_abs^0,f,c
  5101   001444  1E0A               	comf	(??i2_abs+1)^0,f,c
  5102   001446  4A09               	infsnz	??i2_abs^0,f,c
  5103   001448  2A0A               	incf	(??i2_abs+1)^0,f,c
  5104   00144A  C009  F007         	movff	??i2_abs,?i2_abs
  5105   00144E  C00A  F008         	movff	??i2_abs+1,?i2_abs+1
  5106   001452                     i2l958:
  5107   001452  0012               	return		;funcret
  5108   001454                     __end_ofi2_abs:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function i2___awmod *****************
  5112 ;; Defined at:
  5113 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  dividend        2    0[COMRAM] int 
  5116 ;;  divisor         2    2[COMRAM] int 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  sign            1    5[COMRAM] unsigned char 
  5119 ;;  counter         1    4[COMRAM] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  2    0[COMRAM] int 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5129 ;;      Params:         4       0       0       0       0       0       0
  5130 ;;      Locals:         2       0       0       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0
  5132 ;;      Totals:         6       0       0       0       0       0       0
  5133 ;;Total ram usage:        6 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		i2_vfpfcnvrt
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text32
  5143   000FB8                     __ptext32:
  5144                           	callstack 0
  5145   000FB8                     i2___awmod:
  5146                           	callstack 17
  5147   000FB8  0E00               	movlw	0
  5148   000FBA  6E06               	movwf	i2___awmod@sign^0,c
  5149   000FBC  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  5150   000FBE  EFE5  F007         	goto	i2u141_40
  5151   000FC2  EFE3  F007         	goto	i2u141_41
  5152   000FC6                     i2u141_41:
  5153   000FC6  EFEB  F007         	goto	i2l2019
  5154   000FCA                     i2u141_40:
  5155   000FCA  6C01               	negf	i2___awmod@dividend^0,c
  5156   000FCC  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5157   000FCE  B0D8               	btfsc	status,0,c
  5158   000FD0  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5159   000FD2  0E01               	movlw	1
  5160   000FD4  6E06               	movwf	i2___awmod@sign^0,c
  5161   000FD6                     i2l2019:
  5162   000FD6  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  5163   000FD8  EFF2  F007         	goto	i2u142_40
  5164   000FDC  EFF0  F007         	goto	i2u142_41
  5165   000FE0                     i2u142_41:
  5166   000FE0  EFF6  F007         	goto	i2l2023
  5167   000FE4                     i2u142_40:
  5168   000FE4  6C03               	negf	i2___awmod@divisor^0,c
  5169   000FE6  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5170   000FE8  B0D8               	btfsc	status,0,c
  5171   000FEA  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5172   000FEC                     i2l2023:
  5173   000FEC  5003               	movf	i2___awmod@divisor^0,w,c
  5174   000FEE  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5175   000FF0  B4D8               	btfsc	status,2,c
  5176   000FF2  EFFD  F007         	goto	i2u143_41
  5177   000FF6  EFFF  F007         	goto	i2u143_40
  5178   000FFA                     i2u143_41:
  5179   000FFA  EF23  F008         	goto	i2l2039
  5180   000FFE                     i2u143_40:
  5181   000FFE  0E01               	movlw	1
  5182   001000  6E05               	movwf	i2___awmod@counter^0,c
  5183   001002  EF07  F008         	goto	i2l2029
  5184   001006                     i2l2027:
  5185   001006  90D8               	bcf	status,0,c
  5186   001008  3603               	rlcf	i2___awmod@divisor^0,f,c
  5187   00100A  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5188   00100C  2A05               	incf	i2___awmod@counter^0,f,c
  5189   00100E                     i2l2029:
  5190   00100E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5191   001010  EF0C  F008         	goto	i2u144_41
  5192   001014  EF0E  F008         	goto	i2u144_40
  5193   001018                     i2u144_41:
  5194   001018  EF03  F008         	goto	i2l2027
  5195   00101C                     i2u144_40:
  5196   00101C                     i2l2031:
  5197   00101C  5003               	movf	i2___awmod@divisor^0,w,c
  5198   00101E  5C01               	subwf	i2___awmod@dividend^0,w,c
  5199   001020  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5200   001022  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5201   001024  A0D8               	btfss	status,0,c
  5202   001026  EF17  F008         	goto	i2u145_41
  5203   00102A  EF19  F008         	goto	i2u145_40
  5204   00102E                     i2u145_41:
  5205   00102E  EF1D  F008         	goto	i2l2035
  5206   001032                     i2u145_40:
  5207   001032  5003               	movf	i2___awmod@divisor^0,w,c
  5208   001034  5E01               	subwf	i2___awmod@dividend^0,f,c
  5209   001036  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5210   001038  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5211   00103A                     i2l2035:
  5212   00103A  90D8               	bcf	status,0,c
  5213   00103C  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5214   00103E  3203               	rrcf	i2___awmod@divisor^0,f,c
  5215   001040  2E05               	decfsz	i2___awmod@counter^0,f,c
  5216   001042  EF0E  F008         	goto	i2l2031
  5217   001046                     i2l2039:
  5218   001046  5006               	movf	i2___awmod@sign^0,w,c
  5219   001048  B4D8               	btfsc	status,2,c
  5220   00104A  EF29  F008         	goto	i2u146_41
  5221   00104E  EF2B  F008         	goto	i2u146_40
  5222   001052                     i2u146_41:
  5223   001052  EF2F  F008         	goto	i2l2043
  5224   001056                     i2u146_40:
  5225   001056  6C01               	negf	i2___awmod@dividend^0,c
  5226   001058  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5227   00105A  B0D8               	btfsc	status,0,c
  5228   00105C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5229   00105E                     i2l2043:
  5230   00105E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5231   001062  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5232   001066  0012               	return		;funcret
  5233   001068                     __end_ofi2___awmod:
  5234                           	callstack 0
  5235                           
  5236 ;; *************** function i2___awdiv *****************
  5237 ;; Defined at:
  5238 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  dividend        2    0[COMRAM] int 
  5241 ;;  divisor         2    2[COMRAM] int 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  quotient        2    6[COMRAM] int 
  5244 ;;  sign            1    5[COMRAM] unsigned char 
  5245 ;;  counter         1    4[COMRAM] unsigned char 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  2    0[COMRAM] int 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5255 ;;      Params:         4       0       0       0       0       0       0
  5256 ;;      Locals:         4       0       0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0
  5258 ;;      Totals:         8       0       0       0       0       0       0
  5259 ;;Total ram usage:        8 bytes
  5260 ;; Hardware stack levels used: 1
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		i2_vfpfcnvrt
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text33
  5269   000C1C                     __ptext33:
  5270                           	callstack 0
  5271   000C1C                     i2___awdiv:
  5272                           	callstack 17
  5273   000C1C  0E00               	movlw	0
  5274   000C1E  6E06               	movwf	i2___awdiv@sign^0,c
  5275   000C20  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  5276   000C22  EF17  F006         	goto	i2u135_40
  5277   000C26  EF15  F006         	goto	i2u135_41
  5278   000C2A                     i2u135_41:
  5279   000C2A  EF1D  F006         	goto	i2l1975
  5280   000C2E                     i2u135_40:
  5281   000C2E  6C03               	negf	i2___awdiv@divisor^0,c
  5282   000C30  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  5283   000C32  B0D8               	btfsc	status,0,c
  5284   000C34  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  5285   000C36  0E01               	movlw	1
  5286   000C38  6E06               	movwf	i2___awdiv@sign^0,c
  5287   000C3A                     i2l1975:
  5288   000C3A  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  5289   000C3C  EF24  F006         	goto	i2u136_40
  5290   000C40  EF22  F006         	goto	i2u136_41
  5291   000C44                     i2u136_41:
  5292   000C44  EF2A  F006         	goto	i2l1981
  5293   000C48                     i2u136_40:
  5294   000C48  6C01               	negf	i2___awdiv@dividend^0,c
  5295   000C4A  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  5296   000C4C  B0D8               	btfsc	status,0,c
  5297   000C4E  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  5298   000C50  0E01               	movlw	1
  5299   000C52  1A06               	xorwf	i2___awdiv@sign^0,f,c
  5300   000C54                     i2l1981:
  5301   000C54  0E00               	movlw	0
  5302   000C56  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  5303   000C58  0E00               	movlw	0
  5304   000C5A  6E07               	movwf	i2___awdiv@quotient^0,c
  5305   000C5C  5003               	movf	i2___awdiv@divisor^0,w,c
  5306   000C5E  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  5307   000C60  B4D8               	btfsc	status,2,c
  5308   000C62  EF35  F006         	goto	i2u137_41
  5309   000C66  EF37  F006         	goto	i2u137_40
  5310   000C6A                     i2u137_41:
  5311   000C6A  EF5F  F006         	goto	i2l2003
  5312   000C6E                     i2u137_40:
  5313   000C6E  0E01               	movlw	1
  5314   000C70  6E05               	movwf	i2___awdiv@counter^0,c
  5315   000C72  EF3F  F006         	goto	i2l1989
  5316   000C76                     i2l1987:
  5317   000C76  90D8               	bcf	status,0,c
  5318   000C78  3603               	rlcf	i2___awdiv@divisor^0,f,c
  5319   000C7A  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  5320   000C7C  2A05               	incf	i2___awdiv@counter^0,f,c
  5321   000C7E                     i2l1989:
  5322   000C7E  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  5323   000C80  EF44  F006         	goto	i2u138_41
  5324   000C84  EF46  F006         	goto	i2u138_40
  5325   000C88                     i2u138_41:
  5326   000C88  EF3B  F006         	goto	i2l1987
  5327   000C8C                     i2u138_40:
  5328   000C8C                     i2l1991:
  5329   000C8C  90D8               	bcf	status,0,c
  5330   000C8E  3607               	rlcf	i2___awdiv@quotient^0,f,c
  5331   000C90  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  5332   000C92  5003               	movf	i2___awdiv@divisor^0,w,c
  5333   000C94  5C01               	subwf	i2___awdiv@dividend^0,w,c
  5334   000C96  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5335   000C98  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  5336   000C9A  A0D8               	btfss	status,0,c
  5337   000C9C  EF52  F006         	goto	i2u139_41
  5338   000CA0  EF54  F006         	goto	i2u139_40
  5339   000CA4                     i2u139_41:
  5340   000CA4  EF59  F006         	goto	i2l1999
  5341   000CA8                     i2u139_40:
  5342   000CA8  5003               	movf	i2___awdiv@divisor^0,w,c
  5343   000CAA  5E01               	subwf	i2___awdiv@dividend^0,f,c
  5344   000CAC  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5345   000CAE  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  5346   000CB0  8007               	bsf	i2___awdiv@quotient^0,0,c
  5347   000CB2                     i2l1999:
  5348   000CB2  90D8               	bcf	status,0,c
  5349   000CB4  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  5350   000CB6  3203               	rrcf	i2___awdiv@divisor^0,f,c
  5351   000CB8  2E05               	decfsz	i2___awdiv@counter^0,f,c
  5352   000CBA  EF46  F006         	goto	i2l1991
  5353   000CBE                     i2l2003:
  5354   000CBE  5006               	movf	i2___awdiv@sign^0,w,c
  5355   000CC0  B4D8               	btfsc	status,2,c
  5356   000CC2  EF65  F006         	goto	i2u140_41
  5357   000CC6  EF67  F006         	goto	i2u140_40
  5358   000CCA                     i2u140_41:
  5359   000CCA  EF6B  F006         	goto	i2l2007
  5360   000CCE                     i2u140_40:
  5361   000CCE  6C07               	negf	i2___awdiv@quotient^0,c
  5362   000CD0  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  5363   000CD2  B0D8               	btfsc	status,0,c
  5364   000CD4  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  5365   000CD6                     i2l2007:
  5366   000CD6  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  5367   000CDA  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  5368   000CDE  0012               	return		;funcret
  5369   000CE0                     __end_ofi2___awdiv:
  5370                           	callstack 0
  5371                           
  5372 ;; *************** function i2_UART_Write_Text *****************
  5373 ;; Defined at:
  5374 ;;		line 46 in file "setting_hardaware/uart.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  text            2    1[COMRAM] PTR unsigned char 
  5377 ;;		 -> str(200), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  i               2    3[COMRAM] int 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5389 ;;      Params:         2       0       0       0       0       0       0
  5390 ;;      Locals:         2       0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0
  5392 ;;      Totals:         4       0       0       0       0       0       0
  5393 ;;Total ram usage:        4 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 1
  5396 ;; This function calls:
  5397 ;;		i2_UART_Write
  5398 ;; This function is called by:
  5399 ;;		_Hi_ISR
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text34
  5404   0012BE                     __ptext34:
  5405                           	callstack 0
  5406   0012BE                     i2_UART_Write_Text:
  5407                           	callstack 19
  5408   0012BE                     
  5409                           ;setting_hardaware/uart.c: 47:     for(int i=0;text[i]!='\0';i++){
  5410   0012BE  0E00               	movlw	0
  5411   0012C0  6E05               	movwf	(i2UART_Write_Text@i+1)^0,c
  5412   0012C2  0E00               	movlw	0
  5413   0012C4  6E04               	movwf	i2UART_Write_Text@i^0,c
  5414   0012C6  EF70  F009         	goto	i2l2333
  5415   0012CA                     i2l2329:
  5416                           
  5417                           ;setting_hardaware/uart.c: 48:         UART_Write(text[i]);
  5418   0012CA  5004               	movf	i2UART_Write_Text@i^0,w,c
  5419   0012CC  2402               	addwf	i2UART_Write_Text@text^0,w,c
  5420   0012CE  6ED9               	movwf	fsr2l,c
  5421   0012D0  5005               	movf	(i2UART_Write_Text@i+1)^0,w,c
  5422   0012D2  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  5423   0012D4  6EDA               	movwf	fsr2h,c
  5424   0012D6  50DF               	movf	indf2,w,c
  5425   0012D8  EC74  F00A         	call	i2_UART_Write
  5426   0012DC                     
  5427                           ;setting_hardaware/uart.c: 49:     }
  5428   0012DC  4A04               	infsnz	i2UART_Write_Text@i^0,f,c
  5429   0012DE  2A05               	incf	(i2UART_Write_Text@i+1)^0,f,c
  5430   0012E0                     i2l2333:
  5431   0012E0  5004               	movf	i2UART_Write_Text@i^0,w,c
  5432   0012E2  2402               	addwf	i2UART_Write_Text@text^0,w,c
  5433   0012E4  6ED9               	movwf	fsr2l,c
  5434   0012E6  5005               	movf	(i2UART_Write_Text@i+1)^0,w,c
  5435   0012E8  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  5436   0012EA  6EDA               	movwf	fsr2h,c
  5437   0012EC  50DF               	movf	indf2,w,c
  5438   0012EE  A4D8               	btfss	status,2,c
  5439   0012F0  EF7C  F009         	goto	i2u177_41
  5440   0012F4  EF7E  F009         	goto	i2u177_40
  5441   0012F8                     i2u177_41:
  5442   0012F8  EF65  F009         	goto	i2l2329
  5443   0012FC                     i2u177_40:
  5444   0012FC  0012               	return		;funcret
  5445   0012FE                     __end_ofi2_UART_Write_Text:
  5446                           	callstack 0
  5447                           
  5448 ;; *************** function i2_UART_Write *****************
  5449 ;; Defined at:
  5450 ;;		line 39 in file "setting_hardaware/uart.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  data            1    wreg     unsigned char 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;  data            1    0[COMRAM] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5464 ;;      Params:         0       0       0       0       0       0       0
  5465 ;;      Locals:         1       0       0       0       0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0
  5467 ;;      Totals:         1       0       0       0       0       0       0
  5468 ;;Total ram usage:        1 bytes
  5469 ;; Hardware stack levels used: 1
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		i2_UART_Write_Text
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text35
  5478   0014E8                     __ptext35:
  5479                           	callstack 0
  5480   0014E8                     i2_UART_Write:
  5481                           	callstack 19
  5482                           
  5483                           ;incstack = 0
  5484                           ;i2UART_Write@data stored from wreg
  5485   0014E8  6E01               	movwf	i2UART_Write@data^0,c
  5486   0014EA                     i2l197:
  5487   0014EA  A2AC               	btfss	172,1,c	;volatile
  5488   0014EC  EF7A  F00A         	goto	i2u168_41
  5489   0014F0  EF7C  F00A         	goto	i2u168_40
  5490   0014F4                     i2u168_41:
  5491   0014F4  EF75  F00A         	goto	i2l197
  5492   0014F8                     i2u168_40:
  5493   0014F8                     
  5494                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  5495   0014F8  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  5496   0014FC  0012               	return		;funcret
  5497   0014FE                     __end_ofi2_UART_Write:
  5498                           	callstack 0
  5499                           
  5500 ;; *************** function i2_ClearBuffer *****************
  5501 ;; Defined at:
  5502 ;;		line 52 in file "setting_hardaware/uart.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  i               2    0[COMRAM] int 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5516 ;;      Params:         0       0       0       0       0       0       0
  5517 ;;      Locals:         2       0       0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0
  5519 ;;      Totals:         2       0       0       0       0       0       0
  5520 ;;Total ram usage:        2 bytes
  5521 ;; Hardware stack levels used: 1
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_Hi_ISR
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text36
  5530   0012FE                     __ptext36:
  5531                           	callstack 0
  5532   0012FE                     i2_ClearBuffer:
  5533                           	callstack 20
  5534   0012FE                     
  5535                           ;setting_hardaware/uart.c: 53:     for(int i = 0; i < 10 ; i++)
  5536   0012FE  0E00               	movlw	0
  5537   001300  6E02               	movwf	(i2ClearBuffer@i+1)^0,c
  5538   001302  0E00               	movlw	0
  5539   001304  6E01               	movwf	i2ClearBuffer@i^0,c
  5540   001306                     i2l2341:
  5541                           
  5542                           ;setting_hardaware/uart.c: 54:         mystring[i] = '\0';
  5543   001306  0E00               	movlw	low _mystring
  5544   001308  2401               	addwf	i2ClearBuffer@i^0,w,c
  5545   00130A  6ED9               	movwf	fsr2l,c
  5546   00130C  0E02               	movlw	high _mystring
  5547   00130E  2002               	addwfc	(i2ClearBuffer@i+1)^0,w,c
  5548   001310  6EDA               	movwf	fsr2h,c
  5549   001312  6ADF               	clrf	indf2,c
  5550   001314  4A01               	infsnz	i2ClearBuffer@i^0,f,c
  5551   001316  2A02               	incf	(i2ClearBuffer@i+1)^0,f,c
  5552   001318  BE02               	btfsc	(i2ClearBuffer@i+1)^0,7,c
  5553   00131A  EF98  F009         	goto	i2u178_41
  5554   00131E  5002               	movf	(i2ClearBuffer@i+1)^0,w,c
  5555   001320  E109               	bnz	i2u178_40
  5556   001322  0E0A               	movlw	10
  5557   001324  5C01               	subwf	i2ClearBuffer@i^0,w,c
  5558   001326  A0D8               	btfss	status,0,c
  5559   001328  EF98  F009         	goto	i2u178_41
  5560   00132C  EF9A  F009         	goto	i2u178_40
  5561   001330                     i2u178_41:
  5562   001330  EF83  F009         	goto	i2l2341
  5563   001334                     i2u178_40:
  5564   001334                     
  5565                           ;setting_hardaware/uart.c: 55:     lenStr = 0;
  5566   001334  0E00               	movlw	0
  5567   001336  6E41               	movwf	(_lenStr+1)^0,c
  5568   001338  0E00               	movlw	0
  5569   00133A  6E40               	movwf	_lenStr^0,c
  5570   00133C  0012               	return		;funcret
  5571   00133E                     __end_ofi2_ClearBuffer:
  5572                           	callstack 0
  5573                           
  5574                           	psect	rparam
  5575   000000                     
  5576                           	psect	temp
  5577   000044                     btemp:
  5578                           	callstack 0
  5579   000044                     	ds	1
  5580   000000                     int$flags	set	btemp
  5581   000000                     wtemp8	set	btemp+1
  5582   000000                     ttemp5	set	btemp+1
  5583   000000                     ttemp6	set	btemp+4
  5584   000000                     ttemp7	set	btemp+8
  5585                           
  5586                           	psect	idloc
  5587                           
  5588                           ;Config register IDLOC0 @ 0x200000
  5589                           ;	unspecified, using default values
  5590   200000                     	org	2097152
  5591   200000  FF                 	db	255
  5592                           
  5593                           ;Config register IDLOC1 @ 0x200001
  5594                           ;	unspecified, using default values
  5595   200001                     	org	2097153
  5596   200001  FF                 	db	255
  5597                           
  5598                           ;Config register IDLOC2 @ 0x200002
  5599                           ;	unspecified, using default values
  5600   200002                     	org	2097154
  5601   200002  FF                 	db	255
  5602                           
  5603                           ;Config register IDLOC3 @ 0x200003
  5604                           ;	unspecified, using default values
  5605   200003                     	org	2097155
  5606   200003  FF                 	db	255
  5607                           
  5608                           ;Config register IDLOC4 @ 0x200004
  5609                           ;	unspecified, using default values
  5610   200004                     	org	2097156
  5611   200004  FF                 	db	255
  5612                           
  5613                           ;Config register IDLOC5 @ 0x200005
  5614                           ;	unspecified, using default values
  5615   200005                     	org	2097157
  5616   200005  FF                 	db	255
  5617                           
  5618                           ;Config register IDLOC6 @ 0x200006
  5619                           ;	unspecified, using default values
  5620   200006                     	org	2097158
  5621   200006  FF                 	db	255
  5622                           
  5623                           ;Config register IDLOC7 @ 0x200007
  5624                           ;	unspecified, using default values
  5625   200007                     	org	2097159
  5626   200007  FF                 	db	255
  5627                           
  5628                           	psect	config
  5629                           
  5630                           ; Padding undefined space
  5631   300000                     	org	3145728
  5632   300000  FF                 	db	255
  5633                           
  5634                           ;Config register CONFIG1H @ 0x300001
  5635                           ;	Oscillator Selection bits
  5636                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5637                           ;	Fail-Safe Clock Monitor Enable bit
  5638                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5639                           ;	Internal/External Oscillator Switchover bit
  5640                           ;	IESO = ON, Oscillator Switchover mode enabled
  5641   300001                     	org	3145729
  5642   300001  88                 	db	136
  5643                           
  5644                           ;Config register CONFIG2L @ 0x300002
  5645                           ;	Power-up Timer Enable bit
  5646                           ;	PWRT = OFF, PWRT disabled
  5647                           ;	Brown-out Reset Enable bits
  5648                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5649                           ;	Brown Out Reset Voltage bits
  5650                           ;	BORV = 3, Minimum setting
  5651   300002                     	org	3145730
  5652   300002  1F                 	db	31
  5653                           
  5654                           ;Config register CONFIG2H @ 0x300003
  5655                           ;	Watchdog Timer Enable bit
  5656                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5657                           ;	Watchdog Timer Postscale Select bits
  5658                           ;	WDTPS = 1, 1:1
  5659   300003                     	org	3145731
  5660   300003  00                 	db	0
  5661                           
  5662                           ; Padding undefined space
  5663   300004                     	org	3145732
  5664   300004  FF                 	db	255
  5665                           
  5666                           ;Config register CONFIG3H @ 0x300005
  5667                           ;	CCP2 MUX bit
  5668                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5669                           ;	PORTB A/D Enable bit
  5670                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5671                           ;	Low-Power Timer1 Oscillator Enable bit
  5672                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5673                           ;	MCLR Pin Enable bit
  5674                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5675   300005                     	org	3145733
  5676   300005  83                 	db	131
  5677                           
  5678                           ;Config register CONFIG4L @ 0x300006
  5679                           ;	Stack Full/Underflow Reset Enable bit
  5680                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5681                           ;	Single-Supply ICSP Enable bit
  5682                           ;	LVP = OFF, Single-Supply ICSP disabled
  5683                           ;	Extended Instruction Set Enable bit
  5684                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5685                           ;	Background Debugger Enable bit
  5686                           ;	DEBUG = 0x1, unprogrammed default
  5687   300006                     	org	3145734
  5688   300006  81                 	db	129
  5689                           
  5690                           ; Padding undefined space
  5691   300007                     	org	3145735
  5692   300007  FF                 	db	255
  5693                           
  5694                           ;Config register CONFIG5L @ 0x300008
  5695                           ;	Code Protection bit
  5696                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5697                           ;	Code Protection bit
  5698                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5699                           ;	Code Protection bit
  5700                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5701                           ;	Code Protection bit
  5702                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5703   300008                     	org	3145736
  5704   300008  0F                 	db	15
  5705                           
  5706                           ;Config register CONFIG5H @ 0x300009
  5707                           ;	Boot Block Code Protection bit
  5708                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5709                           ;	Data EEPROM Code Protection bit
  5710                           ;	CPD = OFF, Data EEPROM not code-protected
  5711   300009                     	org	3145737
  5712   300009  C0                 	db	192
  5713                           
  5714                           ;Config register CONFIG6L @ 0x30000A
  5715                           ;	Write Protection bit
  5716                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5717                           ;	Write Protection bit
  5718                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5719                           ;	Write Protection bit
  5720                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5721                           ;	Write Protection bit
  5722                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5723   30000A                     	org	3145738
  5724   30000A  0F                 	db	15
  5725                           
  5726                           ;Config register CONFIG6H @ 0x30000B
  5727                           ;	Configuration Register Write Protection bit
  5728                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5729                           ;	Boot Block Write Protection bit
  5730                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5731                           ;	Data EEPROM Write Protection bit
  5732                           ;	WRTD = OFF, Data EEPROM not write-protected
  5733   30000B                     	org	3145739
  5734   30000B  E0                 	db	224
  5735                           
  5736                           ;Config register CONFIG7L @ 0x30000C
  5737                           ;	Table Read Protection bit
  5738                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5739                           ;	Table Read Protection bit
  5740                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5741                           ;	Table Read Protection bit
  5742                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5743                           ;	Table Read Protection bit
  5744                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5745   30000C                     	org	3145740
  5746   30000C  0F                 	db	15
  5747                           
  5748                           ;Config register CONFIG7H @ 0x30000D
  5749                           ;	Boot Block Table Read Protection bit
  5750                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5751   30000D                     	org	3145741
  5752   30000D  40                 	db	64
  5753                           tosu	equ	0xFFF
  5754                           tosh	equ	0xFFE
  5755                           tosl	equ	0xFFD
  5756                           stkptr	equ	0xFFC
  5757                           pclatu	equ	0xFFB
  5758                           pclath	equ	0xFFA
  5759                           pcl	equ	0xFF9
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           prodh	equ	0xFF4
  5765                           prodl	equ	0xFF3
  5766                           indf0	equ	0xFEF
  5767                           postinc0	equ	0xFEE
  5768                           postdec0	equ	0xFED
  5769                           preinc0	equ	0xFEC
  5770                           plusw0	equ	0xFEB
  5771                           fsr0h	equ	0xFEA
  5772                           fsr0l	equ	0xFE9
  5773                           wreg	equ	0xFE8
  5774                           indf1	equ	0xFE7
  5775                           postinc1	equ	0xFE6
  5776                           postdec1	equ	0xFE5
  5777                           preinc1	equ	0xFE4
  5778                           plusw1	equ	0xFE3
  5779                           fsr1h	equ	0xFE2
  5780                           fsr1l	equ	0xFE1
  5781                           bsr	equ	0xFE0
  5782                           indf2	equ	0xFDF
  5783                           postinc2	equ	0xFDE
  5784                           postdec2	equ	0xFDD
  5785                           preinc2	equ	0xFDC
  5786                           plusw2	equ	0xFDB
  5787                           fsr2h	equ	0xFDA
  5788                           fsr2l	equ	0xFD9
  5789                           status	equ	0xFD8

Data Sizes:
    Strings     241
    Constant    0
    Data        0
    BSS         463
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     63      67
    BANK0           128     57     116
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1604$buffer	PTR unsigned char  size(2) Largest target is 0

    S1604$source	PTR const unsigned char  size(2) Largest target is 0

    sp__GetString	PTR unsigned char  size(2) Largest target is 200
		 -> mystring(BANK2[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_1(CODE[10]), STR_10(CODE[31]), STR_11(CODE[43]), STR_12(CODE[8]), 
		 -> STR_13(CODE[10]), STR_3(CODE[32]), STR_4(CODE[38]), STR_5(CODE[43]), 
		 -> STR_6(CODE[15]), STR_7(CODE[46]), STR_8(CODE[43]), STR_9(CODE[15]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->i1___awmod

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_abs
    i2_abs->i2___awmod
    i2_UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    _main->_add_score
    _add_score->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _UART_Write_Text->_UART_Write
    _SYSTEM_Initialize->_CCP1_Initialize

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9425
                                             55 BANK0      2     2      0
                        _ClearBuffer
                  _SYSTEM_Initialize
                    _UART_Write_Text
                          _add_score
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _add_score                                            2     2      0    6466
                                             53 BANK0      2     2      0
                        _ClearBuffer
                    _UART_Write_Text
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4    1793
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    3507
                                             34 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    3047
                                             28 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2686
                                             15 BANK0     13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              5 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             11 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     548
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              5 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      4     2      2    1098
                                              6 BANK0      4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lo_ISR                                               5     5      0     370
                                              0 BANK0      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (8) _MyusartRead                                          1     1      0     370
                                             62 COMRAM     1     1      0
                       i1_UART_Write
                          i1___awmod
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            6     2      4     348
                                             56 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1_UART_Write                                         1     1      0      22
                                             56 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Hi_ISR                                              8     8      0    2620
                                             48 COMRAM     8     8      0
                      i2_ClearBuffer
                  i2_UART_Write_Text
                          i2_sprintf
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (11) i2_strcpy                                            6     2      4     177
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2_sprintf                                          21    15      6    2185
                                             29 COMRAM    19    13      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (12) i2_vfprintf                                          6     2      4    1934
                                             23 COMRAM     6     2      4
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) i2_vfpfcnvrt                                        13    10      3    1734
                                             10 COMRAM    13    10      3
                          i2___awdiv
                          i2___awmod
                              i2_abs
                            i2_fputc
 ---------------------------------------------------------------------------------
 (14) i2_fputc                                             8     5      3     330
                                              0 COMRAM     8     5      3
                            i2_putch
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (14) i2_abs                                               4     2      2      92
                                              6 COMRAM     4     2      2
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_UART_Write_Text                                   4     2      2     190
                                              1 COMRAM     4     2      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (12) i2_UART_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_ClearBuffer                                       2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write
   _add_score
     _ClearBuffer
     _UART_Write_Text
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
     _strcpy
   _strcpy

 _Lo_ISR (ROOT)
   _MyusartRead
     i1_UART_Write
     i1___awmod

 _Hi_ISR (ROOT)
   i2_ClearBuffer
   i2_UART_Write_Text
     i2_UART_Write
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2___awdiv
         i2___awmod
         i2_abs
           i2___awmod (ARG)
         i2_fputc
           i2_putch
   i2_strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      C8       6       78.1%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     39      74       4       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3F      43       1       53.2%
BITBIGSFR_1lllh      B      0       0      26        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFRlh          9      0       0      29        0.0%
BITBIGSFR_1llhl      8      0       0      25        0.0%
BITBIGSFRhhh         6      0       0      27        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1hhl       5      0       0      22        0.0%
BITBIGSFRhl          5      0       0      28        0.0%
BITBIGSFR_1llhh      4      0       0      24        0.0%
BITBIGSFR_1hhhl      4      0       0      21        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhhh      2      0       0      20        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFR_1lh        1      0       0      23        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     247      30        0.0%
DATA                 0      0     247      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 11 02:58:34 2024

                           l57 0B54                             _d1 00B0                             _d2 00AE  
                           _d3 00AC                             _d4 00AA                             _d5 00A8  
                           _d6 00A6                   ___awdiv@sign 00C5                             bsr 0FE0  
      __end_of_CCP1_Initialize 1172                            l101 14D0                            l200 148C  
                          l131 1506                            l211 123A                            l124 1170  
                          l206 11F8                            l161 14A4                            l158 14BA  
                          l194 1474                            l460 0C1A                            l197 147A  
                          l473 0F06                            l907 11B4                            l951 112A  
                          l945 0722                            l970 0D9A                            l955 1406  
                          l981 1508                            l958 141E                            l987 13B0  
                          _PR2 0FCB                            _abs 13EA                            _str 0100  
                 ___awmod@sign 00C5                            wreg 0FE8            __end_ofi2_vfpfcnvrt 08FA  
                         ?_abs 00C6                           l2201 1466                           l2211 1470  
                         l2203 1468                           l2131 1380                           l2213 1472  
                         l2205 146A                           l2141 11FA                           l2133 11B6  
                         l2207 146C                           l2311 14B6                           l2303 14A6  
                         l2151 1216                           l2135 11C4                           l2071 10F2  
                         l2209 146E                           l2305 14AA                           l2153 1232  
                         l2065 147A                           l2137 11D6                           l2073 1104  
                         l2161 1190                           l2129 1378                           l2401 014C  
                         l2171 14C2                           l2307 14AE                           l2147 1204  
                         l2067 1488                           l2139 11DC                           l2075 1120  
                         l2163 11A4                           l2155 1172                           l2411 01A0  
                         l2403 0166                           l2173 112C                           l2181 148E  
                         l2309 14B2                           l2149 1212                           l2069 10E6  
                         l2157 1180                           l2501 03DE                           l2421 01C4  
                         l2413 01AA                           l2405 0174                           l2167 14BC  
                         l2175 112E                           l2191 149E                           l2183 1494  
                         l2159 1188                           l2271 0A80                           l2511 041A  
                         l2503 03E2                           l2431 0208                           l2423 01DE  
                         l2415 01B2                           l2407 018E                           l2169 14BE  
                         l2177 115E                           l2185 1498                           l2193 1454  
                         l2273 0A8C                           l2521 044A                           l2513 042C  
                         l2505 03E6                           l2441 0266                           l2433 021C  
                         l2425 01E0                           l2417 01BA                           l2409 019C  
                         l2179 14FE                           l2187 149A                           l2195 145E  
                         l2291 0B20                           l2275 0A94                           l2531 048E  
                         l2523 045E                           l2515 0434                           l2507 03F4  
                         l2451 02A4                           l2443 0280                           l2435 0230  
                         l2427 01F2                           l2419 01C2                           l2371 0088  
                         l2189 149C                           l2197 1462                           l1821 0B5C  
                         l1901 0CF2                           l2293 0B24                           l2277 0AA0  
                         l2285 0AB8                           l2269 0A7C                           l2541 04D8  
                         l2525 0470                           l2533 0492                           l2517 0438  
                         l2509 0408                           l2461 02C6                           l2453 02AC  
                         l2445 028E                           l2437 023E                           l2429 01F4  
                         l2381 00C8                           l2373 008A                           l2365 0070  
                         l2199 1464                           l1831 0B8C                           l1823 0B6A  
                         l1903 0D02                           l2295 0B42                           l2279 0AAC  
                         l2287 0AFE                           l2551 050A                           l2543 04E0  
                         l2535 04A0                           l2527 0482                           l2519 043C  
                         l2471 0304                           l2463 02E0                           l2455 02B4  
                         l2447 0292                           l2439 0258                           l2391 0102  
                         l2383 00D6                           l2375 00A0                           l2367 0074  
                         l1841 0BBA                           l1833 0B90                           l1825 0B72  
                         l1913 13EA                           l1905 0D0C                           l1921 0576  
                         l2297 0B50                           l2289 0B12                           l2553 051C  
                         l2545 04E4                           l2537 04B4                           l2529 048A  
                         l2481 035C                           l2473 0318                           l2465 02E2  
                         l2457 02BC                           l2449 029C                           l2393 010C  
                         l2385 00DA                           l2377 00AE                           l2369 0076  
                         l1851 0BEE                           l1843 0BC8                           l1835 0B98  
                         l1827 0B76                           l1819 0B56                           l1915 13FA  
                         l1907 0D28                           l1931 05CC                           l1923 0582  
                         l2555 052E                           l2539 04C6                           l2547 04E8  
                         l2483 036E                           l2491 0390                           l2475 0320  
                         l2467 02F4                           l2459 02C4                           l2395 0114  
                         l2387 00F0                           l2379 00B2                           l1853 0BF4  
                         l1845 0BCE                           l1837 0BAA                           l1829 0B84  
                         l1909 0D5A                           l1941 0664                           l1933 05E4  
                         l1925 0586                           l1917 0546                           l2557 0536  
                         l2549 04F6                           l2493 039E                           l2485 0380  
                         l2477 033A                           l2469 02F6                           l2397 012A  
                         l2389 00FE                           l1847 0BE4                           l1839 0BB2  
                         l1855 0BFA                           l1871 0E76                           l1863 0E56  
                         l1951 06BA                           l1943 0678                           l1935 05FE  
                         l1927 0594                           l1919 056A                           l2559 053A  
                         l2495 03B2                           l2487 0388                           l2479 0348  
                         l2399 013E                           l1857 0C0A                           l1849 0BEC  
                         l1881 0EAE                           l1873 0E84                           l1865 0E5C  
                         l1953 06D4                           l1945 0688                           l1937 0616  
                         l1929 05B0                           l1961 0700                           l2497 03C4  
                         l2489 038C                           l1859 0C12                           l1883 0EBC  
                         l1891 0EE6                           l1875 0E8C                           l1867 0E6A  
                         l1947 0698                           l1955 06D8                           l1939 0648  
                         l2667 0AD0                           l2499 03D6                           l1893 0EF6  
                         l1885 0ED2                           l1877 0E9E                           l1869 0E72  
                         l1949 06A8                           l1957 06EE                           l1895 0EFE  
                         l1887 0EDA                           l1879 0EA6                           l1889 0EE0  
                         l1899 0CE0                           _ADFM 7E07                           STR_1 7DA9  
                         STR_2 7DBB                           STR_3 7D4C                           STR_4 7D26  
                         STR_5 7CFB                           STR_6 7D8B                           STR_7 7CCD  
                         STR_8 7CFB                           STR_9 7D9A                           _CREN 7D5C  
                         u1100 0BAA                           u1101 0BA6                           u1110 0BC8  
                         u1111 0BC4                           u1120 0BE4                           u1200 0CF2  
                         u2000 0482                           u1121 0BE0                           u1201 0CEE  
                         u2001 047E                           u1130 0C0A                           u1210 0D02  
                         u2010 04A0                           u1131 0C06                           u1211 0CFE  
                         u2011 049C                           u1140 0E6A                           u1220 0D28  
                         u1300 0678                           u2020 04B4                           u1141 0E66  
                         u1221 0D24                           u1301 0674                           u2021 04B0  
                         u1150 0E84                           u1230 0D5A                           u1310 0688  
                         u2030 04C6                           u1151 0E80                           u1231 0D56  
                         u1311 0684                           u2031 04C2                           u1080 0B6A  
                         u1160 0E9E                           u1240 13FA                           u1320 0698  
                         u2040 04D8                           u1081 0B66                           u1161 0E9A  
                         u1241 13F6                           u1321 0694                           u2041 04D4  
                         u1090 0B84                           u1170 0EBC                           u1330 06A8  
                         u1250 056A                           u2050 04F6                           u1091 0B80  
                         u1171 0EB8                           u1331 06A4                           u1251 0566  
                         u2051 04F2                           u1180 0ED2                           u1340 06EA  
                         u1260 05B0                           u2060 050A                           u1181 0ECE  
                         u1341 06E6                           u1261 05AC                           u2061 0506  
                         u1190 0EF6                           u1270 05CC                           u2070 051C  
                         u1191 0EF2                           u1271 05C8                           u2071 0518  
                         u2207 02EA                           _LATC 0F8B                           u1520 1488  
                         u1280 0612                           u2080 052E                           u1521 1484  
                         u1281 060C                           u2081 052A                           u2217 032C  
                         u1290 0614                           u1530 1120                           u2227 1166  
                         u1531 111C                           u2167 007E                           u1640 13B0  
                         u1800 012A                           u1641 13AC                           u2177 01D0  
                         u1801 0126                           u1650 11F8                           u1810 0208  
                         u1651 11F4                           u1811 0204                           u2187 01E8  
                         u1660 1232                           u1900 03B2                           u1820 021C  
                         u1661 122E                           u1901 03AE                           u2197 02D2  
                         u1821 0218                           u1910 03C4                           u1830 0304  
                         u1911 03C0                           u1831 0300                           u1920 03D6  
                         u1840 0318                           u1921 03D2                           u1841 0314  
                         u1930 03F4                           u1850 0348                           u1931 03F0  
                         u1851 0344                           u1940 0408                           u1860 035C  
                         u1941 0404                           u1861 0358                           u1950 041A  
                         u1870 036E                           u1951 0416                           u1871 036A  
                         u1960 042C                           u1880 0380                           u1961 0428  
                         u1881 037C                           u1970 044A                           u1890 039E  
                         u1971 0446                           u1891 039A                           u1980 045E  
                         u1981 045A                           u1990 0470                           u1991 046C  
                         _RCIF 7CF5                           i2l80 0A56                           i2l84 0A58  
                         abs@a 00C6                           _dbuf 0080                           _main 0070  
                         _down 00B2                           _prec 00A2                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0044                           _stop 00B4  
                         start 006C                __end_ofi2_fputc 0E56                __end_ofi2_putch 150C  
                 ___param_bank 0000        __end_of_UART_Write_Text 11FA                          ??_abs 00C8  
             ?_UART_Initialize 0001                     i2_vfprintf 123C  __end_of_OSCILLATOR_Initialize 14A6  
                        ?_main 0001                __end_of___awdiv 0C1C                          STR_10 7D6C  
                        STR_11 7CFB                          STR_12 7DB3                          STR_13 7DA9  
                        STR_14 7DBB                __end_of___awmod 0F08                ___awdiv@divisor 00C2  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l200 14E6                          i1l216 10E4                          i1l226 0054  
                        i2l200 14FC                          i2l211 133C                          i1l197 14D4  
                        i2l206 12FC                          i1l473 0FB6                          i2l460 0CDE  
                        i2l197 14EA                          i2l473 1066                          i2l907 12BC  
                        i2l951 127C                          i2l945 08F8                          i2l970 0E54  
                        i2l955 143A                ___awdiv@counter 00C4                          i2l981 150A  
                        i2l958 1452                          i2l987 13E8                          _RCREG 0FAE  
                 vfpfcnvrt@fmt 00CB                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TRISC 0F94                          _TRISD 0F95                          i2_abs 1420  
                        _TXREG 0FAD                    ?_UART_Write 0001                 i1___awmod@sign 003E  
                        _flags 00BA                          _fputc 0CE0                          _ready 00A4  
                        _score 00B8                          _width 00A0                          _state 00B6  
                        _putch 1508                    _ClearBuffer 11FA                          tablat 0FF5  
                        ttemp5 0045                          ttemp6 0048                          ttemp7 004C  
                        status 0FD8                          wtemp8 0045                __end_of_sprintf 11B6  
             __end_ofi2_strcpy 13EA                __initialization 133E                   __end_of_main 0546  
                  i2_vfpfcnvrt 0724                  i2vfpfcnvrt@ap 000D                  i2vfpfcnvrt@cp 0011  
                i2vfpfcnvrt@fp 000B                         ??_main 00F2               ?_CCP1_Initialize 0001  
                __activetblptr 0002                     i2sprintf@f 0025                     i2sprintf@s 001E  
                       ?i2_abs 0007                         _ADCON1 0FC1                         ?_fputc 00C0  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _CCPR1L 0FBE  
             ___awdiv@dividend 00C0                         ?_putch 0001                         i1l2215 14D4  
                       i1l2231 0F26                         i1l2223 0F08                         i1l2217 14E2  
                       i1l2241 0F5E                         i1l2233 0F34                         i1l2225 0F0C  
                       i1l2321 10C4                         i1l2313 1068                         i1l2243 0F6C  
                       i1l2251 0F96                         i1l2235 0F3C                         i1l2227 0F1A  
                       i1l2323 10C8                         i1l2315 1096                         i1l2253 0FA6  
                       i1l2245 0F82                         i1l2237 0F4E                         i1l2229 0F22  
                       i1l2317 10A8                         i1l2255 0FAE                         i1l2247 0F8A  
                       i1l2239 0F56                         i1l2319 10B2                         i1l2249 0F90  
                       i2l2001 0CB8                         i1l2641 004A                         i2l2003 0CBE  
                       i2l2011 0FB8                         i1l2643 0050                         i2l2005 0CCE  
                       i2l2021 0FE4                         i2l2013 0FBC                         i2l2101 0824  
                       i1l2637 002E                         i2l2007 0CD6                         i2l2031 101C  
                       i2l2023 0FEC                         i2l2015 0FCA                         i2l2111 0882  
                       i2l2103 0840                         i1l2639 003C                         i2l2041 1056  
                       i2l2033 1032                         i2l2025 0FFE                         i2l2017 0FD2  
                       i2l2113 0894                         i2l2105 0852                         i2l2043 105E  
                       i2l2035 103A                         i2l2027 1006                         i2l2019 0FD6  
                       i2l2051 0D9C                         i2l2115 08AE                         i2l2107 0862  
                       i2l2123 08D6                         i2l2221 14F8                         i2l2037 1040  
                       i2l2029 100E                         i2l2061 0E14                         i2l2053 0DAC  
                       i2l2109 0872                         i2l2117 08B0                         i2l2039 1046  
                       i2l2047 1420                         i2l2055 0DBC                         i2l2119 08C6  
                       i2l2049 142E                         i2l2057 0DC6                         i2l2081 0746  
                       i2l2219 14EA                         i2l2331 12DC                         i2l2059 0DE2  
                       i2l2091 078E                         i2l2083 0752                         i2l2341 1306  
                       i2l2333 12E0                         i2l2093 07AA                         i2l2085 0760  
                       i2l2261 1248                         i2l2343 1314                         i2l2335 12FE  
                       i2l2327 12BE                         i2l2095 07C2                         i2l2087 0764  
                       i2l2079 0724                         i2l2263 1258                         i2l2351 128A  
                       i2l2345 1318                         i2l2329 12CA                         i2l2097 07DC  
                       i2l2089 0772                         i2l2265 1274                         i2l2353 1292  
                       i2l2361 13B2                         i2l2601 0A16                         i2l2347 1334  
                       i2l2099 07F4                         i2l2259 123C                         i2l2355 129A  
                       i2l2363 13BA                         i2l2603 0A46                         i2l2357 12AE  
                       i2l2349 127E                         i2l2605 0A48                         i2l2561 091C  
                       i2l2571 0974                         i2l2563 092A                         i2l2581 09B0  
                       i2l2573 0980                         i2l2565 093C                         i2l2591 09EA  
                       i2l2583 09BA                         i2l2575 0984                         i2l2567 0950  
                       i2l2593 09F2                         i2l2585 09C2                         i2l2577 09A0  
                       i2l2569 095C                         i2l1971 0C2E                         i2l2595 09FA  
                       i2l2587 09DE                         i2l2579 09AC                         i2l1981 0C54  
                       i2l1973 0C36                         i2l2597 0A02                         i2l2589 09E2  
                       i2l1991 0C8C                         i2l1983 0C5C                         i2l1975 0C3A  
                       i2l1967 0C1C                         i2l2599 0A0A                         i2l1993 0C92  
                       i2l1985 0C6E                         i2l1977 0C48                         i2l1969 0C20  
                       i2l1995 0CA8                         i2l1987 0C76                         i2l1979 0C50  
                       i2l1997 0CB0                         i2l1989 0C7E                         i2l1999 0CB2  
                    ??i2_fputc 0004                  vfpfcnvrt@done 00CF                      ??i2_putch 0001  
                       i2abs@a 0007                         _Hi_ISR 0008                         _Lo_ISR 0018  
                 vfprintf@cfmt 00DB                  i2vfprintf@fmt 0019                      ??___awdiv 00C4  
                    ??___awmod 00C4               ?_UART_Write_Text 00C1                    ?i2_vfprintf 0018  
                       _lenStr 0040                         _button 0042                         clear_0 1344  
                       clear_1 1350                         clear_2 135C               ___awdiv@quotient 00C6  
              ___awmod@divisor 00C2                         isa$std 0001                ___awmod@counter 00C4  
                       _strcpy 1378                 i2___awdiv@sign 0006              __end_ofi1___awmod 0FB8  
                       fputc@c 00C0              __end_ofi2___awdiv 0CE0              __end_ofi2___awmod 1068  
                 __mediumconst 7CCC                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                         putch@c 0001               __end_of_vfprintf 112C  
               i2___awmod@sign 0006                      ??_sprintf 00E3          __end_ofi2_ClearBuffer 133E  
            _SYSTEM_Initialize 14A6                     __accesstop 0080        __end_of__initialization 136A  
           ?_SYSTEM_Initialize 0001                  ___rparam_used 0001              __end_ofi2_sprintf 12BE  
                __end_ofi2_abs 1454                  ?i1_UART_Write 0001                 __pcstackCOMRAM 0001  
          ??_SYSTEM_Initialize 00C1                  __end_of_fputc 0D9C                  __end_of_putch 150A  
                      ??i2_abs 0009                  ??_MyusartRead 003F                  ?i2_UART_Write 0001  
               i2vfpfcnvrt@fmt 000C                      ?i2_strcpy 0001                        ??_fputc 00C3  
    __end_of_SYSTEM_Initialize 14BC                        ??_putch 00C0                     __pbssBANK0 0080  
                   __pbssBANK1 0100                     __pbssBANK2 0200                    i2sprintf@ap 0024  
                      ?_Hi_ISR 0001                    i2strcpy@src 0003               i2UART_Write@data 0001  
                      ?_Lo_ISR 0001                 ??i1_UART_Write 0039             i2UART_Write_Text@i 0004  
                      ?_strcpy 00C0              __end_of_add_score 0B56                 ??i2_UART_Write 0001  
                 ??_UART_Write 00C0                     ??i2_strcpy 0005                   ?_ClearBuffer 0001  
                      i2_fputc 0D9C            __end_of_MyusartRead 10E6                        i2_putch 150A  
                      __Hparam 0000                        __Lparam 0000                        ___awdiv 0B56  
                      ___awmod 0E56             __end_of_UART_Write 148E                      ?_vfprintf 00D7  
               i2vfprintf@cfmt 001C                   ?i2_vfpfcnvrt 000B                        __pcinit 133E  
                      __ramtop 0600                        __ptext0 0070                        __ptext1 0A7C  
                      __ptext2 1378                        __ptext3 1172                        __ptext4 10E6  
                      __ptext5 0546                        __ptext6 0CE0                        __ptext7 1508  
                      __ptext8 13EA                        __ptext9 0E56          _OSCILLATOR_Initialize 148E  
                    _T2CONbits 0FCA               ___awmod@dividend 00C0                        _sprintf 1172  
               __pintcode_body 08FA           end_of_initialization 136A                        fputc@fp 00C2  
                __Lmediumconst 7CCC                        int_func 08FA              __end_of_vfpfcnvrt 0724  
                    _RCSTAbits 0FAB                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 00D2  
                 ??i2_vfprintf 001C                     ??_vfprintf 00DB                        strcpy@d 00C4  
                    _PORTAbits 0F80                      _PORTBbits 0F81                 UART_Write@data 00C0  
                    _TRISBbits 0F93                      _TRISCbits 0F94                    _MyusartRead 1068  
         __end_ofi1_UART_Write 14E8                      i1___awmod 0F08                      i2___awdiv 0C1C  
                    i2___awmod 0FB8             __end_ofi2_vfprintf 127E                    _CCP1CONbits 0FBD  
                    _TXSTAbits 0FAC             i2___awdiv@dividend 0001                 __end_of_Hi_ISR 0A7C  
               __end_of_Lo_ISR 006C           __end_ofi2_UART_Write 14FE                      i2_sprintf 127E  
 __end_of_INTERRUPT_Initialize 1508                    vfpfcnvrt@ap 00CC                    vfpfcnvrt@cp 00D0  
                  vfpfcnvrt@fp 00CA                    _BAUDCONbits 0FB8                 _ADC_Initialize 14BC  
                    i2fputc@fp 0003         ?_OSCILLATOR_Initialize 0001                 __end_of_strcpy 13B2  
          start_initialization 133E             i2___awdiv@quotient 0007                    __end_of_abs 1420  
                   ?i1___awmod 0039                     ?i2___awdiv 0001                     ?i2___awmod 0001  
                 i2vfpfcnvrt@c 0017                   ClearBuffer@i 00C0                      i2strcpy@d 0005  
            ??_UART_Initialize 00C0                       ??_Hi_ISR 0031                       ??_Lo_ISR 00BB  
                  vfprintf@fmt 00D8                   i2vfprintf@ap 001B                i2vfpfcnvrt@done 0010  
                 i2vfprintf@fp 0018                     ?i2_sprintf 001E         __end_of_ADC_Initialize 14D2  
           i1___awmod@dividend 0039                       ??_strcpy 00C4                   i2sprintf@fmt 0020  
                  __pbssCOMRAM 0040              i2_UART_Write_Text 12BE                  __pcstackBANK0 00BB  
           ?i2_UART_Write_Text 0002                      _add_score 0A7C                       ?i2_fputc 0001  
                 i2strcpy@dest 0001                       ?i2_putch 0001          i2UART_Write_Text@text 0002  
          ??i2_UART_Write_Text 0004              ??_CCP1_Initialize 00C0                      __pintcode 0008  
                __pmediumconst 7CCC                       ?___awdiv 00C0                       ?___awmod 00C0  
              ?_ADC_Initialize 0001                    __pintcodelo 0018      __end_ofi2_UART_Write_Text 12FE  
                  ??i1___awmod 003D                    ??i2___awdiv 0005                     ?_add_score 0001  
                  ??i2___awmod 0005                       ?_sprintf 00DD              ??_UART_Write_Text 00C3  
         _INTERRUPT_Initialize 14FE                  i2_ClearBuffer 12FE                       _LATDbits 0F8C  
                     _IPR1bits 0F9F                       _PIE1bits 0F9D                       i1u214_20 003C  
                     i1u214_21 0038                       i1u215_20 004A                       i1u215_21 0046  
                     i1u170_20 0F34                       i1u170_21 0F30                       i1u171_20 0F4E  
                     i1u171_21 0F4A                       i1u172_20 0F6C                       i1u172_21 0F68  
                     i1u173_20 0F82                       i1u173_21 0F7E                       i1u174_20 0FA6  
                     i1u174_21 0FA2                       i1u167_20 14E2                       i1u167_21 14DE  
                     i1u176_20 1096                       i1u176_21 1092                       i1u169_20 0F1A  
                     i1u169_21 0F16                       i2u210_40 093C                       i2u210_41 0938  
                     i2u211_40 09DE                       i2u211_41 09DA                       i2u140_40 0CCE  
                     i2u140_41 0CCA                       i2u141_40 0FCA                       i2u141_41 0FC6  
                     i2u142_40 0FE4                       i2u150_40 0DE2                       i2u142_41 0FE0  
                     i2u150_41 0DDE                       i2u135_40 0C2E                       i2u143_40 0FFE  
                     i2u151_40 0E14                       i2u135_41 0C2A                       i2u143_41 0FFA  
                     i2u151_41 0E10                       i2u136_40 0C48                       i2u144_40 101C  
                     i2u160_40 0862                       i2u136_41 0C44                       i2u144_41 1018  
                     i2u160_41 085E                       i2u137_40 0C6E                       i2u145_40 1032  
                     i2u161_40 0872                       i2u209_40 092A                       i2u137_41 0C6A  
                     i2u145_41 102E                       i2u161_41 086E                       i2u209_41 0926  
                     i2u138_40 0C8C                       i2u146_40 1056                       i2u162_40 0882  
                     i2u154_40 0746                       i2u138_41 0C88                       i2u146_41 1052  
                     i2u162_41 087E                       i2u154_41 0742                       i2u139_40 0CA8  
                     i2u147_40 142E                       i2u163_40 08C2                       i2u155_40 078E  
                     i2u139_41 0CA4                       i2u147_41 142A                       i2u163_41 08BE  
                     i2u155_41 078A                       i2u148_40 0DAC                       i2u156_40 07AA  
                     i2u148_41 0DA8                       i2u156_41 07A6                       i2u149_40 0DBC  
                     i2u157_40 07F0                       i2u149_41 0DB8                       i2u157_41 07EA  
                     i2u158_40 07F2                       i2u159_40 0852                       i2u175_40 1274  
                     i2u159_41 084E                       i2u175_41 1270                       i2u168_40 14F8  
                     i2u168_41 14F4                       i2u177_40 12FC                       i2u177_41 12F8  
                     _PIR1bits 0F9E                       i2u178_40 1334                       i2u178_41 1330  
                     i2u179_40 13E8                       i2u179_41 13E4                   i1_UART_Write 14D2  
                     _RCONbits 0FD0                    ??i2_sprintf 0024                      _vfpfcnvrt 0546  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0              i2___awdiv@divisor 0003  
                 ?_MyusartRead 0001              i2___awdiv@counter 0005                   i2_UART_Write 14E8  
                     i2_strcpy 13B2                     vfpfcnvrt@c 00D6                       i2fputc@c 0001  
        ?_INTERRUPT_Initialize 0001                 ?i2_ClearBuffer 0001             i2___awmod@dividend 0001  
             i1UART_Write@data 0039                 i2ClearBuffer@i 0001                       __Hrparam 0000  
                   vfprintf@ap 00DA                       __Lrparam 0000                     vfprintf@fp 00D7  
            i1___awmod@divisor 003B        ??_OSCILLATOR_Initialize 00C0              i1___awmod@counter 003D  
                   ?_vfpfcnvrt 00CA             i2vfpfcnvrt@convarg 0013                _UART_Initialize 1454  
                   sprintf@fmt 00DF                       __ptext10 0B56                       __ptext11 11B6  
                     __ptext12 1476                       __ptext21 1068                       __ptext13 11FA  
                     __ptext30 150A                       __ptext22 0F08                       __ptext14 14A6  
                     __ptext31 1420                       __ptext23 14D2                       __ptext15 1454  
                     __ptext32 0FB8                       __ptext16 148E                       __ptext33 0C1C  
                     __ptext25 13B2                       __ptext17 14FE                       __ptext34 12BE  
                     __ptext26 127E                       __ptext18 112C                       __ptext35 14E8  
                     __ptext27 123C                       __ptext19 14BC                       __ptext36 12FE  
                     __ptext28 0724                       __ptext29 0D9C                    ??_add_score 00F0  
                   strcpy@dest 00C0            UART_Write_Text@text 00C1                       isa$xinst 0000  
                     int$flags 0044                       _vfprintf 10E6                       _mystring 0200  
            i2___awmod@divisor 0003              i2___awmod@counter 0005                     _INTCONbits 0FF2  
              _CCP1_Initialize 112C         ??_INTERRUPT_Initialize 00C0                ??i2_ClearBuffer 0001  
                ??_ClearBuffer 00C0                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 00E3                      strcpy@src 00C2               ??_ADC_Initialize 00C0  
      __end_of_UART_Initialize 1476                  ??i2_vfpfcnvrt 000E                    ??_vfpfcnvrt 00CD  
              _UART_Write_Text 11B6                       sprintf@f 00E4                       sprintf@s 00DD  
                   _UART_Write 1476               UART_Write_Text@i 00C3            __end_of_ClearBuffer 123C  
