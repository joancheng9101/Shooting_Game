

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 10 16:52:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 18/08/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataCOMRAM
    95   001A18                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _button
    99   001A18  0001               	dw	1
   100   000000                     _RCREG	set	4014
   101   000000                     _TXREG	set	4013
   102   000000                     _SPBRG	set	4015
   103   000000                     _BAUDCONbits	set	4024
   104   000000                     _TRISBbits	set	3987
   105   000000                     _TRISC	set	3988
   106   000000                     _CCP1CONbits	set	4029
   107   000000                     _ADCON0bits	set	4034
   108   000000                     _ADRESL	set	4035
   109   000000                     _ADRESH	set	4036
   110   000000                     _ADCON1	set	4033
   111   000000                     _ADFM	set	32263
   112   000000                     _TRISCbits	set	3988
   113   000000                     _ADCON2bits	set	4032
   114   000000                     _CREN	set	32092
   115   000000                     _RCIF	set	31989
   116   000000                     _IRCF0	set	32412
   117   000000                     _IRCF1	set	32413
   118   000000                     _LATC	set	3979
   119   000000                     _PORTAbits	set	3968
   120   000000                     _LATDbits	set	3980
   121   000000                     _TRISA	set	3986
   122   000000                     _INTCONbits	set	4082
   123   000000                     _T2CONbits	set	4042
   124   000000                     _RCONbits	set	4048
   125   000000                     _PR2	set	4043
   126   000000                     _CCPR1L	set	4030
   127   000000                     _PIE1bits	set	3997
   128   000000                     _PIR1bits	set	3998
   129   000000                     _RCSTAbits	set	4011
   130   000000                     _TXSTAbits	set	4012
   131   000000                     _TRISD	set	3989
   132   000000                     _IRCF2	set	32414
   133   000000                     _IPR1bits	set	3999
   134                           
   135                           	psect	smallconst
   136   000600                     __psmallconst:
   137                           	callstack 0
   138   000600  00                 	db	0
   139   000601                     STR_7:
   140   000601  50                 	db	80	;'P'
   141   000602  72                 	db	114	;'r'
   142   000603  65                 	db	101	;'e'
   143   000604  73                 	db	115	;'s'
   144   000605  73                 	db	115	;'s'
   145   000606  20                 	db	32
   146   000607  74                 	db	116	;'t'
   147   000608  68                 	db	104	;'h'
   148   000609  65                 	db	101	;'e'
   149   00060A  20                 	db	32
   150   00060B  62                 	db	98	;'b'
   151   00060C  75                 	db	117	;'u'
   152   00060D  74                 	db	116	;'t'
   153   00060E  74                 	db	116	;'t'
   154   00060F  6F                 	db	111	;'o'
   155   000610  6E                 	db	110	;'n'
   156   000611  20                 	db	32
   157   000612  74                 	db	116	;'t'
   158   000613  6F                 	db	111	;'o'
   159   000614  20                 	db	32
   160   000615  63                 	db	99	;'c'
   161   000616  6F                 	db	111	;'o'
   162   000617  6E                 	db	110	;'n'
   163   000618  74                 	db	116	;'t'
   164   000619  69                 	db	105	;'i'
   165   00061A  6E                 	db	110	;'n'
   166   00061B  75                 	db	117	;'u'
   167   00061C  65                 	db	101	;'e'
   168   00061D  20                 	db	32
   169   00061E  74                 	db	116	;'t'
   170   00061F  68                 	db	104	;'h'
   171   000620  65                 	db	101	;'e'
   172   000621  20                 	db	32
   173   000622  63                 	db	99	;'c'
   174   000623  68                 	db	104	;'h'
   175   000624  61                 	db	97	;'a'
   176   000625  6C                 	db	108	;'l'
   177   000626  6C                 	db	108	;'l'
   178   000627  65                 	db	101	;'e'
   179   000628  6E                 	db	110	;'n'
   180   000629  67                 	db	103	;'g'
   181   00062A  65                 	db	101	;'e'
   182   00062B  21                 	db	33
   183   00062C  0A                 	db	10
   184   00062D  0D                 	db	13
   185   00062E  00                 	db	0
   186   00062F                     STR_5:
   187   00062F  44                 	db	68	;'D'
   188   000630  6F                 	db	111	;'o'
   189   000631  6E                 	db	110	;'n'
   190   000632  27                 	db	39
   191   000633  74                 	db	116	;'t'
   192   000634  20                 	db	32
   193   000635  66                 	db	102	;'f'
   194   000636  6F                 	db	111	;'o'
   195   000637  72                 	db	114	;'r'
   196   000638  67                 	db	103	;'g'
   197   000639  65                 	db	101	;'e'
   198   00063A  74                 	db	116	;'t'
   199   00063B  20                 	db	32
   200   00063C  74                 	db	116	;'t'
   201   00063D  6F                 	db	111	;'o'
   202   00063E  20                 	db	32
   203   00063F  6B                 	db	107	;'k'
   204   000640  65                 	db	101	;'e'
   205   000641  65                 	db	101	;'e'
   206   000642  70                 	db	112	;'p'
   207   000643  20                 	db	32
   208   000644  61                 	db	97	;'a'
   209   000645  6E                 	db	110	;'n'
   210   000646  20                 	db	32
   211   000647  65                 	db	101	;'e'
   212   000648  79                 	db	121	;'y'
   213   000649  65                 	db	101	;'e'
   214   00064A  20                 	db	32
   215   00064B  6F                 	db	111	;'o'
   216   00064C  6E                 	db	110	;'n'
   217   00064D  20                 	db	32
   218   00064E  74                 	db	116	;'t'
   219   00064F  68                 	db	104	;'h'
   220   000650  65                 	db	101	;'e'
   221   000651  20                 	db	32
   222   000652  74                 	db	116	;'t'
   223   000653  69                 	db	105	;'i'
   224   000654  6D                 	db	109	;'m'
   225   000655  65                 	db	101	;'e'
   226   000656  21                 	db	33
   227   000657  0A                 	db	10
   228   000658  0D                 	db	13
   229   000659  00                 	db	0
   230   00065A                     STR_4:
   231   00065A  50                 	db	80	;'P'
   232   00065B  72                 	db	114	;'r'
   233   00065C  65                 	db	101	;'e'
   234   00065D  73                 	db	115	;'s'
   235   00065E  73                 	db	115	;'s'
   236   00065F  20                 	db	32
   237   000660  74                 	db	116	;'t'
   238   000661  68                 	db	104	;'h'
   239   000662  65                 	db	101	;'e'
   240   000663  20                 	db	32
   241   000664  62                 	db	98	;'b'
   242   000665  75                 	db	117	;'u'
   243   000666  74                 	db	116	;'t'
   244   000667  74                 	db	116	;'t'
   245   000668  6F                 	db	111	;'o'
   246   000669  6E                 	db	110	;'n'
   247   00066A  20                 	db	32
   248   00066B  74                 	db	116	;'t'
   249   00066C  6F                 	db	111	;'o'
   250   00066D  20                 	db	32
   251   00066E  73                 	db	115	;'s'
   252   00066F  74                 	db	116	;'t'
   253   000670  61                 	db	97	;'a'
   254   000671  72                 	db	114	;'r'
   255   000672  74                 	db	116	;'t'
   256   000673  20                 	db	32
   257   000674  73                 	db	115	;'s'
   258   000675  68                 	db	104	;'h'
   259   000676  6F                 	db	111	;'o'
   260   000677  6F                 	db	111	;'o'
   261   000678  74                 	db	116	;'t'
   262   000679  69                 	db	105	;'i'
   263   00067A  6E                 	db	110	;'n'
   264   00067B  67                 	db	103	;'g'
   265   00067C  21                 	db	33
   266   00067D  0A                 	db	10
   267   00067E  0D                 	db	13
   268   00067F  00                 	db	0
   269   000680                     STR_3:
   270   000680  57                 	db	87	;'W'
   271   000681  65                 	db	101	;'e'
   272   000682  6C                 	db	108	;'l'
   273   000683  63                 	db	99	;'c'
   274   000684  6F                 	db	111	;'o'
   275   000685  6D                 	db	109	;'m'
   276   000686  65                 	db	101	;'e'
   277   000687  20                 	db	32
   278   000688  74                 	db	116	;'t'
   279   000689  6F                 	db	111	;'o'
   280   00068A  20                 	db	32
   281   00068B  74                 	db	116	;'t'
   282   00068C  68                 	db	104	;'h'
   283   00068D  65                 	db	101	;'e'
   284   00068E  20                 	db	32
   285   00068F  73                 	db	115	;'s'
   286   000690  68                 	db	104	;'h'
   287   000691  6F                 	db	111	;'o'
   288   000692  6F                 	db	111	;'o'
   289   000693  74                 	db	116	;'t'
   290   000694  69                 	db	105	;'i'
   291   000695  6E                 	db	110	;'n'
   292   000696  67                 	db	103	;'g'
   293   000697  20                 	db	32
   294   000698  67                 	db	103	;'g'
   295   000699  61                 	db	97	;'a'
   296   00069A  6D                 	db	109	;'m'
   297   00069B  65                 	db	101	;'e'
   298   00069C  21                 	db	33
   299   00069D  0A                 	db	10
   300   00069E  0D                 	db	13
   301   00069F  00                 	db	0
   302   0006A0                     STR_10:
   303   0006A0  50                 	db	80	;'P'
   304   0006A1  72                 	db	114	;'r'
   305   0006A2  65                 	db	101	;'e'
   306   0006A3  73                 	db	115	;'s'
   307   0006A4  73                 	db	115	;'s'
   308   0006A5  20                 	db	32
   309   0006A6  74                 	db	116	;'t'
   310   0006A7  68                 	db	104	;'h'
   311   0006A8  65                 	db	101	;'e'
   312   0006A9  20                 	db	32
   313   0006AA  62                 	db	98	;'b'
   314   0006AB  75                 	db	117	;'u'
   315   0006AC  74                 	db	116	;'t'
   316   0006AD  74                 	db	116	;'t'
   317   0006AE  6F                 	db	111	;'o'
   318   0006AF  6E                 	db	110	;'n'
   319   0006B0  20                 	db	32
   320   0006B1  74                 	db	116	;'t'
   321   0006B2  6F                 	db	111	;'o'
   322   0006B3  20                 	db	32
   323   0006B4  72                 	db	114	;'r'
   324   0006B5  65                 	db	101	;'e'
   325   0006B6  73                 	db	115	;'s'
   326   0006B7  74                 	db	116	;'t'
   327   0006B8  61                 	db	97	;'a'
   328   0006B9  72                 	db	114	;'r'
   329   0006BA  74                 	db	116	;'t'
   330   0006BB  21                 	db	33
   331   0006BC  0A                 	db	10
   332   0006BD  0D                 	db	13
   333   0006BE  00                 	db	0
   334   0006BF                     STR_6:
   335   0006BF  0A                 	db	10
   336   0006C0  0D                 	db	13
   337   0006C1  47                 	db	71	;'G'
   338   0006C2  6F                 	db	111	;'o'
   339   0006C3  6F                 	db	111	;'o'
   340   0006C4  64                 	db	100	;'d'
   341   0006C5  20                 	db	32
   342   0006C6  4A                 	db	74	;'J'
   343   0006C7  6F                 	db	111	;'o'
   344   0006C8  62                 	db	98	;'b'
   345   0006C9  20                 	db	32
   346   0006CA  21                 	db	33
   347   0006CB  0A                 	db	10
   348   0006CC  0D                 	db	13
   349   0006CD  00                 	db	0
   350   0006CE                     STR_9:
   351   0006CE  0D                 	db	13
   352   0006CF  47                 	db	71	;'G'
   353   0006D0  61                 	db	97	;'a'
   354   0006D1  6D                 	db	109	;'m'
   355   0006D2  65                 	db	101	;'e'
   356   0006D3  20                 	db	32
   357   0006D4  4F                 	db	79	;'O'
   358   0006D5  76                 	db	118	;'v'
   359   0006D6  65                 	db	101	;'e'
   360   0006D7  72                 	db	114	;'r'
   361   0006D8  20                 	db	32
   362   0006D9  21                 	db	33
   363   0006DA  0A                 	db	10
   364   0006DB  0D                 	db	13
   365   0006DC  00                 	db	0
   366   0006DD                     STR_1:
   367   0006DD  0D                 	db	13
   368   0006DE  73                 	db	115	;'s'
   369   0006DF  63                 	db	99	;'c'
   370   0006E0  6F                 	db	111	;'o'
   371   0006E1  72                 	db	114	;'r'
   372   0006E2  65                 	db	101	;'e'
   373   0006E3  20                 	db	32
   374   0006E4  3A                 	db	58	;':'
   375   0006E5  20                 	db	32
   376   0006E6  00                 	db	0
   377   0006E7                     STR_12:
   378   0006E7  53                 	db	83	;'S'
   379   0006E8  54                 	db	84	;'T'
   380   0006E9  41                 	db	65	;'A'
   381   0006EA  52                 	db	82	;'R'
   382   0006EB  54                 	db	84	;'T'
   383   0006EC  0A                 	db	10
   384   0006ED  0D                 	db	13
   385   0006EE  00                 	db	0
   386   0006EF                     STR_2:
   387   0006EF  25                 	db	37
   388   0006F0  64                 	db	100	;'d'
   389   0006F1  00                 	db	0
   390   0006F2  00                 	db	0	; dummy byte at the end
   391   000000                     
   392                           ; #config settings
   393                           
   394                           	psect	cinit
   395   0015E6                     __pcinit:
   396                           	callstack 0
   397   0015E6                     start_initialization:
   398                           	callstack 0
   399   0015E6                     __initialization:
   400                           	callstack 0
   401                           
   402                           ; Initialize objects allocated to COMRAM (2 bytes)
   403                           ; load TBLPTR registers with __pidataCOMRAM
   404   0015E6  0E18               	movlw	low __pidataCOMRAM
   405   0015E8  6EF6               	movwf	tblptrl,c
   406   0015EA  0E1A               	movlw	high __pidataCOMRAM
   407   0015EC  6EF7               	movwf	tblptrh,c
   408   0015EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   409   0015F0  6EF8               	movwf	tblptru,c
   410   0015F2  0009               	tblrd		*+	;fetch initializer
   411   0015F4  CFF5 F046          	movff	tablat,__pdataCOMRAM
   412   0015F8  0009               	tblrd		*+	;fetch initializer
   413   0015FA  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   414                           
   415                           ; Clear objects allocated to BANK2 (200 bytes)
   416   0015FE  EE02  F000         	lfsr	0,__pbssBANK2
   417   001602  0EC8               	movlw	200
   418   001604                     clear_0:
   419   001604  6AEE               	clrf	postinc0,c
   420   001606  06E8               	decf	wreg,f,c
   421   001608  E1FD               	bnz	clear_0
   422                           
   423                           ; Clear objects allocated to BANK1 (200 bytes)
   424   00160A  EE01  F000         	lfsr	0,__pbssBANK1
   425   00160E  0EC8               	movlw	200
   426   001610                     clear_1:
   427   001610  6AEE               	clrf	postinc0,c
   428   001612  06E8               	decf	wreg,f,c
   429   001614  E1FD               	bnz	clear_1
   430                           
   431                           ; Clear objects allocated to BANK0 (55 bytes)
   432   001616  EE00  F080         	lfsr	0,__pbssBANK0
   433   00161A  0E37               	movlw	55
   434   00161C                     clear_2:
   435   00161C  6AEE               	clrf	postinc0,c
   436   00161E  06E8               	decf	wreg,f,c
   437   001620  E1FD               	bnz	clear_2
   438                           
   439                           ; Clear objects allocated to COMRAM (6 bytes)
   440   001622  6A45               	clrf	(__pbssCOMRAM+5)& (0+255),c
   441   001624  6A44               	clrf	(__pbssCOMRAM+4)& (0+255),c
   442   001626  6A43               	clrf	(__pbssCOMRAM+3)& (0+255),c
   443   001628  6A42               	clrf	(__pbssCOMRAM+2)& (0+255),c
   444   00162A  6A41               	clrf	(__pbssCOMRAM+1)& (0+255),c
   445   00162C  6A40               	clrf	__pbssCOMRAM& (0+255),c
   446   00162E                     end_of_initialization:
   447                           	callstack 0
   448   00162E                     __end_of__initialization:
   449                           	callstack 0
   450   00162E  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   451   001630  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   452   001632  0E00               	movlw	low (__Lmediumconst shr (0+16))
   453   001634  6EF8               	movwf	tblptru,c
   454   001636  0100               	movlb	0
   455   001638  EF7A  F003         	goto	_main	;jump to C main() function
   456                           
   457                           	psect	bssCOMRAM
   458   000040                     __pbssCOMRAM:
   459                           	callstack 0
   460   000040                     _lenStr:
   461                           	callstack 0
   462   000040                     	ds	2
   463   000042                     _d6:
   464                           	callstack 0
   465   000042                     	ds	2
   466   000044                     _d5:
   467                           	callstack 0
   468   000044                     	ds	2
   469                           
   470                           	psect	dataCOMRAM
   471   000046                     __pdataCOMRAM:
   472                           	callstack 0
   473   000046                     _button:
   474                           	callstack 0
   475   000046                     	ds	2
   476                           
   477                           	psect	bssBANK0
   478   000080                     __pbssBANK0:
   479                           	callstack 0
   480   000080                     _dbuf:
   481                           	callstack 0
   482   000080                     	ds	32
   483   0000A0                     _width:
   484                           	callstack 0
   485   0000A0                     	ds	2
   486   0000A2                     _prec:
   487                           	callstack 0
   488   0000A2                     	ds	2
   489   0000A4                     _ready:
   490                           	callstack 0
   491   0000A4                     	ds	2
   492   0000A6                     _d4:
   493                           	callstack 0
   494   0000A6                     	ds	2
   495   0000A8                     _d3:
   496                           	callstack 0
   497   0000A8                     	ds	2
   498   0000AA                     _d2:
   499                           	callstack 0
   500   0000AA                     	ds	2
   501   0000AC                     _d1:
   502                           	callstack 0
   503   0000AC                     	ds	2
   504   0000AE                     _down:
   505                           	callstack 0
   506   0000AE                     	ds	2
   507   0000B0                     _stop:
   508                           	callstack 0
   509   0000B0                     	ds	2
   510   0000B2                     _state:
   511                           	callstack 0
   512   0000B2                     	ds	2
   513   0000B4                     _score:
   514                           	callstack 0
   515   0000B4                     	ds	2
   516   0000B6                     _flags:
   517                           	callstack 0
   518   0000B6                     	ds	1
   519                           
   520                           	psect	bssBANK1
   521   000100                     __pbssBANK1:
   522                           	callstack 0
   523   000100                     _str:
   524                           	callstack 0
   525   000100                     	ds	200
   526                           
   527                           	psect	bssBANK2
   528   000200                     __pbssBANK2:
   529                           	callstack 0
   530   000200                     _mystring:
   531                           	callstack 0
   532   000200                     	ds	200
   533                           
   534                           	psect	cstackBANK0
   535   0000B7                     __pcstackBANK0:
   536                           	callstack 0
   537   0000B7                     ??_CCP1_Initialize:
   538   0000B7                     ?___awdiv:
   539                           	callstack 0
   540   0000B7                     ?___awmod:
   541                           	callstack 0
   542   0000B7                     UART_Write@data:
   543                           	callstack 0
   544   0000B7                     ClearBuffer@i:
   545                           	callstack 0
   546   0000B7                     ___awdiv@dividend:
   547                           	callstack 0
   548   0000B7                     ___awmod@dividend:
   549                           	callstack 0
   550   0000B7                     fputc@c:
   551                           	callstack 0
   552   0000B7                     strcpy@dest:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x0
   556   0000B7                     	ds	1
   557   0000B8                     UART_Write_Text@text:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x1
   561   0000B8                     	ds	1
   562   0000B9                     fputc@fp:
   563                           	callstack 0
   564   0000B9                     strcpy@src:
   565                           	callstack 0
   566   0000B9                     ___awdiv@divisor:
   567                           	callstack 0
   568   0000B9                     ___awmod@divisor:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x2
   572   0000B9                     	ds	1
   573   0000BA                     ??_strcpy:
   574   0000BA                     ??_fputc:
   575   0000BA                     UART_Write_Text@i:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x3
   579   0000BA                     	ds	1
   580   0000BB                     ___awdiv@counter:
   581                           	callstack 0
   582   0000BB                     ___awmod@counter:
   583                           	callstack 0
   584   0000BB                     strcpy@d:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x4
   588   0000BB                     	ds	1
   589   0000BC                     ___awdiv@sign:
   590                           	callstack 0
   591   0000BC                     ___awmod@sign:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x5
   595   0000BC                     	ds	1
   596   0000BD                     ?_abs:
   597                           	callstack 0
   598   0000BD                     ___awdiv@quotient:
   599                           	callstack 0
   600   0000BD                     abs@a:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x6
   604   0000BD                     	ds	2
   605   0000BF                     ??_abs:
   606                           
   607                           ; 1 bytes @ 0x8
   608   0000BF                     	ds	2
   609   0000C1                     vfpfcnvrt@fp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xA
   613   0000C1                     	ds	1
   614   0000C2                     vfpfcnvrt@fmt:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0xB
   618   0000C2                     	ds	1
   619   0000C3                     vfpfcnvrt@ap:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0xC
   623   0000C3                     	ds	1
   624   0000C4                     ??_vfpfcnvrt:
   625                           
   626                           ; 1 bytes @ 0xD
   627   0000C4                     	ds	1
   628   0000C5                     vfpfcnvrt@done:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0xE
   632   0000C5                     	ds	1
   633   0000C6                     vfpfcnvrt@cp:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0xF
   637   0000C6                     	ds	1
   638   0000C7                     vfpfcnvrt@convarg:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x10
   642   0000C7                     	ds	4
   643   0000CB                     vfpfcnvrt@c:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x14
   647   0000CB                     	ds	1
   648   0000CC                     ?_vfprintf:
   649                           	callstack 0
   650   0000CC                     vfprintf@fp:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x15
   654   0000CC                     	ds	1
   655   0000CD                     vfprintf@fmt:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x16
   659   0000CD                     	ds	1
   660   0000CE                     vfprintf@ap:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x17
   664   0000CE                     	ds	1
   665   0000CF                     vfprintf@cfmt:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x18
   669   0000CF                     	ds	1
   670   0000D0                     ?_sprintf:
   671                           	callstack 0
   672   0000D0                     sprintf@s:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x19
   676   0000D0                     	ds	2
   677   0000D2                     sprintf@fmt:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x1B
   681   0000D2                     	ds	3
   682   0000D5                     sprintf@ap:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x1E
   686   0000D5                     	ds	1
   687   0000D6                     sprintf@f:
   688                           	callstack 0
   689                           
   690                           ; 12 bytes @ 0x1F
   691   0000D6                     	ds	12
   692   0000E2                     ??_add_score:
   693                           
   694                           ; 1 bytes @ 0x2B
   695   0000E2                     	ds	2
   696   0000E4                     ??_main:
   697                           
   698                           ; 1 bytes @ 0x2D
   699   0000E4                     	ds	2
   700                           
   701                           	psect	cstackCOMRAM
   702   000001                     __pcstackCOMRAM:
   703                           	callstack 0
   704   000001                     ?i2___awdiv:
   705                           	callstack 0
   706   000001                     ?i2___awmod:
   707                           	callstack 0
   708   000001                     i2UART_Write@data:
   709                           	callstack 0
   710   000001                     i2ClearBuffer@i:
   711                           	callstack 0
   712   000001                     i2___awdiv@dividend:
   713                           	callstack 0
   714   000001                     i2___awmod@dividend:
   715                           	callstack 0
   716   000001                     i2fputc@c:
   717                           	callstack 0
   718   000001                     i2strcpy@dest:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x0
   722   000001                     	ds	1
   723   000002                     i2UART_Write_Text@text:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x1
   727   000002                     	ds	1
   728   000003                     i2fputc@fp:
   729                           	callstack 0
   730   000003                     i2strcpy@src:
   731                           	callstack 0
   732   000003                     i2___awdiv@divisor:
   733                           	callstack 0
   734   000003                     i2___awmod@divisor:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x2
   738   000003                     	ds	1
   739   000004                     ??i2_fputc:
   740   000004                     ??i2_strcpy:
   741   000004                     i2UART_Write_Text@i:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x3
   745   000004                     	ds	1
   746   000005                     i2___awdiv@counter:
   747                           	callstack 0
   748   000005                     i2___awmod@counter:
   749                           	callstack 0
   750   000005                     i2strcpy@d:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x4
   754   000005                     	ds	1
   755   000006                     i2___awdiv@sign:
   756                           	callstack 0
   757   000006                     i2___awmod@sign:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x5
   761   000006                     	ds	1
   762   000007                     ?i2_abs:
   763                           	callstack 0
   764   000007                     i2___awdiv@quotient:
   765                           	callstack 0
   766   000007                     i2abs@a:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x6
   770   000007                     	ds	2
   771   000009                     ??i2_abs:
   772                           
   773                           ; 1 bytes @ 0x8
   774   000009                     	ds	2
   775   00000B                     i2vfpfcnvrt@fp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0xA
   779   00000B                     	ds	1
   780   00000C                     i2vfpfcnvrt@fmt:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0xB
   784   00000C                     	ds	1
   785   00000D                     i2vfpfcnvrt@ap:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0xC
   789   00000D                     	ds	1
   790   00000E                     ??i2_vfpfcnvrt:
   791                           
   792                           ; 1 bytes @ 0xD
   793   00000E                     	ds	1
   794   00000F                     i2vfpfcnvrt@done:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0xE
   798   00000F                     	ds	1
   799   000010                     i2vfpfcnvrt@cp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0xF
   803   000010                     	ds	1
   804   000011                     i2vfpfcnvrt@convarg:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x10
   808   000011                     	ds	4
   809   000015                     i2vfpfcnvrt@c:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x14
   813   000015                     	ds	1
   814   000016                     ?i2_vfprintf:
   815                           	callstack 0
   816   000016                     i2vfprintf@fp:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x15
   820   000016                     	ds	1
   821   000017                     i2vfprintf@fmt:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x16
   825   000017                     	ds	1
   826   000018                     i2vfprintf@ap:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x17
   830   000018                     	ds	1
   831   000019                     i2vfprintf@cfmt:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x18
   835   000019                     	ds	1
   836   00001A                     ?i2_sprintf:
   837                           	callstack 0
   838   00001A                     i2sprintf@s:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x19
   842   00001A                     	ds	2
   843   00001C                     i2sprintf@fmt:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x1B
   847   00001C                     	ds	3
   848   00001F                     i2sprintf@ap:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x1E
   852   00001F                     	ds	1
   853   000020                     i2sprintf@f:
   854                           	callstack 0
   855                           
   856                           ; 12 bytes @ 0x1F
   857   000020                     	ds	12
   858   00002C                     ??_Hi_ISR:
   859                           
   860                           ; 1 bytes @ 0x2B
   861   00002C                     	ds	8
   862   000034                     ?i1___awmod:
   863                           	callstack 0
   864   000034                     i1UART_Write@data:
   865                           	callstack 0
   866   000034                     i1___awmod@dividend:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x33
   870   000034                     	ds	2
   871   000036                     i1___awmod@divisor:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x35
   875   000036                     	ds	2
   876   000038                     i1___awmod@counter:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x37
   880   000038                     	ds	1
   881   000039                     i1___awmod@sign:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x38
   885   000039                     	ds	1
   886   00003A                     
   887                           ; 1 bytes @ 0x39
   888   00003A                     	ds	1
   889   00003B                     ??_Lo_ISR:
   890                           
   891                           ; 1 bytes @ 0x3A
   892   00003B                     	ds	5
   893                           
   894 ;;
   895 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   896 ;;
   897 ;; *************** function _main *****************
   898 ;; Defined at:
   899 ;;		line 51 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   913 ;;      Params:         0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0
   915 ;;      Temps:          0       2       0       0       0       0       0
   916 ;;      Totals:         0       2       0       0       0       0       0
   917 ;;Total ram usage:        2 bytes
   918 ;; Hardware stack levels required when called: 15
   919 ;; This function calls:
   920 ;;		_ClearBuffer
   921 ;;		_SYSTEM_Initialize
   922 ;;		_UART_Write_Text
   923 ;;		_add_score
   924 ;;		_strcpy
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931   0006F4                     __ptext0:
   932                           	callstack 0
   933   0006F4                     _main:
   934                           	callstack 16
   935   0006F4                     
   936                           ;main.c: 54:     SYSTEM_Initialize() ;
   937   0006F4  ECDB  F00C         	call	_SYSTEM_Initialize	;wreg free
   938   0006F8                     
   939                           ;main.c: 55:     strcpy(str,"Welcome to the shooting game!\n\r");
   940   0006F8  0E00               	movlw	low _str
   941   0006FA  0100               	movlb	0	; () banked
   942   0006FC  6FB7               	movwf	strcpy@dest& (0+255),b
   943   0006FE  0E01               	movlw	high _str
   944   000700  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
   945   000702  0E80               	movlw	low STR_3
   946   000704  6FB9               	movwf	strcpy@src& (0+255),b
   947   000706  EC24  F00C         	call	_strcpy	;wreg free
   948   00070A                     
   949                           ;main.c: 56:     UART_Write_Text(str);
   950   00070A  0E00               	movlw	low _str
   951   00070C  0100               	movlb	0	; () banked
   952   00070E  6FB8               	movwf	UART_Write_Text@text& (0+255),b
   953   000710  0E01               	movlw	high _str
   954   000712  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
   955   000714  EC41  F00B         	call	_UART_Write_Text	;wreg free
   956   000718                     
   957                           ;main.c: 57:     ClearBuffer();
   958   000718  EC84  F00B         	call	_ClearBuffer	;wreg free
   959   00071C                     
   960                           ;main.c: 58:     strcpy(str,"Press the button to start shooting!\n\r");
   961   00071C  0E00               	movlw	low _str
   962   00071E  0100               	movlb	0	; () banked
   963   000720  6FB7               	movwf	strcpy@dest& (0+255),b
   964   000722  0E01               	movlw	high _str
   965   000724  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
   966   000726  0E5A               	movlw	low STR_4
   967   000728  6FB9               	movwf	strcpy@src& (0+255),b
   968   00072A  EC24  F00C         	call	_strcpy	;wreg free
   969   00072E                     
   970                           ;main.c: 59:     UART_Write_Text(str);
   971   00072E  0E00               	movlw	low _str
   972   000730  0100               	movlb	0	; () banked
   973   000732  6FB8               	movwf	UART_Write_Text@text& (0+255),b
   974   000734  0E01               	movlw	high _str
   975   000736  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
   976   000738  EC41  F00B         	call	_UART_Write_Text	;wreg free
   977   00073C                     
   978                           ;main.c: 60:     ClearBuffer();
   979   00073C  EC84  F00B         	call	_ClearBuffer	;wreg free
   980   000740                     
   981                           ;main.c: 61:     strcpy(str,"Don't forget to keep an eye on the time!\n\r");
   982   000740  0E00               	movlw	low _str
   983   000742  0100               	movlb	0	; () banked
   984   000744  6FB7               	movwf	strcpy@dest& (0+255),b
   985   000746  0E01               	movlw	high _str
   986   000748  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
   987   00074A  0E2F               	movlw	low STR_5
   988   00074C  6FB9               	movwf	strcpy@src& (0+255),b
   989   00074E  EC24  F00C         	call	_strcpy	;wreg free
   990   000752                     
   991                           ;main.c: 62:     UART_Write_Text(str);
   992   000752  0E00               	movlw	low _str
   993   000754  0100               	movlb	0	; () banked
   994   000756  6FB8               	movwf	UART_Write_Text@text& (0+255),b
   995   000758  0E01               	movlw	high _str
   996   00075A  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
   997   00075C  EC41  F00B         	call	_UART_Write_Text	;wreg free
   998   000760                     
   999                           ;main.c: 63:     ClearBuffer();
  1000   000760  EC84  F00B         	call	_ClearBuffer	;wreg free
  1001   000764                     
  1002                           ;main.c: 64:     score = 0;
  1003   000764  0E00               	movlw	0
  1004   000766  0100               	movlb	0	; () banked
  1005   000768  6FB5               	movwf	(_score+1)& (0+255),b
  1006   00076A  0E00               	movlw	0
  1007   00076C  6FB4               	movwf	_score& (0+255),b
  1008   00076E                     l2843:
  1009                           
  1010                           ;main.c: 66:         if(down == 4){
  1011   00076E  0E04               	movlw	4
  1012   000770  0100               	movlb	0	; () banked
  1013   000772  19AE               	xorwf	_down& (0+255),w,b
  1014   000774  11AF               	iorwf	(_down+1)& (0+255),w,b
  1015   000776  A4D8               	btfss	status,2,c
  1016   000778  EFC0  F003         	goto	u2241
  1017   00077C  EFC2  F003         	goto	u2240
  1018   000780                     u2241:
  1019   000780  EF21  F004         	goto	l2877
  1020   000784                     u2240:
  1021   000784                     
  1022                           ; BSR set to: 0
  1023                           ;main.c: 67:             strcpy(str,"\n\rGood Job !\n\r");
  1024   000784  0E00               	movlw	low _str
  1025   000786  6FB7               	movwf	strcpy@dest& (0+255),b
  1026   000788  0E01               	movlw	high _str
  1027   00078A  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
  1028   00078C  0EBF               	movlw	low STR_6
  1029   00078E  6FB9               	movwf	strcpy@src& (0+255),b
  1030   000790  EC24  F00C         	call	_strcpy	;wreg free
  1031   000794                     
  1032                           ;main.c: 68:             UART_Write_Text(str);
  1033   000794  0E00               	movlw	low _str
  1034   000796  0100               	movlb	0	; () banked
  1035   000798  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1036   00079A  0E01               	movlw	high _str
  1037   00079C  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1038   00079E  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1039   0007A2                     
  1040                           ;main.c: 69:             ClearBuffer();
  1041   0007A2  EC84  F00B         	call	_ClearBuffer	;wreg free
  1042                           
  1043                           ;main.c: 70:             strcpy(str,"Press the button to continue the challenge!\n\r");
  1044   0007A6  0E00               	movlw	low _str
  1045   0007A8  0100               	movlb	0	; () banked
  1046   0007AA  6FB7               	movwf	strcpy@dest& (0+255),b
  1047   0007AC  0E01               	movlw	high _str
  1048   0007AE  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
  1049   0007B0  0E01               	movlw	low STR_7
  1050   0007B2  6FB9               	movwf	strcpy@src& (0+255),b
  1051   0007B4  EC24  F00C         	call	_strcpy	;wreg free
  1052   0007B8                     
  1053                           ;main.c: 71:             UART_Write_Text(str);
  1054   0007B8  0E00               	movlw	low _str
  1055   0007BA  0100               	movlb	0	; () banked
  1056   0007BC  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1057   0007BE  0E01               	movlw	high _str
  1058   0007C0  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1059   0007C2  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1060   0007C6                     
  1061                           ;main.c: 72:             ClearBuffer();
  1062   0007C6  EC84  F00B         	call	_ClearBuffer	;wreg free
  1063                           
  1064                           ;main.c: 73:             strcpy(str,"Don't forget to keep an eye on the time!\n\r");
  1065   0007CA  0E00               	movlw	low _str
  1066   0007CC  0100               	movlb	0	; () banked
  1067   0007CE  6FB7               	movwf	strcpy@dest& (0+255),b
  1068   0007D0  0E01               	movlw	high _str
  1069   0007D2  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
  1070   0007D4  0E2F               	movlw	low STR_5
  1071   0007D6  6FB9               	movwf	strcpy@src& (0+255),b
  1072   0007D8  EC24  F00C         	call	_strcpy	;wreg free
  1073   0007DC                     
  1074                           ;main.c: 74:             UART_Write_Text(str);
  1075   0007DC  0E00               	movlw	low _str
  1076   0007DE  0100               	movlb	0	; () banked
  1077   0007E0  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1078   0007E2  0E01               	movlw	high _str
  1079   0007E4  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1080   0007E6  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1081   0007EA                     
  1082                           ;main.c: 75:             ClearBuffer();
  1083   0007EA  EC84  F00B         	call	_ClearBuffer	;wreg free
  1084   0007EE                     
  1085                           ;main.c: 76:             stop = 0;
  1086   0007EE  0E00               	movlw	0
  1087   0007F0  0100               	movlb	0	; () banked
  1088   0007F2  6FB1               	movwf	(_stop+1)& (0+255),b
  1089   0007F4  0E00               	movlw	0
  1090   0007F6  6FB0               	movwf	_stop& (0+255),b
  1091   0007F8                     
  1092                           ; BSR set to: 0
  1093                           ;main.c: 77:             down = 0;
  1094   0007F8  0E00               	movlw	0
  1095   0007FA  6FAF               	movwf	(_down+1)& (0+255),b
  1096   0007FC  0E00               	movlw	0
  1097   0007FE  6FAE               	movwf	_down& (0+255),b
  1098   000800                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 78:             ready = 0;
  1101   000800  0E00               	movlw	0
  1102   000802  6FA5               	movwf	(_ready+1)& (0+255),b
  1103   000804  0E00               	movlw	0
  1104   000806  6FA4               	movwf	_ready& (0+255),b
  1105   000808                     
  1106                           ; BSR set to: 0
  1107                           ;main.c: 79:             button = 1;
  1108   000808  0E00               	movlw	0
  1109   00080A  6E47               	movwf	(_button+1)^0,c
  1110   00080C  0E01               	movlw	1
  1111   00080E  6E46               	movwf	_button^0,c
  1112   000810                     
  1113                           ; BSR set to: 0
  1114                           ;main.c: 80:             LATDbits.LD1 = 0;
  1115   000810  928C               	bcf	140,1,c	;volatile
  1116   000812                     
  1117                           ; BSR set to: 0
  1118                           ;main.c: 81:              _delay((unsigned long)((5000)*(1000000/4000.0)));
  1119   000812  0E07               	movlw	7
  1120   000814  0100               	movlb	0	; () banked
  1121   000816  6FE5               	movwf	(??_main+1)& (0+255),b
  1122   000818  0E58               	movlw	88
  1123   00081A  6FE4               	movwf	??_main& (0+255),b
  1124   00081C  0E59               	movlw	89
  1125   00081E                     u2437:
  1126   00081E  2EE8               	decfsz	wreg,f,c
  1127   000820  D7FE               	bra	u2437
  1128   000822  2FE4               	decfsz	??_main& (0+255),f,b
  1129   000824  D7FC               	bra	u2437
  1130   000826  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1131   000828  D7FA               	bra	u2437
  1132   00082A  D000               	nop2	
  1133   00082C                     
  1134                           ;main.c: 82:             LATDbits.LD0 = 1;
  1135   00082C  808C               	bsf	140,0,c	;volatile
  1136   00082E                     
  1137                           ;main.c: 83:             _delay((unsigned long)((100)*(1000000/4000.0)));
  1138   00082E  0E21               	movlw	33
  1139   000830  0100               	movlb	0	; () banked
  1140   000832  6FE4               	movwf	??_main& (0+255),b
  1141   000834  0E76               	movlw	118
  1142   000836                     u2447:
  1143   000836  2EE8               	decfsz	wreg,f,c
  1144   000838  D7FE               	bra	u2447
  1145   00083A  2FE4               	decfsz	??_main& (0+255),f,b
  1146   00083C  D7FC               	bra	u2447
  1147   00083E  0000               	nop	
  1148   000840                     
  1149                           ;main.c: 84:             LATDbits.LD0 = 0;
  1150   000840  908C               	bcf	140,0,c	;volatile
  1151   000842                     l2877:
  1152                           
  1153                           ;main.c: 86:         if(stop == 1 && down != 4){
  1154   000842  0100               	movlb	0	; () banked
  1155   000844  05B0               	decf	_stop& (0+255),w,b
  1156   000846  11B1               	iorwf	(_stop+1)& (0+255),w,b
  1157   000848  A4D8               	btfss	status,2,c
  1158   00084A  EF29  F004         	goto	u2251
  1159   00084E  EF2B  F004         	goto	u2250
  1160   000852                     u2251:
  1161   000852  EF9C  F004         	goto	l2917
  1162   000856                     u2250:
  1163   000856                     
  1164                           ; BSR set to: 0
  1165   000856  0E04               	movlw	4
  1166   000858  19AE               	xorwf	_down& (0+255),w,b
  1167   00085A  11AF               	iorwf	(_down+1)& (0+255),w,b
  1168   00085C  B4D8               	btfsc	status,2,c
  1169   00085E  EF33  F004         	goto	u2261
  1170   000862  EF35  F004         	goto	u2260
  1171   000866                     u2261:
  1172   000866  EF9C  F004         	goto	l2917
  1173   00086A                     u2260:
  1174   00086A                     
  1175                           ; BSR set to: 0
  1176                           ;main.c: 87:             strcpy(str,"\rGame Over !\n\r");
  1177   00086A  0E00               	movlw	low _str
  1178   00086C  6FB7               	movwf	strcpy@dest& (0+255),b
  1179   00086E  0E01               	movlw	high _str
  1180   000870  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
  1181   000872  0ECE               	movlw	low STR_9
  1182   000874  6FB9               	movwf	strcpy@src& (0+255),b
  1183   000876  EC24  F00C         	call	_strcpy	;wreg free
  1184   00087A                     
  1185                           ;main.c: 88:             UART_Write_Text(str);
  1186   00087A  0E00               	movlw	low _str
  1187   00087C  0100               	movlb	0	; () banked
  1188   00087E  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1189   000880  0E01               	movlw	high _str
  1190   000882  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1191   000884  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1192   000888                     
  1193                           ;main.c: 89:             ClearBuffer();
  1194   000888  EC84  F00B         	call	_ClearBuffer	;wreg free
  1195                           
  1196                           ;main.c: 90:             strcpy(str,"Press the button to restart!\n\r");
  1197   00088C  0E00               	movlw	low _str
  1198   00088E  0100               	movlb	0	; () banked
  1199   000890  6FB7               	movwf	strcpy@dest& (0+255),b
  1200   000892  0E01               	movlw	high _str
  1201   000894  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
  1202   000896  0EA0               	movlw	low STR_10
  1203   000898  6FB9               	movwf	strcpy@src& (0+255),b
  1204   00089A  EC24  F00C         	call	_strcpy	;wreg free
  1205   00089E                     
  1206                           ;main.c: 91:             UART_Write_Text(str);
  1207   00089E  0E00               	movlw	low _str
  1208   0008A0  0100               	movlb	0	; () banked
  1209   0008A2  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1210   0008A4  0E01               	movlw	high _str
  1211   0008A6  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1212   0008A8  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1213   0008AC                     
  1214                           ;main.c: 92:             ClearBuffer();
  1215   0008AC  EC84  F00B         	call	_ClearBuffer	;wreg free
  1216                           
  1217                           ;main.c: 93:             strcpy(str,"Don't forget to keep an eye on the time!\n\r");
  1218   0008B0  0E00               	movlw	low _str
  1219   0008B2  0100               	movlb	0	; () banked
  1220   0008B4  6FB7               	movwf	strcpy@dest& (0+255),b
  1221   0008B6  0E01               	movlw	high _str
  1222   0008B8  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
  1223   0008BA  0E2F               	movlw	low STR_5
  1224   0008BC  6FB9               	movwf	strcpy@src& (0+255),b
  1225   0008BE  EC24  F00C         	call	_strcpy	;wreg free
  1226   0008C2                     
  1227                           ;main.c: 94:             UART_Write_Text(str);
  1228   0008C2  0E00               	movlw	low _str
  1229   0008C4  0100               	movlb	0	; () banked
  1230   0008C6  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1231   0008C8  0E01               	movlw	high _str
  1232   0008CA  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1233   0008CC  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1234   0008D0                     
  1235                           ;main.c: 95:             ClearBuffer();
  1236   0008D0  EC84  F00B         	call	_ClearBuffer	;wreg free
  1237   0008D4                     
  1238                           ;main.c: 96:             stop = 0;
  1239   0008D4  0E00               	movlw	0
  1240   0008D6  0100               	movlb	0	; () banked
  1241   0008D8  6FB1               	movwf	(_stop+1)& (0+255),b
  1242   0008DA  0E00               	movlw	0
  1243   0008DC  6FB0               	movwf	_stop& (0+255),b
  1244   0008DE                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 97:             down = 0;
  1247   0008DE  0E00               	movlw	0
  1248   0008E0  6FAF               	movwf	(_down+1)& (0+255),b
  1249   0008E2  0E00               	movlw	0
  1250   0008E4  6FAE               	movwf	_down& (0+255),b
  1251   0008E6                     
  1252                           ; BSR set to: 0
  1253                           ;main.c: 98:             score = 0;
  1254   0008E6  0E00               	movlw	0
  1255   0008E8  6FB5               	movwf	(_score+1)& (0+255),b
  1256   0008EA  0E00               	movlw	0
  1257   0008EC  6FB4               	movwf	_score& (0+255),b
  1258   0008EE                     
  1259                           ; BSR set to: 0
  1260                           ;main.c: 99:             state = 0;
  1261   0008EE  0E00               	movlw	0
  1262   0008F0  6FB3               	movwf	(_state+1)& (0+255),b
  1263   0008F2  0E00               	movlw	0
  1264   0008F4  6FB2               	movwf	_state& (0+255),b
  1265   0008F6                     
  1266                           ; BSR set to: 0
  1267                           ;main.c: 100:             ready = 0;
  1268   0008F6  0E00               	movlw	0
  1269   0008F8  6FA5               	movwf	(_ready+1)& (0+255),b
  1270   0008FA  0E00               	movlw	0
  1271   0008FC  6FA4               	movwf	_ready& (0+255),b
  1272   0008FE                     
  1273                           ; BSR set to: 0
  1274                           ;main.c: 101:             button = 1;
  1275   0008FE  0E00               	movlw	0
  1276   000900  6E47               	movwf	(_button+1)^0,c
  1277   000902  0E01               	movlw	1
  1278   000904  6E46               	movwf	_button^0,c
  1279   000906                     
  1280                           ; BSR set to: 0
  1281                           ;main.c: 102:             LATDbits.LD1 = 0;
  1282   000906  928C               	bcf	140,1,c	;volatile
  1283   000908                     
  1284                           ; BSR set to: 0
  1285                           ;main.c: 103:              _delay((unsigned long)((5000)*(1000000/4000.0)));
  1286   000908  0E07               	movlw	7
  1287   00090A  0100               	movlb	0	; () banked
  1288   00090C  6FE5               	movwf	(??_main+1)& (0+255),b
  1289   00090E  0E58               	movlw	88
  1290   000910  6FE4               	movwf	??_main& (0+255),b
  1291   000912  0E59               	movlw	89
  1292   000914                     u2457:
  1293   000914  2EE8               	decfsz	wreg,f,c
  1294   000916  D7FE               	bra	u2457
  1295   000918  2FE4               	decfsz	??_main& (0+255),f,b
  1296   00091A  D7FC               	bra	u2457
  1297   00091C  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1298   00091E  D7FA               	bra	u2457
  1299   000920  D000               	nop2	
  1300   000922                     
  1301                           ;main.c: 104:             LATDbits.LD0 = 1;
  1302   000922  808C               	bsf	140,0,c	;volatile
  1303   000924                     
  1304                           ;main.c: 105:             _delay((unsigned long)((100)*(1000000/4000.0)));
  1305   000924  0E21               	movlw	33
  1306   000926  0100               	movlb	0	; () banked
  1307   000928  6FE4               	movwf	??_main& (0+255),b
  1308   00092A  0E76               	movlw	118
  1309   00092C                     u2467:
  1310   00092C  2EE8               	decfsz	wreg,f,c
  1311   00092E  D7FE               	bra	u2467
  1312   000930  2FE4               	decfsz	??_main& (0+255),f,b
  1313   000932  D7FC               	bra	u2467
  1314   000934  0000               	nop	
  1315   000936                     
  1316                           ;main.c: 106:             LATDbits.LD0 = 0;
  1317   000936  908C               	bcf	140,0,c	;volatile
  1318   000938                     l2917:
  1319                           
  1320                           ;main.c: 112:         if(PORTAbits.RA0 == 0 && stop == 0 && d1 == 0 && ready==1){
  1321   000938  B080               	btfsc	128,0,c	;volatile
  1322   00093A  EFA1  F004         	goto	u2271
  1323   00093E  EFA3  F004         	goto	u2270
  1324   000942                     u2271:
  1325   000942  EFC7  F004         	goto	l2931
  1326   000946                     u2270:
  1327   000946  0100               	movlb	0	; () banked
  1328   000948  51B0               	movf	_stop& (0+255),w,b
  1329   00094A  11B1               	iorwf	(_stop+1)& (0+255),w,b
  1330   00094C  A4D8               	btfss	status,2,c
  1331   00094E  EFAB  F004         	goto	u2281
  1332   000952  EFAD  F004         	goto	u2280
  1333   000956                     u2281:
  1334   000956  EFC7  F004         	goto	l2931
  1335   00095A                     u2280:
  1336   00095A                     
  1337                           ; BSR set to: 0
  1338   00095A  51AC               	movf	_d1& (0+255),w,b
  1339   00095C  11AD               	iorwf	(_d1+1)& (0+255),w,b
  1340   00095E  A4D8               	btfss	status,2,c
  1341   000960  EFB4  F004         	goto	u2291
  1342   000964  EFB6  F004         	goto	u2290
  1343   000968                     u2291:
  1344   000968  EFC7  F004         	goto	l2931
  1345   00096C                     u2290:
  1346   00096C                     
  1347                           ; BSR set to: 0
  1348   00096C  05A4               	decf	_ready& (0+255),w,b
  1349   00096E  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1350   000970  A4D8               	btfss	status,2,c
  1351   000972  EFBD  F004         	goto	u2301
  1352   000976  EFBF  F004         	goto	u2300
  1353   00097A                     u2301:
  1354   00097A  EFC7  F004         	goto	l2931
  1355   00097E                     u2300:
  1356   00097E                     
  1357                           ; BSR set to: 0
  1358                           ;main.c: 113:             d1 = 1;
  1359   00097E  0E00               	movlw	0
  1360   000980  6FAD               	movwf	(_d1+1)& (0+255),b
  1361   000982  0E01               	movlw	1
  1362   000984  6FAC               	movwf	_d1& (0+255),b
  1363   000986                     
  1364                           ; BSR set to: 0
  1365                           ;main.c: 114:             down ++;
  1366   000986  4BAE               	infsnz	_down& (0+255),f,b
  1367   000988  2BAF               	incf	(_down+1)& (0+255),f,b
  1368   00098A                     
  1369                           ; BSR set to: 0
  1370                           ;main.c: 115:             add_score();
  1371   00098A  ECC2  F007         	call	_add_score	;wreg free
  1372   00098E                     l2931:
  1373                           
  1374                           ;main.c: 117:          if(PORTAbits.RA1 == 0 && stop == 0 && d2 == 0 && ready==1){
  1375   00098E  B280               	btfsc	128,1,c	;volatile
  1376   000990  EFCC  F004         	goto	u2311
  1377   000994  EFCE  F004         	goto	u2310
  1378   000998                     u2311:
  1379   000998  EFF2  F004         	goto	l2945
  1380   00099C                     u2310:
  1381   00099C  0100               	movlb	0	; () banked
  1382   00099E  51B0               	movf	_stop& (0+255),w,b
  1383   0009A0  11B1               	iorwf	(_stop+1)& (0+255),w,b
  1384   0009A2  A4D8               	btfss	status,2,c
  1385   0009A4  EFD6  F004         	goto	u2321
  1386   0009A8  EFD8  F004         	goto	u2320
  1387   0009AC                     u2321:
  1388   0009AC  EFF2  F004         	goto	l2945
  1389   0009B0                     u2320:
  1390   0009B0                     
  1391                           ; BSR set to: 0
  1392   0009B0  51AA               	movf	_d2& (0+255),w,b
  1393   0009B2  11AB               	iorwf	(_d2+1)& (0+255),w,b
  1394   0009B4  A4D8               	btfss	status,2,c
  1395   0009B6  EFDF  F004         	goto	u2331
  1396   0009BA  EFE1  F004         	goto	u2330
  1397   0009BE                     u2331:
  1398   0009BE  EFF2  F004         	goto	l2945
  1399   0009C2                     u2330:
  1400   0009C2                     
  1401                           ; BSR set to: 0
  1402   0009C2  05A4               	decf	_ready& (0+255),w,b
  1403   0009C4  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1404   0009C6  A4D8               	btfss	status,2,c
  1405   0009C8  EFE8  F004         	goto	u2341
  1406   0009CC  EFEA  F004         	goto	u2340
  1407   0009D0                     u2341:
  1408   0009D0  EFF2  F004         	goto	l2945
  1409   0009D4                     u2340:
  1410   0009D4                     
  1411                           ; BSR set to: 0
  1412                           ;main.c: 118:             d2 = 1;
  1413   0009D4  0E00               	movlw	0
  1414   0009D6  6FAB               	movwf	(_d2+1)& (0+255),b
  1415   0009D8  0E01               	movlw	1
  1416   0009DA  6FAA               	movwf	_d2& (0+255),b
  1417   0009DC                     
  1418                           ; BSR set to: 0
  1419                           ;main.c: 119:             down ++;
  1420   0009DC  4BAE               	infsnz	_down& (0+255),f,b
  1421   0009DE  2BAF               	incf	(_down+1)& (0+255),f,b
  1422   0009E0                     
  1423                           ; BSR set to: 0
  1424                           ;main.c: 120:             add_score();
  1425   0009E0  ECC2  F007         	call	_add_score	;wreg free
  1426   0009E4                     l2945:
  1427                           
  1428                           ;main.c: 122:          if(PORTAbits.RA2 == 0 && stop == 0 && d3 == 0 && ready==1){
  1429   0009E4  B480               	btfsc	128,2,c	;volatile
  1430   0009E6  EFF7  F004         	goto	u2351
  1431   0009EA  EFF9  F004         	goto	u2350
  1432   0009EE                     u2351:
  1433   0009EE  EF1D  F005         	goto	l2959
  1434   0009F2                     u2350:
  1435   0009F2  0100               	movlb	0	; () banked
  1436   0009F4  51B0               	movf	_stop& (0+255),w,b
  1437   0009F6  11B1               	iorwf	(_stop+1)& (0+255),w,b
  1438   0009F8  A4D8               	btfss	status,2,c
  1439   0009FA  EF01  F005         	goto	u2361
  1440   0009FE  EF03  F005         	goto	u2360
  1441   000A02                     u2361:
  1442   000A02  EF1D  F005         	goto	l2959
  1443   000A06                     u2360:
  1444   000A06                     
  1445                           ; BSR set to: 0
  1446   000A06  51A8               	movf	_d3& (0+255),w,b
  1447   000A08  11A9               	iorwf	(_d3+1)& (0+255),w,b
  1448   000A0A  A4D8               	btfss	status,2,c
  1449   000A0C  EF0A  F005         	goto	u2371
  1450   000A10  EF0C  F005         	goto	u2370
  1451   000A14                     u2371:
  1452   000A14  EF1D  F005         	goto	l2959
  1453   000A18                     u2370:
  1454   000A18                     
  1455                           ; BSR set to: 0
  1456   000A18  05A4               	decf	_ready& (0+255),w,b
  1457   000A1A  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1458   000A1C  A4D8               	btfss	status,2,c
  1459   000A1E  EF13  F005         	goto	u2381
  1460   000A22  EF15  F005         	goto	u2380
  1461   000A26                     u2381:
  1462   000A26  EF1D  F005         	goto	l2959
  1463   000A2A                     u2380:
  1464   000A2A                     
  1465                           ; BSR set to: 0
  1466                           ;main.c: 123:             d3 = 1;
  1467   000A2A  0E00               	movlw	0
  1468   000A2C  6FA9               	movwf	(_d3+1)& (0+255),b
  1469   000A2E  0E01               	movlw	1
  1470   000A30  6FA8               	movwf	_d3& (0+255),b
  1471   000A32                     
  1472                           ; BSR set to: 0
  1473                           ;main.c: 124:             down ++;
  1474   000A32  4BAE               	infsnz	_down& (0+255),f,b
  1475   000A34  2BAF               	incf	(_down+1)& (0+255),f,b
  1476   000A36                     
  1477                           ; BSR set to: 0
  1478                           ;main.c: 125:             add_score();
  1479   000A36  ECC2  F007         	call	_add_score	;wreg free
  1480   000A3A                     l2959:
  1481                           
  1482                           ;main.c: 127:          if(PORTAbits.RA3 == 0 && stop == 0 && d4 == 0 && ready==1){
  1483   000A3A  B680               	btfsc	128,3,c	;volatile
  1484   000A3C  EF22  F005         	goto	u2391
  1485   000A40  EF24  F005         	goto	u2390
  1486   000A44                     u2391:
  1487   000A44  EFB7  F003         	goto	l2843
  1488   000A48                     u2390:
  1489   000A48  0100               	movlb	0	; () banked
  1490   000A4A  51B0               	movf	_stop& (0+255),w,b
  1491   000A4C  11B1               	iorwf	(_stop+1)& (0+255),w,b
  1492   000A4E  A4D8               	btfss	status,2,c
  1493   000A50  EF2C  F005         	goto	u2401
  1494   000A54  EF2E  F005         	goto	u2400
  1495   000A58                     u2401:
  1496   000A58  EFB7  F003         	goto	l2843
  1497   000A5C                     u2400:
  1498   000A5C                     
  1499                           ; BSR set to: 0
  1500   000A5C  51A6               	movf	_d4& (0+255),w,b
  1501   000A5E  11A7               	iorwf	(_d4+1)& (0+255),w,b
  1502   000A60  A4D8               	btfss	status,2,c
  1503   000A62  EF35  F005         	goto	u2411
  1504   000A66  EF37  F005         	goto	u2410
  1505   000A6A                     u2411:
  1506   000A6A  EFB7  F003         	goto	l2843
  1507   000A6E                     u2410:
  1508   000A6E                     
  1509                           ; BSR set to: 0
  1510   000A6E  05A4               	decf	_ready& (0+255),w,b
  1511   000A70  11A5               	iorwf	(_ready+1)& (0+255),w,b
  1512   000A72  A4D8               	btfss	status,2,c
  1513   000A74  EF3E  F005         	goto	u2421
  1514   000A78  EF40  F005         	goto	u2420
  1515   000A7C                     u2421:
  1516   000A7C  EFB7  F003         	goto	l2843
  1517   000A80                     u2420:
  1518   000A80                     
  1519                           ; BSR set to: 0
  1520                           ;main.c: 128:             d4 = 1;
  1521   000A80  0E00               	movlw	0
  1522   000A82  6FA7               	movwf	(_d4+1)& (0+255),b
  1523   000A84  0E01               	movlw	1
  1524   000A86  6FA6               	movwf	_d4& (0+255),b
  1525   000A88                     
  1526                           ; BSR set to: 0
  1527                           ;main.c: 129:             down ++;
  1528   000A88  4BAE               	infsnz	_down& (0+255),f,b
  1529   000A8A  2BAF               	incf	(_down+1)& (0+255),f,b
  1530   000A8C                     
  1531                           ; BSR set to: 0
  1532                           ;main.c: 130:             add_score();
  1533   000A8C  ECC2  F007         	call	_add_score	;wreg free
  1534   000A90  EFB7  F003         	goto	l2843
  1535   000A94  EF36  F000         	goto	start
  1536   000A98                     __end_of_main:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _add_score *****************
  1540 ;; Defined at:
  1541 ;;		line 22 in file "main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1555 ;;      Params:         0       0       0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0
  1557 ;;      Temps:          0       2       0       0       0       0       0
  1558 ;;      Totals:         0       2       0       0       0       0       0
  1559 ;;Total ram usage:        2 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 14
  1562 ;; This function calls:
  1563 ;;		_ClearBuffer
  1564 ;;		_UART_Write_Text
  1565 ;;		_sprintf
  1566 ;;		_strcpy
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text1
  1573   000F84                     __ptext1:
  1574                           	callstack 0
  1575   000F84                     _add_score:
  1576                           	callstack 16
  1577   000F84                     
  1578                           ;main.c: 23:     switch(state){
  1579   000F84  EFE0  F007         	goto	l2793
  1580   000F88                     l2779:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;main.c: 25:             score = 0;
  1584   000F88  0E00               	movlw	0
  1585   000F8A  6FB5               	movwf	(_score+1)& (0+255),b
  1586   000F8C  0E00               	movlw	0
  1587   000F8E  6FB4               	movwf	_score& (0+255),b
  1588                           
  1589                           ;main.c: 26:             break;
  1590   000F90  EF03  F008         	goto	l2795
  1591   000F94                     l2781:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 28:             score++;
  1595   000F94  4BB4               	infsnz	_score& (0+255),f,b
  1596   000F96  2BB5               	incf	(_score+1)& (0+255),f,b
  1597                           
  1598                           ;main.c: 29:             break;
  1599   000F98  EF03  F008         	goto	l2795
  1600   000F9C                     l2783:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;main.c: 31:             score += 2;
  1604   000F9C  0E02               	movlw	2
  1605   000F9E  27B4               	addwf	_score& (0+255),f,b
  1606   000FA0  0E00               	movlw	0
  1607   000FA2  23B5               	addwfc	(_score+1)& (0+255),f,b
  1608                           
  1609                           ;main.c: 32:             break;
  1610   000FA4  EF03  F008         	goto	l2795
  1611   000FA8                     l2785:
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;main.c: 34:             score += 3;
  1615   000FA8  0E03               	movlw	3
  1616   000FAA  27B4               	addwf	_score& (0+255),f,b
  1617   000FAC  0E00               	movlw	0
  1618   000FAE  23B5               	addwfc	(_score+1)& (0+255),f,b
  1619                           
  1620                           ;main.c: 35:             break;
  1621   000FB0  EF03  F008         	goto	l2795
  1622   000FB4                     l2787:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 37:             score += 4;
  1626   000FB4  0E04               	movlw	4
  1627   000FB6  27B4               	addwf	_score& (0+255),f,b
  1628   000FB8  0E00               	movlw	0
  1629   000FBA  23B5               	addwfc	(_score+1)& (0+255),f,b
  1630                           
  1631                           ;main.c: 38:             break;
  1632   000FBC  EF03  F008         	goto	l2795
  1633   000FC0                     l2793:
  1634   000FC0  C0B2  F0E2         	movff	_state,??_add_score
  1635   000FC4  C0B3  F0E3         	movff	_state+1,??_add_score+1
  1636                           
  1637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1638                           ; Switch size 1, requested type "simple"
  1639                           ; Number of cases is 1, Range of values is 0 to 0
  1640                           ; switch strategies available:
  1641                           ; Name         Instructions Cycles
  1642                           ; simple_byte            4     3 (average)
  1643                           ;	Chosen strategy is simple_byte
  1644   000FC8  0100               	movlb	0	; () banked
  1645   000FCA  51E3               	movf	(??_add_score+1)& (0+255),w,b
  1646   000FCC  0A00               	xorlw	0	; case 0
  1647   000FCE  B4D8               	btfsc	status,2,c
  1648   000FD0  EFEC  F007         	goto	l2993
  1649   000FD4  EFDA  F007         	goto	l2787
  1650   000FD8                     l2993:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 5, Range of values is 0 to 4
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte           16     9 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659   000FD8  51E2               	movf	??_add_score& (0+255),w,b
  1660   000FDA  0A00               	xorlw	0	; case 0
  1661   000FDC  B4D8               	btfsc	status,2,c
  1662   000FDE  EFC4  F007         	goto	l2779
  1663   000FE2  0A01               	xorlw	1	; case 1
  1664   000FE4  B4D8               	btfsc	status,2,c
  1665   000FE6  EFCA  F007         	goto	l2781
  1666   000FEA  0A03               	xorlw	3	; case 2
  1667   000FEC  B4D8               	btfsc	status,2,c
  1668   000FEE  EFCE  F007         	goto	l2783
  1669   000FF2  0A01               	xorlw	1	; case 3
  1670   000FF4  B4D8               	btfsc	status,2,c
  1671   000FF6  EFD4  F007         	goto	l2785
  1672   000FFA  0A07               	xorlw	7	; case 4
  1673   000FFC  B4D8               	btfsc	status,2,c
  1674   000FFE  EFDA  F007         	goto	l2787
  1675   001002  EFDA  F007         	goto	l2787
  1676   001006                     l2795:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 43:     strcpy(str,"\rscore : ");
  1680   001006  0E00               	movlw	low _str
  1681   001008  6FB7               	movwf	strcpy@dest& (0+255),b
  1682   00100A  0E01               	movlw	high _str
  1683   00100C  6FB8               	movwf	(strcpy@dest+1)& (0+255),b
  1684   00100E  0EDD               	movlw	low STR_1
  1685   001010  6FB9               	movwf	strcpy@src& (0+255),b
  1686   001012  EC24  F00C         	call	_strcpy	;wreg free
  1687   001016                     
  1688                           ;main.c: 44:     UART_Write_Text(str);
  1689   001016  0E00               	movlw	low _str
  1690   001018  0100               	movlb	0	; () banked
  1691   00101A  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1692   00101C  0E01               	movlw	high _str
  1693   00101E  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1694   001020  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1695   001024                     
  1696                           ;main.c: 45:     ClearBuffer();
  1697   001024  EC84  F00B         	call	_ClearBuffer	;wreg free
  1698   001028                     
  1699                           ;main.c: 46:     sprintf(str,"%d",score);
  1700   001028  0E00               	movlw	low _str
  1701   00102A  0100               	movlb	0	; () banked
  1702   00102C  6FD0               	movwf	sprintf@s& (0+255),b
  1703   00102E  0E01               	movlw	high _str
  1704   001030  6FD1               	movwf	(sprintf@s+1)& (0+255),b
  1705   001032  0EEF               	movlw	low STR_2
  1706   001034  6FD2               	movwf	sprintf@fmt& (0+255),b
  1707   001036  C0B4  F0D3         	movff	_score,?_sprintf+3
  1708   00103A  C0B5  F0D4         	movff	_score+1,?_sprintf+4
  1709   00103E  ECA5  F00B         	call	_sprintf	;wreg free
  1710   001042                     
  1711                           ;main.c: 47:     UART_Write_Text(str);
  1712   001042  0E00               	movlw	low _str
  1713   001044  0100               	movlb	0	; () banked
  1714   001046  6FB8               	movwf	UART_Write_Text@text& (0+255),b
  1715   001048  0E01               	movlw	high _str
  1716   00104A  6FB9               	movwf	(UART_Write_Text@text+1)& (0+255),b
  1717   00104C  EC41  F00B         	call	_UART_Write_Text	;wreg free
  1718   001050                     
  1719                           ;main.c: 48:     ClearBuffer();
  1720   001050  EC84  F00B         	call	_ClearBuffer	;wreg free
  1721   001054  0012               	return		;funcret
  1722   001056                     __end_of_add_score:
  1723                           	callstack 0
  1724                           
  1725 ;; *************** function _strcpy *****************
  1726 ;; Defined at:
  1727 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  1730 ;;		 -> str(200), 
  1731 ;;  src             1    2[BANK0 ] PTR const unsigned char 
  1732 ;;		 -> STR_13(10), STR_12(8), STR_11(43), STR_10(31), 
  1733 ;;		 -> STR_9(15), STR_8(43), STR_7(46), STR_6(15), 
  1734 ;;		 -> STR_5(43), STR_4(38), STR_3(32), STR_1(10), 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  d               2    4[BANK0 ] PTR unsigned char 
  1737 ;;		 -> str(200), 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    0[BANK0 ] PTR unsigned char 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1747 ;;      Params:         0       3       0       0       0       0       0
  1748 ;;      Locals:         0       2       0       0       0       0       0
  1749 ;;      Temps:          0       1       0       0       0       0       0
  1750 ;;      Totals:         0       6       0       0       0       0       0
  1751 ;;Total ram usage:        6 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 9
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_add_score
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text2
  1763   001848                     __ptext2:
  1764                           	callstack 0
  1765   001848                     _strcpy:
  1766                           	callstack 21
  1767   001848  C0B7  F0BB         	movff	strcpy@dest,strcpy@d
  1768   00184C  C0B8  F0BC         	movff	strcpy@dest+1,strcpy@d+1
  1769   001850                     l2081:
  1770   001850  0100               	movlb	0	; () banked
  1771   001852  2BB9               	incf	strcpy@src& (0+255),f,b
  1772   001854  05B9               	decf	strcpy@src& (0+255),w,b
  1773   001856  6FBA               	movwf	??_strcpy& (0+255),b
  1774   001858  C0BA  FFF6         	movff	??_strcpy,tblptrl
  1775   00185C                     	if	1	;There is more than 1 active tblptr byte
  1776   00185C  0E06               	movlw	high __smallconst
  1777   00185E  6EF7               	movwf	tblptrh,c
  1778   001860                     	endif
  1779   001860                     	if	0	;tblptru may be non-zero
  1780   001860                     	endif
  1781   001860                     	if	0	;tblptru may be non-zero
  1782   001860                     	endif
  1783   001860  C0BB  FFD9         	movff	strcpy@d,fsr2l
  1784   001864  C0BC  FFDA         	movff	strcpy@d+1,fsr2h
  1785   001868  4BBB               	infsnz	strcpy@d& (0+255),f,b
  1786   00186A  2BBC               	incf	(strcpy@d+1)& (0+255),f,b
  1787   00186C  0008               	tblrd		*
  1788   00186E  CFF5 FFDF          	movff	tablat,indf2
  1789   001872  50DF               	movf	indf2,w,c
  1790   001874  A4D8               	btfss	status,2,c
  1791   001876  EF3F  F00C         	goto	u1541
  1792   00187A  EF41  F00C         	goto	u1540
  1793   00187E                     u1541:
  1794   00187E  EF28  F00C         	goto	l2081
  1795   001882                     u1540:
  1796   001882                     
  1797                           ; BSR set to: 0
  1798   001882  0012               	return		;funcret
  1799   001884                     __end_of_strcpy:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _sprintf *****************
  1803 ;; Defined at:
  1804 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  s               2   25[BANK0 ] PTR unsigned char 
  1807 ;;		 -> str(200), 
  1808 ;;  fmt             1   27[BANK0 ] PTR const unsigned char 
  1809 ;;		 -> STR_14(3), STR_2(3), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  f              12   31[BANK0 ] struct _IO_FILE
  1812 ;;  ret             2    0        int 
  1813 ;;  ap              1   30[BANK0 ] PTR void [1]
  1814 ;;		 -> ?_sprintf(2), 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  2   25[BANK0 ] int 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1824 ;;      Params:         0       5       0       0       0       0       0
  1825 ;;      Locals:         0      13       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0
  1827 ;;      Totals:         0      18       0       0       0       0       0
  1828 ;;Total ram usage:       18 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 13
  1831 ;; This function calls:
  1832 ;;		_vfprintf
  1833 ;; This function is called by:
  1834 ;;		_add_score
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text3
  1839   00174A                     __ptext3:
  1840                           	callstack 0
  1841   00174A                     _sprintf:
  1842                           	callstack 16
  1843   00174A  0ED3               	movlw	low (?_sprintf+3)
  1844   00174C  0100               	movlb	0	; () banked
  1845   00174E  6FD5               	movwf	sprintf@ap& (0+255),b
  1846   001750  C0D0  F0D6         	movff	sprintf@s,sprintf@f
  1847   001754  C0D1  F0D7         	movff	sprintf@s+1,sprintf@f+1
  1848   001758                     
  1849                           ; BSR set to: 0
  1850   001758  0E00               	movlw	0
  1851   00175A  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  1852   00175C  0E00               	movlw	0
  1853   00175E  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  1854   001760                     
  1855                           ; BSR set to: 0
  1856   001760  0E00               	movlw	0
  1857   001762  6FE1               	movwf	(sprintf@f+11)& (0+255),b
  1858   001764  0E00               	movlw	0
  1859   001766  6FE0               	movwf	(sprintf@f+10)& (0+255),b
  1860   001768                     
  1861                           ; BSR set to: 0
  1862   001768  0ED6               	movlw	low sprintf@f
  1863   00176A  6FCC               	movwf	vfprintf@fp& (0+255),b
  1864   00176C  C0D2  F0CD         	movff	sprintf@fmt,vfprintf@fmt
  1865   001770  0ED5               	movlw	low sprintf@ap
  1866   001772  6FCE               	movwf	vfprintf@ap& (0+255),b
  1867   001774  EC63  F00B         	call	_vfprintf	;wreg free
  1868   001778  0100               	movlb	0	; () banked
  1869   00177A  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  1870   00177C  25D0               	addwf	sprintf@s& (0+255),w,b
  1871   00177E  6ED9               	movwf	fsr2l,c
  1872   001780  51DA               	movf	(sprintf@f+4)& (0+255),w,b
  1873   001782  21D1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1874   001784  6EDA               	movwf	fsr2h,c
  1875   001786  6ADF               	clrf	indf2,c
  1876   001788                     
  1877                           ; BSR set to: 0
  1878   001788  0012               	return		;funcret
  1879   00178A                     __end_of_sprintf:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _vfprintf *****************
  1883 ;; Defined at:
  1884 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  1887 ;;		 -> sprintf@f(12), 
  1888 ;;  fmt             1   22[BANK0 ] PTR const unsigned char 
  1889 ;;		 -> STR_14(3), STR_2(3), 
  1890 ;;  ap              1   23[BANK0 ] PTR PTR void 
  1891 ;;		 -> sprintf@ap(1), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  cfmt            1   24[BANK0 ] PTR unsigned char 
  1894 ;;		 -> STR_14(3), STR_2(3), 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2   21[BANK0 ] int 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1904 ;;      Params:         0       3       0       0       0       0       0
  1905 ;;      Locals:         0       1       0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0
  1907 ;;      Totals:         0       4       0       0       0       0       0
  1908 ;;Total ram usage:        4 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 12
  1911 ;; This function calls:
  1912 ;;		_vfpfcnvrt
  1913 ;; This function is called by:
  1914 ;;		_sprintf
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text4
  1919   0016C6                     __ptext4:
  1920                           	callstack 0
  1921   0016C6                     _vfprintf:
  1922                           	callstack 16
  1923   0016C6                     
  1924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1925   0016C6  C0CD  F0CF         	movff	vfprintf@fmt,vfprintf@cfmt
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1928   0016CA  EF70  F00B         	goto	l2695
  1929   0016CE                     l2693:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1932   0016CE  C0CC  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  1933   0016D2  0ECF               	movlw	low vfprintf@cfmt
  1934   0016D4  0100               	movlb	0	; () banked
  1935   0016D6  6FC2               	movwf	vfpfcnvrt@fmt& (0+255),b
  1936   0016D8  C0CE  F0C3         	movff	vfprintf@ap,vfpfcnvrt@ap
  1937   0016DC  EC4C  F005         	call	_vfpfcnvrt	;wreg free
  1938   0016E0                     l2695:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1941   0016E0  C0CF  FFF6         	movff	vfprintf@cfmt,tblptrl
  1942   0016E4                     	if	1	;There is more than 1 active tblptr byte
  1943   0016E4  0E06               	movlw	high __smallconst
  1944   0016E6  6EF7               	movwf	tblptrh,c
  1945   0016E8                     	endif
  1946   0016E8                     	if	0	;tblptru may be non-zero
  1947   0016E8                     	endif
  1948   0016E8                     	if	0	;tblptru may be non-zero
  1949   0016E8                     	endif
  1950   0016E8  0008               	tblrd		*
  1951   0016EA  50F5               	movf	tablat,w,c
  1952   0016EC  0900               	iorlw	0
  1953   0016EE  A4D8               	btfss	status,2,c
  1954   0016F0  EF7C  F00B         	goto	u2211
  1955   0016F4  EF7E  F00B         	goto	u2210
  1956   0016F8                     u2211:
  1957   0016F8  EF67  F00B         	goto	l2693
  1958   0016FC                     u2210:
  1959   0016FC                     
  1960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1961   0016FC  0E00               	movlw	0
  1962   0016FE  0100               	movlb	0	; () banked
  1963   001700  6FCD               	movwf	(?_vfprintf+1)& (0+255),b
  1964   001702  0E00               	movlw	0
  1965   001704  6FCC               	movwf	?_vfprintf& (0+255),b
  1966   001706                     
  1967                           ; BSR set to: 0
  1968   001706  0012               	return		;funcret
  1969   001708                     __end_of_vfprintf:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _vfpfcnvrt *****************
  1973 ;; Defined at:
  1974 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  1977 ;;		 -> sprintf@f(12), 
  1978 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  1979 ;;		 -> vfprintf@cfmt(1), 
  1980 ;;  ap              1   12[BANK0 ] PTR PTR void 
  1981 ;;		 -> sprintf@ap(1), 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  convarg         4   16[BANK0 ] struct .
  1984 ;;  c               1   20[BANK0 ] unsigned char 
  1985 ;;  cp              1   15[BANK0 ] PTR unsigned char 
  1986 ;;		 -> STR_14(3), STR_2(3), 
  1987 ;;  done            1   14[BANK0 ] _Bool 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1997 ;;      Params:         0       3       0       0       0       0       0
  1998 ;;      Locals:         0       7       0       0       0       0       0
  1999 ;;      Temps:          0       1       0       0       0       0       0
  2000 ;;      Totals:         0      11       0       0       0       0       0
  2001 ;;Total ram usage:       11 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 11
  2004 ;; This function calls:
  2005 ;;		___awdiv
  2006 ;;		___awmod
  2007 ;;		_abs
  2008 ;;		_fputc
  2009 ;; This function is called by:
  2010 ;;		_vfprintf
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text5
  2015   000A98                     __ptext5:
  2016                           	callstack 0
  2017   000A98                     _vfpfcnvrt:
  2018                           	callstack 16
  2019   000A98                     
  2020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2021   000A98  0100               	movlb	0	; () banked
  2022   000A9A  51C2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2023   000A9C  6ED9               	movwf	fsr2l,c
  2024   000A9E  6ADA               	clrf	fsr2h,c
  2025   000AA0  CFDF FFF6          	movff	indf2,tblptrl
  2026   000AA4                     	if	1	;There is more than 1 active tblptr byte
  2027   000AA4  0E06               	movlw	high __smallconst
  2028   000AA6  6EF7               	movwf	tblptrh,c
  2029   000AA8                     	endif
  2030   000AA8                     	if	0	;tblptru may be non-zero
  2031   000AA8                     	endif
  2032   000AA8                     	if	0	;tblptru may be non-zero
  2033   000AA8                     	endif
  2034   000AA8  0008               	tblrd		*
  2035   000AAA  50F5               	movf	tablat,w,c
  2036   000AAC  0A25               	xorlw	37
  2037   000AAE  A4D8               	btfss	status,2,c
  2038   000AB0  EF5C  F005         	goto	u2101
  2039   000AB4  EF5E  F005         	goto	u2100
  2040   000AB8                     u2101:
  2041   000AB8  EF1B  F006         	goto	l2681
  2042   000ABC                     u2100:
  2043   000ABC                     
  2044                           ; BSR set to: 0
  2045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2046   000ABC  51C2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2047   000ABE  6ED9               	movwf	fsr2l,c
  2048   000AC0  6ADA               	clrf	fsr2h,c
  2049   000AC2  2ADF               	incf	indf2,f,c
  2050   000AC4                     
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2053   000AC4  0E00               	movlw	0
  2054   000AC6  6FA1               	movwf	(_width+1)& (0+255),b
  2055   000AC8  0E00               	movlw	0
  2056   000ACA  6FA0               	movwf	_width& (0+255),b
  2057   000ACC  C0A0  F0B6         	movff	_width,_flags
  2058   000AD0                     
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2061   000AD0  69A2               	setf	_prec& (0+255),b
  2062   000AD2  69A3               	setf	(_prec+1)& (0+255),b
  2063   000AD4                     
  2064                           ; BSR set to: 0
  2065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2066   000AD4  51C2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2067   000AD6  6ED9               	movwf	fsr2l,c
  2068   000AD8  6ADA               	clrf	fsr2h,c
  2069   000ADA  50DF               	movf	indf2,w,c
  2070   000ADC  6FC6               	movwf	vfpfcnvrt@cp& (0+255),b
  2071   000ADE                     
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2074   000ADE  C0C6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2075   000AE2                     	if	1	;There is more than 1 active tblptr byte
  2076   000AE2  0E06               	movlw	high __smallconst
  2077   000AE4  6EF7               	movwf	tblptrh,c
  2078   000AE6                     	endif
  2079   000AE6                     	if	0	;tblptru may be non-zero
  2080   000AE6                     	endif
  2081   000AE6                     	if	0	;tblptru may be non-zero
  2082   000AE6                     	endif
  2083   000AE6  0008               	tblrd		*
  2084   000AE8  50F5               	movf	tablat,w,c
  2085   000AEA  0A64               	xorlw	100
  2086   000AEC  B4D8               	btfsc	status,2,c
  2087   000AEE  EF7B  F005         	goto	u2111
  2088   000AF2  EF7D  F005         	goto	u2110
  2089   000AF6                     u2111:
  2090   000AF6  EF8B  F005         	goto	l2651
  2091   000AFA                     u2110:
  2092   000AFA                     
  2093                           ; BSR set to: 0
  2094   000AFA  C0C6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2095   000AFE                     	if	1	;There is more than 1 active tblptr byte
  2096   000AFE  0E06               	movlw	high __smallconst
  2097   000B00  6EF7               	movwf	tblptrh,c
  2098   000B02                     	endif
  2099   000B02                     	if	0	;tblptru may be non-zero
  2100   000B02                     	endif
  2101   000B02                     	if	0	;tblptru may be non-zero
  2102   000B02                     	endif
  2103   000B02  0008               	tblrd		*
  2104   000B04  50F5               	movf	tablat,w,c
  2105   000B06  0A69               	xorlw	105
  2106   000B08  A4D8               	btfss	status,2,c
  2107   000B0A  EF89  F005         	goto	u2121
  2108   000B0E  EF8B  F005         	goto	u2120
  2109   000B12                     u2121:
  2110   000B12  EF14  F006         	goto	l2677
  2111   000B16                     u2120:
  2112   000B16                     l2651:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2116   000B16  51C3               	movf	vfpfcnvrt@ap& (0+255),w,b
  2117   000B18  6ED9               	movwf	fsr2l,c
  2118   000B1A  6ADA               	clrf	fsr2h,c
  2119   000B1C  0E02               	movlw	2
  2120   000B1E  26DF               	addwf	indf2,f,c
  2121   000B20  5CDF               	subwf	indf2,w,c
  2122   000B22  6ED9               	movwf	fsr2l,c
  2123   000B24  6ADA               	clrf	fsr2h,c
  2124   000B26  CFDE F0C7          	movff	postinc2,vfpfcnvrt@convarg
  2125   000B2A  CFDE F0C8          	movff	postinc2,vfpfcnvrt@convarg+1
  2126   000B2E                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2129   000B2E  51C2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2130   000B30  6ED9               	movwf	fsr2l,c
  2131   000B32  6ADA               	clrf	fsr2h,c
  2132   000B34  29C6               	incf	vfpfcnvrt@cp& (0+255),w,b
  2133   000B36  6EDF               	movwf	indf2,c
  2134   000B38                     
  2135                           ; BSR set to: 0
  2136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2137   000B38  0E20               	movlw	32
  2138   000B3A  6FCB               	movwf	vfpfcnvrt@c& (0+255),b
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2141   000B3C  BFC8               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2142   000B3E  EFA3  F005         	goto	u2131
  2143   000B42  EFA6  F005         	goto	u2130
  2144   000B46                     u2131:
  2145   000B46  0E01               	movlw	1
  2146   000B48  EFA7  F005         	goto	u2140
  2147   000B4C                     u2130:
  2148   000B4C  0E00               	movlw	0
  2149   000B4E                     u2140:
  2150   000B4E  6FC5               	movwf	vfpfcnvrt@done& (0+255),b
  2151   000B50                     l2657:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2155   000B50  07CB               	decf	vfpfcnvrt@c& (0+255),f,b
  2156   000B52  51CB               	movf	vfpfcnvrt@c& (0+255),w,b
  2157   000B54  0F80               	addlw	low _dbuf
  2158   000B56  6ED9               	movwf	fsr2l,c
  2159   000B58  6ADA               	clrf	fsr2h,c
  2160   000B5A  C0C7  F0B7         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2161   000B5E  C0C8  F0B8         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2162   000B62  0E00               	movlw	0
  2163   000B64  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  2164   000B66  0E0A               	movlw	10
  2165   000B68  6FB9               	movwf	___awmod@divisor& (0+255),b
  2166   000B6A  ECAB  F009         	call	___awmod	;wreg free
  2167   000B6E  C0B7  F0BD         	movff	?___awmod,abs@a
  2168   000B72  C0B8  F0BE         	movff	?___awmod+1,abs@a+1
  2169   000B76  EC7D  F00C         	call	_abs	;wreg free
  2170   000B7A  0100               	movlb	0	; () banked
  2171   000B7C  51BD               	movf	?_abs& (0+255),w,b
  2172   000B7E  0F30               	addlw	48
  2173   000B80  6EDF               	movwf	indf2,c
  2174   000B82                     
  2175                           ; BSR set to: 0
  2176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2177   000B82  C0C7  F0B7         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2178   000B86  C0C8  F0B8         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2179   000B8A  0E00               	movlw	0
  2180   000B8C  6FBA               	movwf	(___awdiv@divisor+1)& (0+255),b
  2181   000B8E  0E0A               	movlw	10
  2182   000B90  6FB9               	movwf	___awdiv@divisor& (0+255),b
  2183   000B92  EC2B  F008         	call	___awdiv	;wreg free
  2184   000B96  C0B7  F0C7         	movff	?___awdiv,vfpfcnvrt@convarg
  2185   000B9A  C0B8  F0C8         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2186   000B9E                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2188   000B9E  0100               	movlb	0	; () banked
  2189   000BA0  51C7               	movf	vfpfcnvrt@convarg& (0+255),w,b
  2190   000BA2  11C8               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  2191   000BA4  B4D8               	btfsc	status,2,c
  2192   000BA6  EFD7  F005         	goto	u2151
  2193   000BAA  EFD9  F005         	goto	u2150
  2194   000BAE                     u2151:
  2195   000BAE  EFE1  F005         	goto	l2665
  2196   000BB2                     u2150:
  2197   000BB2                     
  2198                           ; BSR set to: 0
  2199   000BB2  51CB               	movf	vfpfcnvrt@c& (0+255),w,b
  2200   000BB4  A4D8               	btfss	status,2,c
  2201   000BB6  EFDF  F005         	goto	u2161
  2202   000BBA  EFE1  F005         	goto	u2160
  2203   000BBE                     u2161:
  2204   000BBE  EFA8  F005         	goto	l2657
  2205   000BC2                     u2160:
  2206   000BC2                     l2665:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2210   000BC2  51CB               	movf	vfpfcnvrt@c& (0+255),w,b
  2211   000BC4  B4D8               	btfsc	status,2,c
  2212   000BC6  EFE7  F005         	goto	u2171
  2213   000BCA  EFE9  F005         	goto	u2170
  2214   000BCE                     u2171:
  2215   000BCE  EF09  F006         	goto	l2675
  2216   000BD2                     u2170:
  2217   000BD2                     
  2218                           ; BSR set to: 0
  2219   000BD2  51C5               	movf	vfpfcnvrt@done& (0+255),w,b
  2220   000BD4  B4D8               	btfsc	status,2,c
  2221   000BD6  EFEF  F005         	goto	u2181
  2222   000BDA  EFF1  F005         	goto	u2180
  2223   000BDE                     u2181:
  2224   000BDE  EF09  F006         	goto	l2675
  2225   000BE2                     u2180:
  2226   000BE2                     
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2229   000BE2  07CB               	decf	vfpfcnvrt@c& (0+255),f,b
  2230   000BE4  51CB               	movf	vfpfcnvrt@c& (0+255),w,b
  2231   000BE6  0F80               	addlw	low _dbuf
  2232   000BE8  6ED9               	movwf	fsr2l,c
  2233   000BEA  6ADA               	clrf	fsr2h,c
  2234   000BEC  0E2D               	movlw	45
  2235   000BEE  6EDF               	movwf	indf2,c
  2236   000BF0  EF09  F006         	goto	l2675
  2237   000BF4                     l2671:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2241   000BF4  51CB               	movf	vfpfcnvrt@c& (0+255),w,b
  2242   000BF6  0F80               	addlw	low _dbuf
  2243   000BF8  6ED9               	movwf	fsr2l,c
  2244   000BFA  6ADA               	clrf	fsr2h,c
  2245   000BFC  50DF               	movf	indf2,w,c
  2246   000BFE  6FC4               	movwf	??_vfpfcnvrt& (0+255),b
  2247   000C00  51C4               	movf	??_vfpfcnvrt& (0+255),w,b
  2248   000C02  6FB7               	movwf	fputc@c& (0+255),b
  2249   000C04  6BB8               	clrf	(fputc@c+1)& (0+255),b
  2250   000C06  C0C1  F0B9         	movff	vfpfcnvrt@fp,fputc@fp
  2251   000C0A  ECF0  F008         	call	_fputc	;wreg free
  2252   000C0E  0100               	movlb	0	; () banked
  2253   000C10  2BCB               	incf	vfpfcnvrt@c& (0+255),f,b
  2254   000C12                     l2675:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2258   000C12  0E20               	movlw	32
  2259   000C14  19CB               	xorwf	vfpfcnvrt@c& (0+255),w,b
  2260   000C16  A4D8               	btfss	status,2,c
  2261   000C18  EF10  F006         	goto	u2191
  2262   000C1C  EF12  F006         	goto	u2190
  2263   000C20                     u2191:
  2264   000C20  EFFA  F005         	goto	l2671
  2265   000C24                     u2190:
  2266   000C24  EF2C  F006         	goto	l939
  2267   000C28                     l2677:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2270   000C28  0100               	movlb	0	; () banked
  2271   000C2A  51C2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2272   000C2C  6ED9               	movwf	fsr2l,c
  2273   000C2E  6ADA               	clrf	fsr2h,c
  2274   000C30  2ADF               	incf	indf2,f,c
  2275   000C32  EF2C  F006         	goto	l939
  2276   000C36                     l2681:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2280   000C36  51C2               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2281   000C38  6ED9               	movwf	fsr2l,c
  2282   000C3A  6ADA               	clrf	fsr2h,c
  2283   000C3C  CFDF FFF6          	movff	indf2,tblptrl
  2284   000C40                     	if	1	;There is more than 1 active tblptr byte
  2285   000C40  0E06               	movlw	high __smallconst
  2286   000C42  6EF7               	movwf	tblptrh,c
  2287   000C44                     	endif
  2288   000C44                     	if	0	;tblptru may be non-zero
  2289   000C44                     	endif
  2290   000C44                     	if	0	;tblptru may be non-zero
  2291   000C44                     	endif
  2292   000C44  0008               	tblrd		*
  2293   000C46  50F5               	movf	tablat,w,c
  2294   000C48  6FB7               	movwf	fputc@c& (0+255),b
  2295   000C4A  6BB8               	clrf	(fputc@c+1)& (0+255),b
  2296   000C4C  C0C1  F0B9         	movff	vfpfcnvrt@fp,fputc@fp
  2297   000C50  ECF0  F008         	call	_fputc	;wreg free
  2298   000C54  EF14  F006         	goto	l2677
  2299   000C58                     l939:
  2300                           
  2301                           ; BSR set to: 0
  2302   000C58  0012               	return		;funcret
  2303   000C5A                     __end_of_vfpfcnvrt:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _fputc *****************
  2307 ;; Defined at:
  2308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  c               2    0[BANK0 ] int 
  2311 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  2312 ;;		 -> sprintf@f(12), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2    0[BANK0 ] int 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         0       3       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0
  2326 ;;      Temps:          0       5       0       0       0       0       0
  2327 ;;      Totals:         0       8       0       0       0       0       0
  2328 ;;Total ram usage:        8 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 10
  2331 ;; This function calls:
  2332 ;;		_putch
  2333 ;; This function is called by:
  2334 ;;		_vfpfcnvrt
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text6
  2339   0011E0                     __ptext6:
  2340                           	callstack 0
  2341   0011E0                     _fputc:
  2342                           	callstack 16
  2343   0011E0  0100               	movlb	0	; () banked
  2344   0011E2  51B9               	movf	fputc@fp& (0+255),w,b
  2345   0011E4  B4D8               	btfsc	status,2,c
  2346   0011E6  EFF7  F008         	goto	u2061
  2347   0011EA  EFF9  F008         	goto	u2060
  2348   0011EE                     u2061:
  2349   0011EE  EF01  F009         	goto	l2627
  2350   0011F2                     u2060:
  2351   0011F2                     
  2352                           ; BSR set to: 0
  2353   0011F2  51B9               	movf	fputc@fp& (0+255),w,b
  2354   0011F4  A4D8               	btfss	status,2,c
  2355   0011F6  EFFF  F008         	goto	u2071
  2356   0011FA  EF01  F009         	goto	u2070
  2357   0011FE                     u2071:
  2358   0011FE  EF06  F009         	goto	l2629
  2359   001202                     u2070:
  2360   001202                     l2627:
  2361                           
  2362                           ; BSR set to: 0
  2363   001202  51B7               	movf	fputc@c& (0+255),w,b
  2364   001204  EC0D  F00D         	call	_putch
  2365   001208  EF4D  F009         	goto	l964
  2366   00120C                     l2629:
  2367                           
  2368                           ; BSR set to: 0
  2369   00120C  51B9               	movf	fputc@fp& (0+255),w,b
  2370   00120E  6ED9               	movwf	fsr2l,c
  2371   001210  6ADA               	clrf	fsr2h,c
  2372   001212  0E0A               	movlw	10
  2373   001214  26D9               	addwf	fsr2l,f,c
  2374   001216  50DE               	movf	postinc2,w,c
  2375   001218  10DE               	iorwf	postinc2,w,c
  2376   00121A  B4D8               	btfsc	status,2,c
  2377   00121C  EF12  F009         	goto	u2081
  2378   001220  EF14  F009         	goto	u2080
  2379   001224                     u2081:
  2380   001224  EF2D  F009         	goto	l2633
  2381   001228                     u2080:
  2382   001228                     
  2383                           ; BSR set to: 0
  2384   001228  51B9               	movf	fputc@fp& (0+255),w,b
  2385   00122A  6ED9               	movwf	fsr2l,c
  2386   00122C  6ADA               	clrf	fsr2h,c
  2387   00122E  0E0A               	movlw	10
  2388   001230  26D9               	addwf	fsr2l,f,c
  2389   001232  51B9               	movf	fputc@fp& (0+255),w,b
  2390   001234  6EE1               	movwf	fsr1l,c
  2391   001236  6AE2               	clrf	fsr1h,c
  2392   001238  0E03               	movlw	3
  2393   00123A  26E1               	addwf	fsr1l,f,c
  2394   00123C  50DE               	movf	postinc2,w,c
  2395   00123E  5CE6               	subwf	postinc1,w,c
  2396   001240  50E6               	movf	postinc1,w,c
  2397   001242  0A80               	xorlw	128
  2398   001244  6FBE               	movwf	(??_fputc+4)& (0+255),b
  2399   001246  50DE               	movf	postinc2,w,c
  2400   001248  0A80               	xorlw	128
  2401   00124A  59BE               	subwfb	(??_fputc+4)& (0+255),w,b
  2402   00124C  B0D8               	btfsc	status,0,c
  2403   00124E  EF2B  F009         	goto	u2091
  2404   001252  EF2D  F009         	goto	u2090
  2405   001256                     u2091:
  2406   001256  EF4D  F009         	goto	l964
  2407   00125A                     u2090:
  2408   00125A                     l2633:
  2409                           
  2410                           ; BSR set to: 0
  2411   00125A  51B9               	movf	fputc@fp& (0+255),w,b
  2412   00125C  6ED9               	movwf	fsr2l,c
  2413   00125E  6ADA               	clrf	fsr2h,c
  2414   001260  0E03               	movlw	3
  2415   001262  26D9               	addwf	fsr2l,f,c
  2416   001264  CFDE F0BA          	movff	postinc2,??_fputc
  2417   001268  CFDD F0BB          	movff	postdec2,??_fputc+1
  2418   00126C  51B9               	movf	fputc@fp& (0+255),w,b
  2419   00126E  6ED9               	movwf	fsr2l,c
  2420   001270  6ADA               	clrf	fsr2h,c
  2421   001272  CFDE F0BC          	movff	postinc2,??_fputc+2
  2422   001276  CFDD F0BD          	movff	postdec2,??_fputc+3
  2423   00127A  51BA               	movf	??_fputc& (0+255),w,b
  2424   00127C  25BC               	addwf	(??_fputc+2)& (0+255),w,b
  2425   00127E  6ED9               	movwf	fsr2l,c
  2426   001280  51BB               	movf	(??_fputc+1)& (0+255),w,b
  2427   001282  21BD               	addwfc	(??_fputc+3)& (0+255),w,b
  2428   001284  6EDA               	movwf	fsr2h,c
  2429   001286  C0B7  FFDF         	movff	fputc@c,indf2
  2430   00128A  51B9               	movf	fputc@fp& (0+255),w,b
  2431   00128C  6ED9               	movwf	fsr2l,c
  2432   00128E  6ADA               	clrf	fsr2h,c
  2433   001290  0E03               	movlw	3
  2434   001292  26D9               	addwf	fsr2l,f,c
  2435   001294  2ADE               	incf	postinc2,f,c
  2436   001296  0E00               	movlw	0
  2437   001298  22DD               	addwfc	postdec2,f,c
  2438   00129A                     l964:
  2439   00129A  0012               	return		;funcret
  2440   00129C                     __end_of_fputc:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function _putch *****************
  2444 ;; Defined at:
  2445 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  c               1    wreg     unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  c               1    0[COMRAM] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2459 ;;      Params:         0       0       0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 9
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_fputc
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text7
  2474   001A1A                     __ptext7:
  2475                           	callstack 0
  2476   001A1A                     _putch:
  2477                           	callstack 16
  2478   001A1A  0012               	return		;funcret
  2479   001A1C                     __end_of_putch:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _abs *****************
  2483 ;; Defined at:
  2484 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  a               2    6[BANK0 ] int 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2    6[BANK0 ] int 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2498 ;;      Params:         0       2       0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0
  2500 ;;      Temps:          0       2       0       0       0       0       0
  2501 ;;      Totals:         0       4       0       0       0       0       0
  2502 ;;Total ram usage:        4 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 9
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_vfpfcnvrt
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text8
  2513   0018FA                     __ptext8:
  2514                           	callstack 0
  2515   0018FA                     _abs:
  2516                           	callstack 17
  2517   0018FA  0100               	movlb	0	; () banked
  2518   0018FC  BFBE               	btfsc	(abs@a+1)& (0+255),7,b
  2519   0018FE  EF83  F00C         	goto	u1141
  2520   001902  EF85  F00C         	goto	u1140
  2521   001906                     u1141:
  2522   001906  EF8B  F00C         	goto	l949
  2523   00190A                     u1140:
  2524   00190A                     
  2525                           ; BSR set to: 0
  2526   00190A  C0BD  F0BD         	movff	abs@a,?_abs
  2527   00190E  C0BE  F0BE         	movff	abs@a+1,?_abs+1
  2528   001912  EF97  F00C         	goto	l952
  2529   001916                     l949:
  2530                           
  2531                           ; BSR set to: 0
  2532   001916  C0BD  F0BF         	movff	abs@a,??_abs
  2533   00191A  C0BE  F0C0         	movff	abs@a+1,??_abs+1
  2534   00191E  1FBF               	comf	??_abs& (0+255),f,b
  2535   001920  1FC0               	comf	(??_abs+1)& (0+255),f,b
  2536   001922  4BBF               	infsnz	??_abs& (0+255),f,b
  2537   001924  2BC0               	incf	(??_abs+1)& (0+255),f,b
  2538   001926  C0BF  F0BD         	movff	??_abs,?_abs
  2539   00192A  C0C0  F0BE         	movff	??_abs+1,?_abs+1
  2540   00192E                     l952:
  2541                           
  2542                           ; BSR set to: 0
  2543   00192E  0012               	return		;funcret
  2544   001930                     __end_of_abs:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function ___awmod *****************
  2548 ;; Defined at:
  2549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  dividend        2    0[BANK0 ] int 
  2552 ;;  divisor         2    2[BANK0 ] int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  sign            1    5[BANK0 ] unsigned char 
  2555 ;;  counter         1    4[BANK0 ] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2    0[BANK0 ] int 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2565 ;;      Params:         0       4       0       0       0       0       0
  2566 ;;      Locals:         0       2       0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0
  2568 ;;      Totals:         0       6       0       0       0       0       0
  2569 ;;Total ram usage:        6 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 9
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_vfpfcnvrt
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text9
  2580   001356                     __ptext9:
  2581                           	callstack 0
  2582   001356                     ___awmod:
  2583                           	callstack 17
  2584   001356  0E00               	movlw	0
  2585   001358  0100               	movlb	0	; () banked
  2586   00135A  6FBC               	movwf	___awmod@sign& (0+255),b
  2587   00135C                     
  2588                           ; BSR set to: 0
  2589   00135C  BFB8               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2590   00135E  EFB5  F009         	goto	u2000
  2591   001362  EFB3  F009         	goto	u2001
  2592   001366                     u2001:
  2593   001366  EFBB  F009         	goto	l2595
  2594   00136A                     u2000:
  2595   00136A                     
  2596                           ; BSR set to: 0
  2597   00136A  6DB7               	negf	___awmod@dividend& (0+255),b
  2598   00136C  1FB8               	comf	(___awmod@dividend+1)& (0+255),f,b
  2599   00136E  B0D8               	btfsc	status,0,c
  2600   001370  2BB8               	incf	(___awmod@dividend+1)& (0+255),f,b
  2601   001372                     
  2602                           ; BSR set to: 0
  2603   001372  0E01               	movlw	1
  2604   001374  6FBC               	movwf	___awmod@sign& (0+255),b
  2605   001376                     l2595:
  2606                           
  2607                           ; BSR set to: 0
  2608   001376  BFBA               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2609   001378  EFC2  F009         	goto	u2010
  2610   00137C  EFC0  F009         	goto	u2011
  2611   001380                     u2011:
  2612   001380  EFC6  F009         	goto	l2599
  2613   001384                     u2010:
  2614   001384                     
  2615                           ; BSR set to: 0
  2616   001384  6DB9               	negf	___awmod@divisor& (0+255),b
  2617   001386  1FBA               	comf	(___awmod@divisor+1)& (0+255),f,b
  2618   001388  B0D8               	btfsc	status,0,c
  2619   00138A  2BBA               	incf	(___awmod@divisor+1)& (0+255),f,b
  2620   00138C                     l2599:
  2621                           
  2622                           ; BSR set to: 0
  2623   00138C  51B9               	movf	___awmod@divisor& (0+255),w,b
  2624   00138E  11BA               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2625   001390  B4D8               	btfsc	status,2,c
  2626   001392  EFCD  F009         	goto	u2021
  2627   001396  EFCF  F009         	goto	u2020
  2628   00139A                     u2021:
  2629   00139A  EFF3  F009         	goto	l2615
  2630   00139E                     u2020:
  2631   00139E                     
  2632                           ; BSR set to: 0
  2633   00139E  0E01               	movlw	1
  2634   0013A0  6FBB               	movwf	___awmod@counter& (0+255),b
  2635   0013A2  EFD7  F009         	goto	l2605
  2636   0013A6                     l2603:
  2637                           
  2638                           ; BSR set to: 0
  2639   0013A6  90D8               	bcf	status,0,c
  2640   0013A8  37B9               	rlcf	___awmod@divisor& (0+255),f,b
  2641   0013AA  37BA               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2642   0013AC  2BBB               	incf	___awmod@counter& (0+255),f,b
  2643   0013AE                     l2605:
  2644                           
  2645                           ; BSR set to: 0
  2646   0013AE  AFBA               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2647   0013B0  EFDC  F009         	goto	u2031
  2648   0013B4  EFDE  F009         	goto	u2030
  2649   0013B8                     u2031:
  2650   0013B8  EFD3  F009         	goto	l2603
  2651   0013BC                     u2030:
  2652   0013BC                     l2607:
  2653                           
  2654                           ; BSR set to: 0
  2655   0013BC  51B9               	movf	___awmod@divisor& (0+255),w,b
  2656   0013BE  5DB7               	subwf	___awmod@dividend& (0+255),w,b
  2657   0013C0  51BA               	movf	(___awmod@divisor+1)& (0+255),w,b
  2658   0013C2  59B8               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2659   0013C4  A0D8               	btfss	status,0,c
  2660   0013C6  EFE7  F009         	goto	u2041
  2661   0013CA  EFE9  F009         	goto	u2040
  2662   0013CE                     u2041:
  2663   0013CE  EFED  F009         	goto	l2611
  2664   0013D2                     u2040:
  2665   0013D2                     
  2666                           ; BSR set to: 0
  2667   0013D2  51B9               	movf	___awmod@divisor& (0+255),w,b
  2668   0013D4  5FB7               	subwf	___awmod@dividend& (0+255),f,b
  2669   0013D6  51BA               	movf	(___awmod@divisor+1)& (0+255),w,b
  2670   0013D8  5BB8               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2671   0013DA                     l2611:
  2672                           
  2673                           ; BSR set to: 0
  2674   0013DA  90D8               	bcf	status,0,c
  2675   0013DC  33BA               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2676   0013DE  33B9               	rrcf	___awmod@divisor& (0+255),f,b
  2677   0013E0                     
  2678                           ; BSR set to: 0
  2679   0013E0  2FBB               	decfsz	___awmod@counter& (0+255),f,b
  2680   0013E2  EFDE  F009         	goto	l2607
  2681   0013E6                     l2615:
  2682                           
  2683                           ; BSR set to: 0
  2684   0013E6  51BC               	movf	___awmod@sign& (0+255),w,b
  2685   0013E8  B4D8               	btfsc	status,2,c
  2686   0013EA  EFF9  F009         	goto	u2051
  2687   0013EE  EFFB  F009         	goto	u2050
  2688   0013F2                     u2051:
  2689   0013F2  EFFF  F009         	goto	l2619
  2690   0013F6                     u2050:
  2691   0013F6                     
  2692                           ; BSR set to: 0
  2693   0013F6  6DB7               	negf	___awmod@dividend& (0+255),b
  2694   0013F8  1FB8               	comf	(___awmod@dividend+1)& (0+255),f,b
  2695   0013FA  B0D8               	btfsc	status,0,c
  2696   0013FC  2BB8               	incf	(___awmod@dividend+1)& (0+255),f,b
  2697   0013FE                     l2619:
  2698                           
  2699                           ; BSR set to: 0
  2700   0013FE  C0B7  F0B7         	movff	___awmod@dividend,?___awmod
  2701   001402  C0B8  F0B8         	movff	___awmod@dividend+1,?___awmod+1
  2702   001406                     
  2703                           ; BSR set to: 0
  2704   001406  0012               	return		;funcret
  2705   001408                     __end_of___awmod:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function ___awdiv *****************
  2709 ;; Defined at:
  2710 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  dividend        2    0[BANK0 ] int 
  2713 ;;  divisor         2    2[BANK0 ] int 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  quotient        2    6[BANK0 ] int 
  2716 ;;  sign            1    5[BANK0 ] unsigned char 
  2717 ;;  counter         1    4[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2    0[BANK0 ] int 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2727 ;;      Params:         0       4       0       0       0       0       0
  2728 ;;      Locals:         0       4       0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0
  2730 ;;      Totals:         0       8       0       0       0       0       0
  2731 ;;Total ram usage:        8 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 9
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_vfpfcnvrt
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text10
  2742   001056                     __ptext10:
  2743                           	callstack 0
  2744   001056                     ___awdiv:
  2745                           	callstack 17
  2746   001056  0E00               	movlw	0
  2747   001058  0100               	movlb	0	; () banked
  2748   00105A  6FBC               	movwf	___awdiv@sign& (0+255),b
  2749   00105C                     
  2750                           ; BSR set to: 0
  2751   00105C  BFBA               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2752   00105E  EF35  F008         	goto	u1940
  2753   001062  EF33  F008         	goto	u1941
  2754   001066                     u1941:
  2755   001066  EF3B  F008         	goto	l2551
  2756   00106A                     u1940:
  2757   00106A                     
  2758                           ; BSR set to: 0
  2759   00106A  6DB9               	negf	___awdiv@divisor& (0+255),b
  2760   00106C  1FBA               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2761   00106E  B0D8               	btfsc	status,0,c
  2762   001070  2BBA               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2763   001072                     
  2764                           ; BSR set to: 0
  2765   001072  0E01               	movlw	1
  2766   001074  6FBC               	movwf	___awdiv@sign& (0+255),b
  2767   001076                     l2551:
  2768                           
  2769                           ; BSR set to: 0
  2770   001076  BFB8               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2771   001078  EF42  F008         	goto	u1950
  2772   00107C  EF40  F008         	goto	u1951
  2773   001080                     u1951:
  2774   001080  EF48  F008         	goto	l2557
  2775   001084                     u1950:
  2776   001084                     
  2777                           ; BSR set to: 0
  2778   001084  6DB7               	negf	___awdiv@dividend& (0+255),b
  2779   001086  1FB8               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2780   001088  B0D8               	btfsc	status,0,c
  2781   00108A  2BB8               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2782   00108C                     
  2783                           ; BSR set to: 0
  2784   00108C  0E01               	movlw	1
  2785   00108E  1BBC               	xorwf	___awdiv@sign& (0+255),f,b
  2786   001090                     l2557:
  2787                           
  2788                           ; BSR set to: 0
  2789   001090  0E00               	movlw	0
  2790   001092  6FBE               	movwf	(___awdiv@quotient+1)& (0+255),b
  2791   001094  0E00               	movlw	0
  2792   001096  6FBD               	movwf	___awdiv@quotient& (0+255),b
  2793   001098                     
  2794                           ; BSR set to: 0
  2795   001098  51B9               	movf	___awdiv@divisor& (0+255),w,b
  2796   00109A  11BA               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2797   00109C  B4D8               	btfsc	status,2,c
  2798   00109E  EF53  F008         	goto	u1961
  2799   0010A2  EF55  F008         	goto	u1960
  2800   0010A6                     u1961:
  2801   0010A6  EF7D  F008         	goto	l2579
  2802   0010AA                     u1960:
  2803   0010AA                     
  2804                           ; BSR set to: 0
  2805   0010AA  0E01               	movlw	1
  2806   0010AC  6FBB               	movwf	___awdiv@counter& (0+255),b
  2807   0010AE  EF5D  F008         	goto	l2565
  2808   0010B2                     l2563:
  2809                           
  2810                           ; BSR set to: 0
  2811   0010B2  90D8               	bcf	status,0,c
  2812   0010B4  37B9               	rlcf	___awdiv@divisor& (0+255),f,b
  2813   0010B6  37BA               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2814   0010B8  2BBB               	incf	___awdiv@counter& (0+255),f,b
  2815   0010BA                     l2565:
  2816                           
  2817                           ; BSR set to: 0
  2818   0010BA  AFBA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2819   0010BC  EF62  F008         	goto	u1971
  2820   0010C0  EF64  F008         	goto	u1970
  2821   0010C4                     u1971:
  2822   0010C4  EF59  F008         	goto	l2563
  2823   0010C8                     u1970:
  2824   0010C8                     l2567:
  2825                           
  2826                           ; BSR set to: 0
  2827   0010C8  90D8               	bcf	status,0,c
  2828   0010CA  37BD               	rlcf	___awdiv@quotient& (0+255),f,b
  2829   0010CC  37BE               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2830   0010CE                     
  2831                           ; BSR set to: 0
  2832   0010CE  51B9               	movf	___awdiv@divisor& (0+255),w,b
  2833   0010D0  5DB7               	subwf	___awdiv@dividend& (0+255),w,b
  2834   0010D2  51BA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2835   0010D4  59B8               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2836   0010D6  A0D8               	btfss	status,0,c
  2837   0010D8  EF70  F008         	goto	u1981
  2838   0010DC  EF72  F008         	goto	u1980
  2839   0010E0                     u1981:
  2840   0010E0  EF77  F008         	goto	l2575
  2841   0010E4                     u1980:
  2842   0010E4                     
  2843                           ; BSR set to: 0
  2844   0010E4  51B9               	movf	___awdiv@divisor& (0+255),w,b
  2845   0010E6  5FB7               	subwf	___awdiv@dividend& (0+255),f,b
  2846   0010E8  51BA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2847   0010EA  5BB8               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2848   0010EC                     
  2849                           ; BSR set to: 0
  2850   0010EC  81BD               	bsf	___awdiv@quotient& (0+255),0,b
  2851   0010EE                     l2575:
  2852                           
  2853                           ; BSR set to: 0
  2854   0010EE  90D8               	bcf	status,0,c
  2855   0010F0  33BA               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2856   0010F2  33B9               	rrcf	___awdiv@divisor& (0+255),f,b
  2857   0010F4                     
  2858                           ; BSR set to: 0
  2859   0010F4  2FBB               	decfsz	___awdiv@counter& (0+255),f,b
  2860   0010F6  EF64  F008         	goto	l2567
  2861   0010FA                     l2579:
  2862                           
  2863                           ; BSR set to: 0
  2864   0010FA  51BC               	movf	___awdiv@sign& (0+255),w,b
  2865   0010FC  B4D8               	btfsc	status,2,c
  2866   0010FE  EF83  F008         	goto	u1991
  2867   001102  EF85  F008         	goto	u1990
  2868   001106                     u1991:
  2869   001106  EF89  F008         	goto	l2583
  2870   00110A                     u1990:
  2871   00110A                     
  2872                           ; BSR set to: 0
  2873   00110A  6DBD               	negf	___awdiv@quotient& (0+255),b
  2874   00110C  1FBE               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2875   00110E  B0D8               	btfsc	status,0,c
  2876   001110  2BBE               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2877   001112                     l2583:
  2878                           
  2879                           ; BSR set to: 0
  2880   001112  C0BD  F0B7         	movff	___awdiv@quotient,?___awdiv
  2881   001116  C0BE  F0B8         	movff	___awdiv@quotient+1,?___awdiv+1
  2882   00111A                     
  2883                           ; BSR set to: 0
  2884   00111A  0012               	return		;funcret
  2885   00111C                     __end_of___awdiv:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _UART_Write_Text *****************
  2889 ;; Defined at:
  2890 ;;		line 46 in file "setting_hardaware/uart.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  text            2    1[BANK0 ] PTR unsigned char 
  2893 ;;		 -> str(200), 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  i               2    3[BANK0 ] int 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2905 ;;      Params:         0       2       0       0       0       0       0
  2906 ;;      Locals:         0       2       0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0
  2908 ;;      Totals:         0       4       0       0       0       0       0
  2909 ;;Total ram usage:        4 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 10
  2912 ;; This function calls:
  2913 ;;		_UART_Write
  2914 ;; This function is called by:
  2915 ;;		_add_score
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text11
  2921   001682                     __ptext11:
  2922                           	callstack 0
  2923   001682                     _UART_Write_Text:
  2924                           	callstack 19
  2925   001682                     
  2926                           ;setting_hardaware/uart.c: 47:     for(int i=0;text[i]!='\0';i++){
  2927   001682  0E00               	movlw	0
  2928   001684  0100               	movlb	0	; () banked
  2929   001686  6FBB               	movwf	(UART_Write_Text@i+1)& (0+255),b
  2930   001688  0E00               	movlw	0
  2931   00168A  6FBA               	movwf	UART_Write_Text@i& (0+255),b
  2932   00168C  EF54  F00B         	goto	l2707
  2933   001690                     l2703:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;setting_hardaware/uart.c: 48:         UART_Write(text[i]);
  2937   001690  51BA               	movf	UART_Write_Text@i& (0+255),w,b
  2938   001692  25B8               	addwf	UART_Write_Text@text& (0+255),w,b
  2939   001694  6ED9               	movwf	fsr2l,c
  2940   001696  51BB               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  2941   001698  21B9               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  2942   00169A  6EDA               	movwf	fsr2h,c
  2943   00169C  50DF               	movf	indf2,w,c
  2944   00169E  ECC3  F00C         	call	_UART_Write
  2945   0016A2                     
  2946                           ;setting_hardaware/uart.c: 49:     }
  2947   0016A2  0100               	movlb	0	; () banked
  2948   0016A4  4BBA               	infsnz	UART_Write_Text@i& (0+255),f,b
  2949   0016A6  2BBB               	incf	(UART_Write_Text@i+1)& (0+255),f,b
  2950   0016A8                     l2707:
  2951                           
  2952                           ; BSR set to: 0
  2953   0016A8  51BA               	movf	UART_Write_Text@i& (0+255),w,b
  2954   0016AA  25B8               	addwf	UART_Write_Text@text& (0+255),w,b
  2955   0016AC  6ED9               	movwf	fsr2l,c
  2956   0016AE  51BB               	movf	(UART_Write_Text@i+1)& (0+255),w,b
  2957   0016B0  21B9               	addwfc	(UART_Write_Text@text+1)& (0+255),w,b
  2958   0016B2  6EDA               	movwf	fsr2h,c
  2959   0016B4  50DF               	movf	indf2,w,c
  2960   0016B6  A4D8               	btfss	status,2,c
  2961   0016B8  EF60  F00B         	goto	u2221
  2962   0016BC  EF62  F00B         	goto	u2220
  2963   0016C0                     u2221:
  2964   0016C0  EF48  F00B         	goto	l2703
  2965   0016C4                     u2220:
  2966   0016C4                     
  2967                           ; BSR set to: 0
  2968   0016C4  0012               	return		;funcret
  2969   0016C6                     __end_of_UART_Write_Text:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _UART_Write *****************
  2973 ;; Defined at:
  2974 ;;		line 39 in file "setting_hardaware/uart.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  data            1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  data            1    0[BANK0 ] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2988 ;;      Params:         0       0       0       0       0       0       0
  2989 ;;      Locals:         0       1       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0
  2991 ;;      Totals:         0       1       0       0       0       0       0
  2992 ;;Total ram usage:        1 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 9
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_UART_Write_Text
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text12
  3003   001986                     __ptext12:
  3004                           	callstack 0
  3005   001986                     _UART_Write:
  3006                           	callstack 19
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;incstack = 0
  3010                           ;UART_Write@data stored from wreg
  3011   001986  0100               	movlb	0	; () banked
  3012   001988  6FB7               	movwf	UART_Write@data& (0+255),b
  3013   00198A                     l191:
  3014   00198A  A2AC               	btfss	172,1,c	;volatile
  3015   00198C  EFCA  F00C         	goto	u2201
  3016   001990  EFCC  F00C         	goto	u2200
  3017   001994                     u2201:
  3018   001994  EFC5  F00C         	goto	l191
  3019   001998                     u2200:
  3020   001998                     
  3021                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  3022   001998  C0B7  FFAD         	movff	UART_Write@data,4013	;volatile
  3023   00199C  0012               	return		;funcret
  3024   00199E                     __end_of_UART_Write:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _ClearBuffer *****************
  3028 ;; Defined at:
  3029 ;;		line 52 in file "setting_hardaware/uart.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  i               2    0[BANK0 ] int 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3043 ;;      Params:         0       0       0       0       0       0       0
  3044 ;;      Locals:         0       2       0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0
  3046 ;;      Totals:         0       2       0       0       0       0       0
  3047 ;;Total ram usage:        2 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 9
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_add_score
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text13
  3059   001708                     __ptext13:
  3060                           	callstack 0
  3061   001708                     _ClearBuffer:
  3062                           	callstack 20
  3063   001708                     
  3064                           ;setting_hardaware/uart.c: 53:     for(int i = 0; i < 10 ; i++)
  3065   001708  0E00               	movlw	0
  3066   00170A  0100               	movlb	0	; () banked
  3067   00170C  6FB8               	movwf	(ClearBuffer@i+1)& (0+255),b
  3068   00170E  0E00               	movlw	0
  3069   001710  6FB7               	movwf	ClearBuffer@i& (0+255),b
  3070   001712                     l2715:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;setting_hardaware/uart.c: 54:         mystring[i] = '\0';
  3074   001712  0E00               	movlw	low _mystring
  3075   001714  25B7               	addwf	ClearBuffer@i& (0+255),w,b
  3076   001716  6ED9               	movwf	fsr2l,c
  3077   001718  0E02               	movlw	high _mystring
  3078   00171A  21B8               	addwfc	(ClearBuffer@i+1)& (0+255),w,b
  3079   00171C  6EDA               	movwf	fsr2h,c
  3080   00171E  6ADF               	clrf	indf2,c
  3081   001720                     
  3082                           ; BSR set to: 0
  3083   001720  4BB7               	infsnz	ClearBuffer@i& (0+255),f,b
  3084   001722  2BB8               	incf	(ClearBuffer@i+1)& (0+255),f,b
  3085   001724                     
  3086                           ; BSR set to: 0
  3087   001724  BFB8               	btfsc	(ClearBuffer@i+1)& (0+255),7,b
  3088   001726  EF9E  F00B         	goto	u2231
  3089   00172A  51B8               	movf	(ClearBuffer@i+1)& (0+255),w,b
  3090   00172C  E109               	bnz	u2230
  3091   00172E  0E0A               	movlw	10
  3092   001730  5DB7               	subwf	ClearBuffer@i& (0+255),w,b
  3093   001732  A0D8               	btfss	status,0,c
  3094   001734  EF9E  F00B         	goto	u2231
  3095   001738  EFA0  F00B         	goto	u2230
  3096   00173C                     u2231:
  3097   00173C  EF89  F00B         	goto	l2715
  3098   001740                     u2230:
  3099   001740                     
  3100                           ; BSR set to: 0
  3101                           ;setting_hardaware/uart.c: 55:     lenStr = 0;
  3102   001740  0E00               	movlw	0
  3103   001742  6E41               	movwf	(_lenStr+1)^0,c
  3104   001744  0E00               	movlw	0
  3105   001746  6E40               	movwf	_lenStr^0,c
  3106   001748                     
  3107                           ; BSR set to: 0
  3108   001748  0012               	return		;funcret
  3109   00174A                     __end_of_ClearBuffer:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _SYSTEM_Initialize *****************
  3113 ;; Defined at:
  3114 ;;		line 60 in file "setting_hardaware/setting.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3128 ;;      Params:         0       0       0       0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0
  3131 ;;      Totals:         0       0       0       0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 10
  3135 ;; This function calls:
  3136 ;;		_ADC_Initialize
  3137 ;;		_CCP1_Initialize
  3138 ;;		_INTERRUPT_Initialize
  3139 ;;		_OSCILLATOR_Initialize
  3140 ;;		_UART_Initialize
  3141 ;; This function is called by:
  3142 ;;		_main
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text14
  3147   0019B6                     __ptext14:
  3148                           	callstack 0
  3149   0019B6                     _SYSTEM_Initialize:
  3150                           	callstack 20
  3151   0019B6                     
  3152                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  3153   0019B6  ECCF  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  3154   0019BA                     
  3155                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  3156   0019BA  EC07  F00D         	call	_INTERRUPT_Initialize	;wreg free
  3157   0019BE                     
  3158                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  3159   0019BE  ECB2  F00C         	call	_UART_Initialize	;wreg free
  3160   0019C2                     
  3161                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  3162   0019C2  EC1E  F00B         	call	_CCP1_Initialize	;wreg free
  3163   0019C6                     
  3164                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  3165   0019C6  ECE6  F00C         	call	_ADC_Initialize	;wreg free
  3166   0019CA  0012               	return		;funcret
  3167   0019CC                     __end_of_SYSTEM_Initialize:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function _UART_Initialize *****************
  3171 ;; Defined at:
  3172 ;;		line 7 in file "setting_hardaware/uart.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3186 ;;      Params:         0       0       0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 9
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_SYSTEM_Initialize
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text15
  3201   001964                     __ptext15:
  3202                           	callstack 0
  3203   001964                     _UART_Initialize:
  3204                           	callstack 20
  3205   001964                     
  3206                           ;setting_hardaware/uart.c: 17:     TRISCbits.TRISC6 = 1;
  3207   001964  8C94               	bsf	148,6,c	;volatile
  3208                           
  3209                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC7 = 1;
  3210   001966  8E94               	bsf	148,7,c	;volatile
  3211                           
  3212                           ;setting_hardaware/uart.c: 21:     TXSTAbits.SYNC = 0;
  3213   001968  98AC               	bcf	172,4,c	;volatile
  3214                           
  3215                           ;setting_hardaware/uart.c: 22:     BAUDCONbits.BRG16 = 0;
  3216   00196A  96B8               	bcf	184,3,c	;volatile
  3217                           
  3218                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
  3219   00196C  94AC               	bcf	172,2,c	;volatile
  3220   00196E                     
  3221                           ;setting_hardaware/uart.c: 24:     SPBRG = 51;
  3222   00196E  0E33               	movlw	51
  3223   001970  6EAF               	movwf	175,c	;volatile
  3224   001972                     
  3225                           ;setting_hardaware/uart.c: 27:     RCSTAbits.SPEN = 1;
  3226   001972  8EAB               	bsf	171,7,c	;volatile
  3227   001974                     
  3228                           ;setting_hardaware/uart.c: 28:     PIR1bits.TXIF = 1 ;
  3229   001974  889E               	bsf	158,4,c	;volatile
  3230   001976                     
  3231                           ;setting_hardaware/uart.c: 29:     PIR1bits.RCIF = 0 ;
  3232   001976  9A9E               	bcf	158,5,c	;volatile
  3233   001978                     
  3234                           ;setting_hardaware/uart.c: 30:     TXSTAbits.TXEN = 1;
  3235   001978  8AAC               	bsf	172,5,c	;volatile
  3236   00197A                     
  3237                           ;setting_hardaware/uart.c: 31:     RCSTAbits.CREN = 1;
  3238   00197A  88AB               	bsf	171,4,c	;volatile
  3239   00197C                     
  3240                           ;setting_hardaware/uart.c: 32:     PIE1bits.TXIE = 0;
  3241   00197C  989D               	bcf	157,4,c	;volatile
  3242   00197E                     
  3243                           ;setting_hardaware/uart.c: 33:     IPR1bits.TXIP = 0;
  3244   00197E  989F               	bcf	159,4,c	;volatile
  3245   001980                     
  3246                           ;setting_hardaware/uart.c: 34:     PIE1bits.RCIE = 1;
  3247   001980  8A9D               	bsf	157,5,c	;volatile
  3248   001982                     
  3249                           ;setting_hardaware/uart.c: 35:     IPR1bits.RCIP = 0;
  3250   001982  9A9F               	bcf	159,5,c	;volatile
  3251   001984  0012               	return		;funcret
  3252   001986                     __end_of_UART_Initialize:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _OSCILLATOR_Initialize *****************
  3256 ;; Defined at:
  3257 ;;		line 73 in file "setting_hardaware/setting.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3271 ;;      Params:         0       0       0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0
  3274 ;;      Totals:         0       0       0       0       0       0       0
  3275 ;;Total ram usage:        0 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 9
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_SYSTEM_Initialize
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text16
  3286   00199E                     __ptext16:
  3287                           	callstack 0
  3288   00199E                     _OSCILLATOR_Initialize:
  3289                           	callstack 20
  3290   00199E                     
  3291                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
  3292   00199E  8CD3               	bsf	4051,6,c	;volatile
  3293                           
  3294                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
  3295   0019A0  8AD3               	bsf	4051,5,c	;volatile
  3296                           
  3297                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
  3298   0019A2  98D3               	bcf	4051,4,c	;volatile
  3299   0019A4                     
  3300                           ;setting_hardaware/setting.c: 79:     TRISD = 0x00;
  3301   0019A4  0E00               	movlw	0
  3302   0019A6  6E95               	movwf	149,c	;volatile
  3303   0019A8                     
  3304                           ;setting_hardaware/setting.c: 81:     LATDbits.LD0 = 0;
  3305   0019A8  908C               	bcf	140,0,c	;volatile
  3306   0019AA                     
  3307                           ;setting_hardaware/setting.c: 82:     LATDbits.LD1 = 0;
  3308   0019AA  928C               	bcf	140,1,c	;volatile
  3309   0019AC                     
  3310                           ;setting_hardaware/setting.c: 83:     TRISBbits.RB0 = 1;
  3311   0019AC  8093               	bsf	147,0,c	;volatile
  3312   0019AE                     
  3313                           ;setting_hardaware/setting.c: 84:     TRISBbits.RB1 = 1;
  3314   0019AE  8293               	bsf	147,1,c	;volatile
  3315                           
  3316                           ;setting_hardaware/setting.c: 85:     TRISA = 1;
  3317   0019B0  0E01               	movlw	1
  3318   0019B2  6E92               	movwf	146,c	;volatile
  3319   0019B4  0012               	return		;funcret
  3320   0019B6                     __end_of_OSCILLATOR_Initialize:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _INTERRUPT_Initialize *****************
  3324 ;; Defined at:
  3325 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		None
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3339 ;;      Params:         0       0       0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0
  3342 ;;      Totals:         0       0       0       0       0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 9
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_SYSTEM_Initialize
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text17
  3354   001A0E                     __ptext17:
  3355                           	callstack 0
  3356   001A0E                     _INTERRUPT_Initialize:
  3357                           	callstack 20
  3358   001A0E                     
  3359                           ;setting_hardaware/interrupt_manager.c: 8:     RCONbits.IPEN = 1;
  3360   001A0E  8ED0               	bsf	208,7,c	;volatile
  3361                           
  3362                           ;setting_hardaware/interrupt_manager.c: 9:     INTCONbits.INT0F = 0;
  3363   001A10  92F2               	bcf	242,1,c	;volatile
  3364                           
  3365                           ;setting_hardaware/interrupt_manager.c: 10:     INTCONbits.INT0E = 1;
  3366   001A12  88F2               	bsf	242,4,c	;volatile
  3367                           
  3368                           ;setting_hardaware/interrupt_manager.c: 11:     INTCONbits.GIE = 1;
  3369   001A14  8EF2               	bsf	242,7,c	;volatile
  3370   001A16  0012               	return		;funcret
  3371   001A18                     __end_of_INTERRUPT_Initialize:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _CCP1_Initialize *****************
  3375 ;; Defined at:
  3376 ;;		line 4 in file "setting_hardaware/ccp1.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3390 ;;      Params:         0       0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0
  3392 ;;      Temps:          0       1       0       0       0       0       0
  3393 ;;      Totals:         0       1       0       0       0       0       0
  3394 ;;Total ram usage:        1 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 9
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_SYSTEM_Initialize
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text18
  3405   00163C                     __ptext18:
  3406                           	callstack 0
  3407   00163C                     _CCP1_Initialize:
  3408                           	callstack 20
  3409   00163C                     
  3410                           ;setting_hardaware/ccp1.c: 6:     T2CONbits.TMR2ON = 0b1;
  3411   00163C  84CA               	bsf	202,2,c	;volatile
  3412   00163E                     
  3413                           ;setting_hardaware/ccp1.c: 7:     T2CONbits.T2CKPS = 0b10;
  3414   00163E  50CA               	movf	202,w,c	;volatile
  3415   001640  0BFC               	andlw	-4
  3416   001642  0902               	iorlw	2
  3417   001644  6ECA               	movwf	202,c	;volatile
  3418                           
  3419                           ;setting_hardaware/ccp1.c: 8:     T2CONbits.T2OUTPS = 0b0001;
  3420   001646  50CA               	movf	202,w,c	;volatile
  3421   001648  0B87               	andlw	-121
  3422   00164A  0908               	iorlw	8
  3423   00164C  6ECA               	movwf	202,c	;volatile
  3424                           
  3425                           ;setting_hardaware/ccp1.c: 9:     CCP1CONbits.CCP1M = 0b1100;
  3426   00164E  50BD               	movf	189,w,c	;volatile
  3427   001650  0BF0               	andlw	-16
  3428   001652  090C               	iorlw	12
  3429   001654  6EBD               	movwf	189,c	;volatile
  3430                           
  3431                           ;setting_hardaware/ccp1.c: 11:     TRISC = 0;
  3432   001656  0E00               	movlw	0
  3433   001658  6E94               	movwf	148,c	;volatile
  3434                           
  3435                           ;setting_hardaware/ccp1.c: 12:     LATC = 0;
  3436   00165A  0E00               	movlw	0
  3437   00165C  6E8B               	movwf	139,c	;volatile
  3438                           
  3439                           ;setting_hardaware/ccp1.c: 21:     PR2 = 0x9b;
  3440   00165E  0E9B               	movlw	155
  3441   001660  6ECB               	movwf	203,c	;volatile
  3442                           
  3443                           ;setting_hardaware/ccp1.c: 24:     CCPR1L = 0x0b;
  3444   001662  0E0B               	movlw	11
  3445   001664  6EBE               	movwf	190,c	;volatile
  3446                           
  3447                           ;setting_hardaware/ccp1.c: 25:     CCP1CONbits.DC1B = 0b10;
  3448   001666  50BD               	movf	189,w,c	;volatile
  3449   001668  0BCF               	andlw	-49
  3450   00166A  0920               	iorlw	32
  3451   00166C  6EBD               	movwf	189,c	;volatile
  3452   00166E                     
  3453                           ;setting_hardaware/ccp1.c: 26:      _delay((unsigned long)((200)*(1000000/4000.0)));
  3454   00166E  0E41               	movlw	65
  3455   001670  0100               	movlb	0	; () banked
  3456   001672  6FB7               	movwf	??_CCP1_Initialize& (0+255),b
  3457   001674  0EEE               	movlw	238
  3458   001676                     u2477:
  3459   001676  2EE8               	decfsz	wreg,f,c
  3460   001678  D7FE               	bra	u2477
  3461   00167A  2FB7               	decfsz	??_CCP1_Initialize& (0+255),f,b
  3462   00167C  D7FC               	bra	u2477
  3463   00167E  0000               	nop	
  3464   001680  0012               	return		;funcret
  3465   001682                     __end_of_CCP1_Initialize:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function _ADC_Initialize *****************
  3469 ;; Defined at:
  3470 ;;		line 3 in file "setting_hardaware/adc.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3484 ;;      Params:         0       0       0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0
  3487 ;;      Totals:         0       0       0       0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 9
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_SYSTEM_Initialize
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text19
  3499   0019CC                     __ptext19:
  3500                           	callstack 0
  3501   0019CC                     _ADC_Initialize:
  3502                           	callstack 20
  3503   0019CC                     
  3504                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  3505   0019CC  6892               	setf	146,c	;volatile
  3506   0019CE                     
  3507                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0f;
  3508   0019CE  0E0F               	movlw	15
  3509   0019D0  6EC1               	movwf	193,c	;volatile
  3510   0019D2                     
  3511                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  3512   0019D2  8EC0               	bsf	4032,7,c	;volatile
  3513                           
  3514                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  3515   0019D4  0E07               	movlw	7
  3516   0019D6  12C0               	iorwf	192,f,c	;volatile
  3517                           
  3518                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  3519   0019D8  0E00               	movlw	0
  3520   0019DA  6EC4               	movwf	196,c	;volatile
  3521                           
  3522                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  3523   0019DC  0E00               	movlw	0
  3524   0019DE  6EC3               	movwf	195,c	;volatile
  3525   0019E0  0012               	return		;funcret
  3526   0019E2                     __end_of_ADC_Initialize:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _Lo_ISR *****************
  3530 ;; Defined at:
  3531 ;;		line 79 in file "setting_hardaware/uart.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3545 ;;      Params:         0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0
  3547 ;;      Temps:          5       0       0       0       0       0       0
  3548 ;;      Totals:         5       0       0       0       0       0       0
  3549 ;;Total ram usage:        5 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 8
  3552 ;; This function calls:
  3553 ;;		_MyusartRead
  3554 ;; This function is called by:
  3555 ;;		Interrupt level 1
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	intcodelo
  3560   000018                     __pintcodelo:
  3561                           	callstack 0
  3562   000018                     _Lo_ISR:
  3563                           	callstack 16
  3564                           
  3565                           ;incstack = 0
  3566   000018  8048               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3567   00001A  CFD8 F03B          	movff	status,??_Lo_ISR
  3568   00001E  CFE8 F03C          	movff	wreg,??_Lo_ISR+1
  3569   000022  CFE0 F03D          	movff	bsr,??_Lo_ISR+2
  3570   000026  CFD9 F03E          	movff	fsr2l,??_Lo_ISR+3
  3571   00002A  CFDA F03F          	movff	fsr2h,??_Lo_ISR+4
  3572   00002E                     
  3573                           ;setting_hardaware/uart.c: 81:     if(RCIF)
  3574   00002E  AA9E               	btfss	3998,5,c	;volatile
  3575   000030  EF1C  F000         	goto	i1u192_21
  3576   000034  EF1E  F000         	goto	i1u192_20
  3577   000038                     i1u192_21:
  3578   000038  EF2A  F000         	goto	i1l220
  3579   00003C                     i1u192_20:
  3580   00003C                     
  3581                           ;setting_hardaware/uart.c: 82:     {;setting_hardaware/uart.c: 83:         if(RCSTAbits.
      +                          OERR)
  3582   00003C  A2AB               	btfss	171,1,c	;volatile
  3583   00003E  EF23  F000         	goto	i1u193_21
  3584   000042  EF25  F000         	goto	i1u193_20
  3585   000046                     i1u193_21:
  3586   000046  EF28  F000         	goto	i1l2519
  3587   00004A                     i1u193_20:
  3588   00004A                     
  3589                           ;setting_hardaware/uart.c: 84:         {;setting_hardaware/uart.c: 85:             CREN 
      +                          = 0;
  3590   00004A  98AB               	bcf	4011,4,c	;volatile
  3591                           
  3592                           ;setting_hardaware/uart.c: 86:             __nop();
  3593   00004C  0000               	nop	
  3594                           
  3595                           ;setting_hardaware/uart.c: 87:             CREN = 1;
  3596   00004E  88AB               	bsf	4011,4,c	;volatile
  3597   000050                     i1l2519:
  3598                           
  3599                           ;setting_hardaware/uart.c: 90:         MyusartRead();
  3600   000050  ECB4  F00A         	call	_MyusartRead	;wreg free
  3601   000054                     i1l220:
  3602   000054  C03F  FFDA         	movff	??_Lo_ISR+4,fsr2h
  3603   000058  C03E  FFD9         	movff	??_Lo_ISR+3,fsr2l
  3604   00005C  C03D  FFE0         	movff	??_Lo_ISR+2,bsr
  3605   000060  C03C  FFE8         	movff	??_Lo_ISR+1,wreg
  3606   000064  C03B  FFD8         	movff	??_Lo_ISR,status
  3607   000068  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3608   00006A  0010               	retfie	
  3609   00006C                     __end_of_Lo_ISR:
  3610                           	callstack 0
  3611                           
  3612 ;; *************** function _MyusartRead *****************
  3613 ;; Defined at:
  3614 ;;		line 58 in file "setting_hardaware/uart.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3628 ;;      Params:         0       0       0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0
  3630 ;;      Temps:          1       0       0       0       0       0       0
  3631 ;;      Totals:         1       0       0       0       0       0       0
  3632 ;;Total ram usage:        1 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 7
  3635 ;; This function calls:
  3636 ;;		i1_UART_Write
  3637 ;;		i1___awmod
  3638 ;; This function is called by:
  3639 ;;		_Lo_ISR
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text21
  3644   001568                     __ptext21:
  3645                           	callstack 0
  3646   001568                     _MyusartRead:
  3647                           	callstack 16
  3648   001568                     
  3649                           ;setting_hardaware/uart.c: 61:     mystring[lenStr] = RCREG;
  3650   001568  0E00               	movlw	low _mystring
  3651   00156A  2440               	addwf	_lenStr^0,w,c
  3652   00156C  6ED9               	movwf	fsr2l,c
  3653   00156E  0E02               	movlw	high _mystring
  3654   001570  2041               	addwfc	(_lenStr+1)^0,w,c
  3655   001572  6EDA               	movwf	fsr2h,c
  3656   001574  CFAE FFDF          	movff	4014,indf2	;volatile
  3657                           
  3658                           ;setting_hardaware/uart.c: 62:     if (mystring[lenStr] == '\r'){
  3659   001578  0E00               	movlw	low _mystring
  3660   00157A  2440               	addwf	_lenStr^0,w,c
  3661   00157C  6ED9               	movwf	fsr2l,c
  3662   00157E  0E02               	movlw	high _mystring
  3663   001580  2041               	addwfc	(_lenStr+1)^0,w,c
  3664   001582  6EDA               	movwf	fsr2h,c
  3665   001584  0E0D               	movlw	13
  3666   001586  18DE               	xorwf	postinc2,w,c
  3667   001588  A4D8               	btfss	status,2,c
  3668   00158A  EFC9  F00A         	goto	i1u166_21
  3669   00158E  EFCB  F00A         	goto	i1u166_20
  3670   001592                     i1u166_21:
  3671   001592  EFD9  F00A         	goto	i1l2269
  3672   001596                     i1u166_20:
  3673   001596                     
  3674                           ;setting_hardaware/uart.c: 63:         UART_Write(mystring[lenStr]);
  3675   001596  0E00               	movlw	low _mystring
  3676   001598  2440               	addwf	_lenStr^0,w,c
  3677   00159A  6ED9               	movwf	fsr2l,c
  3678   00159C  0E02               	movlw	high _mystring
  3679   00159E  2041               	addwfc	(_lenStr+1)^0,w,c
  3680   0015A0  6EDA               	movwf	fsr2h,c
  3681   0015A2  50DF               	movf	indf2,w,c
  3682   0015A4  ECF1  F00C         	call	i1_UART_Write
  3683   0015A8                     
  3684                           ;setting_hardaware/uart.c: 64:         UART_Write('\n');
  3685   0015A8  0E0A               	movlw	10
  3686   0015AA  ECF1  F00C         	call	i1_UART_Write
  3687                           
  3688                           ;setting_hardaware/uart.c: 65:     }
  3689   0015AE  EFE2  F00A         	goto	i1l2271
  3690   0015B2                     i1l2269:
  3691                           
  3692                           ;setting_hardaware/uart.c: 67:         UART_Write(mystring[lenStr]);
  3693   0015B2  0E00               	movlw	low _mystring
  3694   0015B4  2440               	addwf	_lenStr^0,w,c
  3695   0015B6  6ED9               	movwf	fsr2l,c
  3696   0015B8  0E02               	movlw	high _mystring
  3697   0015BA  2041               	addwfc	(_lenStr+1)^0,w,c
  3698   0015BC  6EDA               	movwf	fsr2h,c
  3699   0015BE  50DF               	movf	indf2,w,c
  3700   0015C0  ECF1  F00C         	call	i1_UART_Write
  3701   0015C4                     i1l2271:
  3702                           
  3703                           ;setting_hardaware/uart.c: 68:     lenStr++;
  3704   0015C4  4A40               	infsnz	_lenStr^0,f,c
  3705   0015C6  2A41               	incf	(_lenStr+1)^0,f,c
  3706   0015C8                     
  3707                           ;setting_hardaware/uart.c: 69:     lenStr%=10;
  3708   0015C8  C040  F034         	movff	_lenStr,i1___awmod@dividend
  3709   0015CC  C041  F035         	movff	_lenStr+1,i1___awmod@dividend+1
  3710   0015D0  0E00               	movlw	0
  3711   0015D2  6E37               	movwf	(i1___awmod@divisor+1)^0,c
  3712   0015D4  0E0A               	movlw	10
  3713   0015D6  6E36               	movwf	i1___awmod@divisor^0,c
  3714   0015D8  EC04  F00A         	call	i1___awmod	;wreg free
  3715   0015DC  C034  F040         	movff	?i1___awmod,_lenStr
  3716   0015E0  C035  F041         	movff	?i1___awmod+1,_lenStr+1
  3717   0015E4  0012               	return		;funcret
  3718   0015E6                     __end_of_MyusartRead:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function i1___awmod *****************
  3722 ;; Defined at:
  3723 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  dividend        2   51[COMRAM] int 
  3726 ;;  divisor         2   53[COMRAM] int 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  sign            1   56[COMRAM] unsigned char 
  3729 ;;  counter         1   55[COMRAM] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  2   51[COMRAM] int 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3739 ;;      Params:         4       0       0       0       0       0       0
  3740 ;;      Locals:         2       0       0       0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0
  3742 ;;      Totals:         6       0       0       0       0       0       0
  3743 ;;Total ram usage:        6 bytes
  3744 ;; Hardware stack levels used: 1
  3745 ;; Hardware stack levels required when called: 6
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_MyusartRead
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text22
  3754   001408                     __ptext22:
  3755                           	callstack 0
  3756   001408                     i1___awmod:
  3757                           	callstack 16
  3758   001408  0E00               	movlw	0
  3759   00140A  6E39               	movwf	i1___awmod@sign^0,c
  3760   00140C  BE35               	btfsc	(i1___awmod@dividend+1)^0,7,c
  3761   00140E  EF0D  F00A         	goto	i1u159_20
  3762   001412  EF0B  F00A         	goto	i1u159_21
  3763   001416                     i1u159_21:
  3764   001416  EF13  F00A         	goto	i1l2181
  3765   00141A                     i1u159_20:
  3766   00141A  6C34               	negf	i1___awmod@dividend^0,c
  3767   00141C  1E35               	comf	(i1___awmod@dividend+1)^0,f,c
  3768   00141E  B0D8               	btfsc	status,0,c
  3769   001420  2A35               	incf	(i1___awmod@dividend+1)^0,f,c
  3770   001422  0E01               	movlw	1
  3771   001424  6E39               	movwf	i1___awmod@sign^0,c
  3772   001426                     i1l2181:
  3773   001426  BE37               	btfsc	(i1___awmod@divisor+1)^0,7,c
  3774   001428  EF1A  F00A         	goto	i1u160_20
  3775   00142C  EF18  F00A         	goto	i1u160_21
  3776   001430                     i1u160_21:
  3777   001430  EF1E  F00A         	goto	i1l2185
  3778   001434                     i1u160_20:
  3779   001434  6C36               	negf	i1___awmod@divisor^0,c
  3780   001436  1E37               	comf	(i1___awmod@divisor+1)^0,f,c
  3781   001438  B0D8               	btfsc	status,0,c
  3782   00143A  2A37               	incf	(i1___awmod@divisor+1)^0,f,c
  3783   00143C                     i1l2185:
  3784   00143C  5036               	movf	i1___awmod@divisor^0,w,c
  3785   00143E  1037               	iorwf	(i1___awmod@divisor+1)^0,w,c
  3786   001440  B4D8               	btfsc	status,2,c
  3787   001442  EF25  F00A         	goto	i1u161_21
  3788   001446  EF27  F00A         	goto	i1u161_20
  3789   00144A                     i1u161_21:
  3790   00144A  EF4B  F00A         	goto	i1l2201
  3791   00144E                     i1u161_20:
  3792   00144E  0E01               	movlw	1
  3793   001450  6E38               	movwf	i1___awmod@counter^0,c
  3794   001452  EF2F  F00A         	goto	i1l2191
  3795   001456                     i1l2189:
  3796   001456  90D8               	bcf	status,0,c
  3797   001458  3636               	rlcf	i1___awmod@divisor^0,f,c
  3798   00145A  3637               	rlcf	(i1___awmod@divisor+1)^0,f,c
  3799   00145C  2A38               	incf	i1___awmod@counter^0,f,c
  3800   00145E                     i1l2191:
  3801   00145E  AE37               	btfss	(i1___awmod@divisor+1)^0,7,c
  3802   001460  EF34  F00A         	goto	i1u162_21
  3803   001464  EF36  F00A         	goto	i1u162_20
  3804   001468                     i1u162_21:
  3805   001468  EF2B  F00A         	goto	i1l2189
  3806   00146C                     i1u162_20:
  3807   00146C                     i1l2193:
  3808   00146C  5036               	movf	i1___awmod@divisor^0,w,c
  3809   00146E  5C34               	subwf	i1___awmod@dividend^0,w,c
  3810   001470  5037               	movf	(i1___awmod@divisor+1)^0,w,c
  3811   001472  5835               	subwfb	(i1___awmod@dividend+1)^0,w,c
  3812   001474  A0D8               	btfss	status,0,c
  3813   001476  EF3F  F00A         	goto	i1u163_21
  3814   00147A  EF41  F00A         	goto	i1u163_20
  3815   00147E                     i1u163_21:
  3816   00147E  EF45  F00A         	goto	i1l2197
  3817   001482                     i1u163_20:
  3818   001482  5036               	movf	i1___awmod@divisor^0,w,c
  3819   001484  5E34               	subwf	i1___awmod@dividend^0,f,c
  3820   001486  5037               	movf	(i1___awmod@divisor+1)^0,w,c
  3821   001488  5A35               	subwfb	(i1___awmod@dividend+1)^0,f,c
  3822   00148A                     i1l2197:
  3823   00148A  90D8               	bcf	status,0,c
  3824   00148C  3237               	rrcf	(i1___awmod@divisor+1)^0,f,c
  3825   00148E  3236               	rrcf	i1___awmod@divisor^0,f,c
  3826   001490  2E38               	decfsz	i1___awmod@counter^0,f,c
  3827   001492  EF36  F00A         	goto	i1l2193
  3828   001496                     i1l2201:
  3829   001496  5039               	movf	i1___awmod@sign^0,w,c
  3830   001498  B4D8               	btfsc	status,2,c
  3831   00149A  EF51  F00A         	goto	i1u164_21
  3832   00149E  EF53  F00A         	goto	i1u164_20
  3833   0014A2                     i1u164_21:
  3834   0014A2  EF57  F00A         	goto	i1l2205
  3835   0014A6                     i1u164_20:
  3836   0014A6  6C34               	negf	i1___awmod@dividend^0,c
  3837   0014A8  1E35               	comf	(i1___awmod@dividend+1)^0,f,c
  3838   0014AA  B0D8               	btfsc	status,0,c
  3839   0014AC  2A35               	incf	(i1___awmod@dividend+1)^0,f,c
  3840   0014AE                     i1l2205:
  3841   0014AE  C034  F034         	movff	i1___awmod@dividend,?i1___awmod
  3842   0014B2  C035  F035         	movff	i1___awmod@dividend+1,?i1___awmod+1
  3843   0014B6  0012               	return		;funcret
  3844   0014B8                     __end_ofi1___awmod:
  3845                           	callstack 0
  3846                           
  3847 ;; *************** function i1_UART_Write *****************
  3848 ;; Defined at:
  3849 ;;		line 39 in file "setting_hardaware/uart.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  data            1    wreg     unsigned char 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  data            1   51[COMRAM] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3863 ;;      Params:         0       0       0       0       0       0       0
  3864 ;;      Locals:         1       0       0       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0
  3866 ;;      Totals:         1       0       0       0       0       0       0
  3867 ;;Total ram usage:        1 bytes
  3868 ;; Hardware stack levels used: 1
  3869 ;; Hardware stack levels required when called: 6
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_MyusartRead
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text23
  3878   0019E2                     __ptext23:
  3879                           	callstack 0
  3880   0019E2                     i1_UART_Write:
  3881                           	callstack 16
  3882                           
  3883                           ;incstack = 0
  3884                           ;i1UART_Write@data stored from wreg
  3885   0019E2  6E34               	movwf	i1UART_Write@data^0,c
  3886   0019E4                     i1l191:
  3887   0019E4  A2AC               	btfss	172,1,c	;volatile
  3888   0019E6  EFF7  F00C         	goto	i1u157_21
  3889   0019EA  EFF9  F00C         	goto	i1u157_20
  3890   0019EE                     i1u157_21:
  3891   0019EE  EFF2  F00C         	goto	i1l191
  3892   0019F2                     i1u157_20:
  3893   0019F2                     
  3894                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  3895   0019F2  C034  FFAD         	movff	i1UART_Write@data,4013	;volatile
  3896   0019F6  0012               	return		;funcret
  3897   0019F8                     __end_ofi1_UART_Write:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _Hi_ISR *****************
  3901 ;; Defined at:
  3902 ;;		line 136 in file "main.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3916 ;;      Params:         0       0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0
  3918 ;;      Temps:          8       0       0       0       0       0       0
  3919 ;;      Totals:         8       0       0       0       0       0       0
  3920 ;;Total ram usage:        8 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 5
  3923 ;; This function calls:
  3924 ;;		i2_ClearBuffer
  3925 ;;		i2_UART_Write_Text
  3926 ;;		i2_sprintf
  3927 ;;		i2_strcpy
  3928 ;; This function is called by:
  3929 ;;		Interrupt level 2
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	intcode
  3934   000008                     __pintcode:
  3935                           	callstack 0
  3936   000008                     _Hi_ISR:
  3937                           	callstack 16
  3938                           
  3939                           ;incstack = 0
  3940   000008  8248               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3941   00000A  ED0A  F007         	call	int_func,f	;refresh shadow registers
  3942                           
  3943                           	psect	intcode_body
  3944   000E14                     __pintcode_body:
  3945                           	callstack 16
  3946   000E14                     int_func:
  3947                           	callstack 16
  3948   000E14  0006               	pop		; remove dummy address from shadow register refresh
  3949   000E16  CFE1 F02C          	movff	fsr1l,??_Hi_ISR
  3950   000E1A  CFE2 F02D          	movff	fsr1h,??_Hi_ISR+1
  3951   000E1E  CFD9 F02E          	movff	fsr2l,??_Hi_ISR+2
  3952   000E22  CFDA F02F          	movff	fsr2h,??_Hi_ISR+3
  3953   000E26  CFF6 F030          	movff	tblptrl,??_Hi_ISR+4
  3954   000E2A  CFF7 F031          	movff	tblptrh,??_Hi_ISR+5
  3955   000E2E  CFF8 F032          	movff	tblptru,??_Hi_ISR+6
  3956   000E32  CFF5 F033          	movff	tablat,??_Hi_ISR+7
  3957   000E36                     
  3958                           ;main.c: 138:     if(INTCONbits.INT0F == 1){
  3959   000E36  A2F2               	btfss	242,1,c	;volatile
  3960   000E38  EF20  F007         	goto	i2u189_41
  3961   000E3C  EF22  F007         	goto	i2u189_40
  3962   000E40                     i2u189_41:
  3963   000E40  EFB0  F007         	goto	i2l78
  3964   000E44                     i2u189_40:
  3965   000E44                     
  3966                           ;main.c: 139:         if(button){
  3967   000E44  5046               	movf	_button^0,w,c
  3968   000E46  1047               	iorwf	(_button+1)^0,w,c
  3969   000E48  B4D8               	btfsc	status,2,c
  3970   000E4A  EF29  F007         	goto	i2u190_41
  3971   000E4E  EF2B  F007         	goto	i2u190_40
  3972   000E52                     i2u190_41:
  3973   000E52  EFB0  F007         	goto	i2l78
  3974   000E56                     i2u190_40:
  3975   000E56                     
  3976                           ;main.c: 140:             strcpy(str,"START\n\r");
  3977   000E56  0E00               	movlw	low _str
  3978   000E58  6E01               	movwf	i2strcpy@dest^0,c
  3979   000E5A  0E01               	movlw	high _str
  3980   000E5C  6E02               	movwf	(i2strcpy@dest+1)^0,c
  3981   000E5E  0EE7               	movlw	low STR_12
  3982   000E60  6E03               	movwf	i2strcpy@src^0,c
  3983   000E62  EC60  F00C         	call	i2_strcpy	;wreg free
  3984   000E66                     
  3985                           ;main.c: 141:             UART_Write_Text(str);
  3986   000E66  0E00               	movlw	low _str
  3987   000E68  6E02               	movwf	i2UART_Write_Text@text^0,c
  3988   000E6A  0E01               	movlw	high _str
  3989   000E6C  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  3990   000E6E  ECC5  F00B         	call	i2_UART_Write_Text	;wreg free
  3991   000E72                     
  3992                           ;main.c: 142:             ClearBuffer();
  3993   000E72  ECE5  F00B         	call	i2_ClearBuffer	;wreg free
  3994                           
  3995                           ;main.c: 143:             strcpy(str,"\rscore : ");
  3996   000E76  0E00               	movlw	low _str
  3997   000E78  6E01               	movwf	i2strcpy@dest^0,c
  3998   000E7A  0E01               	movlw	high _str
  3999   000E7C  6E02               	movwf	(i2strcpy@dest+1)^0,c
  4000   000E7E  0EDD               	movlw	low STR_1
  4001   000E80  6E03               	movwf	i2strcpy@src^0,c
  4002   000E82  EC60  F00C         	call	i2_strcpy	;wreg free
  4003   000E86                     
  4004                           ;main.c: 144:             UART_Write_Text(str);
  4005   000E86  0E00               	movlw	low _str
  4006   000E88  6E02               	movwf	i2UART_Write_Text@text^0,c
  4007   000E8A  0E01               	movlw	high _str
  4008   000E8C  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4009   000E8E  ECC5  F00B         	call	i2_UART_Write_Text	;wreg free
  4010   000E92                     
  4011                           ;main.c: 145:             ClearBuffer();
  4012   000E92  ECE5  F00B         	call	i2_ClearBuffer	;wreg free
  4013   000E96                     
  4014                           ;main.c: 146:             sprintf(str,"%d",score);
  4015   000E96  0E00               	movlw	low _str
  4016   000E98  6E1A               	movwf	i2sprintf@s^0,c
  4017   000E9A  0E01               	movlw	high _str
  4018   000E9C  6E1B               	movwf	(i2sprintf@s+1)^0,c
  4019   000E9E  0EEF               	movlw	low STR_2
  4020   000EA0  6E1C               	movwf	i2sprintf@fmt^0,c
  4021   000EA2  C0B4  F01D         	movff	_score,?i2_sprintf+3
  4022   000EA6  C0B5  F01E         	movff	_score+1,?i2_sprintf+4
  4023   000EAA  EC42  F00C         	call	i2_sprintf	;wreg free
  4024   000EAE                     
  4025                           ;main.c: 147:             UART_Write_Text(str);
  4026   000EAE  0E00               	movlw	low _str
  4027   000EB0  6E02               	movwf	i2UART_Write_Text@text^0,c
  4028   000EB2  0E01               	movlw	high _str
  4029   000EB4  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  4030   000EB6  ECC5  F00B         	call	i2_UART_Write_Text	;wreg free
  4031   000EBA                     
  4032                           ;main.c: 148:             ClearBuffer();
  4033   000EBA  ECE5  F00B         	call	i2_ClearBuffer	;wreg free
  4034   000EBE                     
  4035                           ;main.c: 150:             ready = 1;
  4036   000EBE  0E00               	movlw	0
  4037   000EC0  0100               	movlb	0	; () banked
  4038   000EC2  6FA5               	movwf	(_ready+1)& (0+255),b
  4039   000EC4  0E01               	movlw	1
  4040   000EC6  6FA4               	movwf	_ready& (0+255),b
  4041   000EC8                     
  4042                           ; BSR set to: 0
  4043                           ;main.c: 151:             stop =0;
  4044   000EC8  0E00               	movlw	0
  4045   000ECA  6FB1               	movwf	(_stop+1)& (0+255),b
  4046   000ECC  0E00               	movlw	0
  4047   000ECE  6FB0               	movwf	_stop& (0+255),b
  4048   000ED0                     
  4049                           ; BSR set to: 0
  4050                           ;main.c: 152:             if(state < 5){
  4051   000ED0  BFB3               	btfsc	(_state+1)& (0+255),7,b
  4052   000ED2  EF76  F007         	goto	i2u191_40
  4053   000ED6  51B3               	movf	(_state+1)& (0+255),w,b
  4054   000ED8  E107               	bnz	i2u191_41
  4055   000EDA  0E05               	movlw	5
  4056   000EDC  5DB2               	subwf	_state& (0+255),w,b
  4057   000EDE  B0D8               	btfsc	status,0,c
  4058   000EE0  EF74  F007         	goto	i2u191_41
  4059   000EE4  EF76  F007         	goto	i2u191_40
  4060   000EE8                     i2u191_41:
  4061   000EE8  EF92  F007         	goto	i2l2507
  4062   000EEC                     i2u191_40:
  4063   000EEC                     
  4064                           ; BSR set to: 0
  4065                           ;main.c: 153:                 state ++;
  4066   000EEC  4BB2               	infsnz	_state& (0+255),f,b
  4067   000EEE  2BB3               	incf	(_state+1)& (0+255),f,b
  4068   000EF0                     
  4069                           ; BSR set to: 0
  4070                           ;main.c: 154:                 d1 = 0;
  4071   000EF0  0E00               	movlw	0
  4072   000EF2  6FAD               	movwf	(_d1+1)& (0+255),b
  4073   000EF4  0E00               	movlw	0
  4074   000EF6  6FAC               	movwf	_d1& (0+255),b
  4075   000EF8                     
  4076                           ; BSR set to: 0
  4077                           ;main.c: 155:                 d2 = 0;
  4078   000EF8  0E00               	movlw	0
  4079   000EFA  6FAB               	movwf	(_d2+1)& (0+255),b
  4080   000EFC  0E00               	movlw	0
  4081   000EFE  6FAA               	movwf	_d2& (0+255),b
  4082   000F00                     
  4083                           ; BSR set to: 0
  4084                           ;main.c: 156:                 d3 = 0;
  4085   000F00  0E00               	movlw	0
  4086   000F02  6FA9               	movwf	(_d3+1)& (0+255),b
  4087   000F04  0E00               	movlw	0
  4088   000F06  6FA8               	movwf	_d3& (0+255),b
  4089   000F08                     
  4090                           ; BSR set to: 0
  4091                           ;main.c: 157:                 d4 = 0;
  4092   000F08  0E00               	movlw	0
  4093   000F0A  6FA7               	movwf	(_d4+1)& (0+255),b
  4094   000F0C  0E00               	movlw	0
  4095   000F0E  6FA6               	movwf	_d4& (0+255),b
  4096   000F10                     
  4097                           ; BSR set to: 0
  4098                           ;main.c: 158:                 d5 = 0;
  4099   000F10  0E00               	movlw	0
  4100   000F12  6E45               	movwf	(_d5+1)^0,c
  4101   000F14  0E00               	movlw	0
  4102   000F16  6E44               	movwf	_d5^0,c
  4103   000F18                     
  4104                           ; BSR set to: 0
  4105                           ;main.c: 159:                 d6 = 0;
  4106   000F18  0E00               	movlw	0
  4107   000F1A  6E43               	movwf	(_d6+1)^0,c
  4108   000F1C  0E00               	movlw	0
  4109   000F1E  6E42               	movwf	_d6^0,c
  4110                           
  4111                           ;main.c: 160:             }else{
  4112   000F20  EFAA  F007         	goto	i2l2509
  4113   000F24                     i2l2507:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;main.c: 161:                 d1 = 0;
  4117   000F24  0E00               	movlw	0
  4118   000F26  6FAD               	movwf	(_d1+1)& (0+255),b
  4119   000F28  0E00               	movlw	0
  4120   000F2A  6FAC               	movwf	_d1& (0+255),b
  4121                           
  4122                           ;main.c: 162:                 d2 = 0;
  4123   000F2C  0E00               	movlw	0
  4124   000F2E  6FAB               	movwf	(_d2+1)& (0+255),b
  4125   000F30  0E00               	movlw	0
  4126   000F32  6FAA               	movwf	_d2& (0+255),b
  4127                           
  4128                           ;main.c: 163:                 d3 = 0;
  4129   000F34  0E00               	movlw	0
  4130   000F36  6FA9               	movwf	(_d3+1)& (0+255),b
  4131   000F38  0E00               	movlw	0
  4132   000F3A  6FA8               	movwf	_d3& (0+255),b
  4133                           
  4134                           ;main.c: 164:                 d4 = 0;
  4135   000F3C  0E00               	movlw	0
  4136   000F3E  6FA7               	movwf	(_d4+1)& (0+255),b
  4137   000F40  0E00               	movlw	0
  4138   000F42  6FA6               	movwf	_d4& (0+255),b
  4139                           
  4140                           ;main.c: 165:                 d5 = 0;
  4141   000F44  0E00               	movlw	0
  4142   000F46  6E45               	movwf	(_d5+1)^0,c
  4143   000F48  0E00               	movlw	0
  4144   000F4A  6E44               	movwf	_d5^0,c
  4145                           
  4146                           ;main.c: 166:                 d6 = 0;
  4147   000F4C  0E00               	movlw	0
  4148   000F4E  6E43               	movwf	(_d6+1)^0,c
  4149   000F50  0E00               	movlw	0
  4150   000F52  6E42               	movwf	_d6^0,c
  4151   000F54                     i2l2509:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;main.c: 168:             LATDbits.LD1 = 1;
  4155   000F54  828C               	bsf	140,1,c	;volatile
  4156   000F56                     
  4157                           ; BSR set to: 0
  4158                           ;main.c: 169:             INTCONbits.INT0F = 0;
  4159   000F56  92F2               	bcf	242,1,c	;volatile
  4160                           
  4161                           ;main.c: 170:             button = 0;
  4162   000F58  0E00               	movlw	0
  4163   000F5A  6E47               	movwf	(_button+1)^0,c
  4164   000F5C  0E00               	movlw	0
  4165   000F5E  6E46               	movwf	_button^0,c
  4166   000F60                     i2l78:
  4167   000F60  C033  FFF5         	movff	??_Hi_ISR+7,tablat
  4168   000F64  C032  FFF8         	movff	??_Hi_ISR+6,tblptru
  4169   000F68  C031  FFF7         	movff	??_Hi_ISR+5,tblptrh
  4170   000F6C  C030  FFF6         	movff	??_Hi_ISR+4,tblptrl
  4171   000F70  C02F  FFDA         	movff	??_Hi_ISR+3,fsr2h
  4172   000F74  C02E  FFD9         	movff	??_Hi_ISR+2,fsr2l
  4173   000F78  C02D  FFE2         	movff	??_Hi_ISR+1,fsr1h
  4174   000F7C  C02C  FFE1         	movff	??_Hi_ISR,fsr1l
  4175   000F80  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4176   000F82  0011               	retfie		f
  4177   000F84                     __end_of_Hi_ISR:
  4178                           	callstack 0
  4179                           
  4180 ;; *************** function i2_strcpy *****************
  4181 ;; Defined at:
  4182 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4185 ;;		 -> str(200), 
  4186 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4187 ;;		 -> STR_13(10), STR_12(8), STR_11(43), STR_10(31), 
  4188 ;;		 -> STR_9(15), STR_8(43), STR_7(46), STR_6(15), 
  4189 ;;		 -> STR_5(43), STR_4(38), STR_3(32), STR_1(10), 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  d               2    4[COMRAM] PTR unsigned char 
  4192 ;;		 -> str(200), 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2    0[COMRAM] PTR unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4202 ;;      Params:         3       0       0       0       0       0       0
  4203 ;;      Locals:         2       0       0       0       0       0       0
  4204 ;;      Temps:          1       0       0       0       0       0       0
  4205 ;;      Totals:         6       0       0       0       0       0       0
  4206 ;;Total ram usage:        6 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_Hi_ISR
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text25
  4216   0018C0                     __ptext25:
  4217                           	callstack 0
  4218   0018C0                     i2_strcpy:
  4219                           	callstack 20
  4220   0018C0  C001  F005         	movff	i2strcpy@dest,i2strcpy@d
  4221   0018C4  C002  F006         	movff	i2strcpy@dest+1,i2strcpy@d+1
  4222   0018C8                     i2l2313:
  4223   0018C8  2A03               	incf	i2strcpy@src^0,f,c
  4224   0018CA  0403               	decf	i2strcpy@src^0,w,c
  4225   0018CC  6E04               	movwf	??i2_strcpy^0,c
  4226   0018CE  C004  FFF6         	movff	??i2_strcpy,tblptrl
  4227   0018D2                     	if	1	;There is more than 1 active tblptr byte
  4228   0018D2  0E06               	movlw	high __smallconst
  4229   0018D4  6EF7               	movwf	tblptrh,c
  4230   0018D6                     	endif
  4231   0018D6                     	if	0	;tblptru may be non-zero
  4232   0018D6                     	endif
  4233   0018D6                     	if	0	;tblptru may be non-zero
  4234   0018D6                     	endif
  4235   0018D6  C005  FFD9         	movff	i2strcpy@d,fsr2l
  4236   0018DA  C006  FFDA         	movff	i2strcpy@d+1,fsr2h
  4237   0018DE  4A05               	infsnz	i2strcpy@d^0,f,c
  4238   0018E0  2A06               	incf	(i2strcpy@d+1)^0,f,c
  4239   0018E2  0008               	tblrd		*
  4240   0018E4  CFF5 FFDF          	movff	tablat,indf2
  4241   0018E8  50DF               	movf	indf2,w,c
  4242   0018EA  A4D8               	btfss	status,2,c
  4243   0018EC  EF7A  F00C         	goto	i2u169_41
  4244   0018F0  EF7C  F00C         	goto	i2u169_40
  4245   0018F4                     i2u169_41:
  4246   0018F4  EF64  F00C         	goto	i2l2313
  4247   0018F8                     i2u169_40:
  4248   0018F8  0012               	return		;funcret
  4249   0018FA                     __end_ofi2_strcpy:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function i2_sprintf *****************
  4253 ;; Defined at:
  4254 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  s               2   25[COMRAM] PTR unsigned char 
  4257 ;;		 -> str(200), 
  4258 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  4259 ;;		 -> STR_14(3), STR_2(3), 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  f              12   31[COMRAM] struct _IO_FILE
  4262 ;;  ret             2    0        int 
  4263 ;;  ap              1   30[COMRAM] PTR void [1]
  4264 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2   25[COMRAM] int 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4274 ;;      Params:         5       0       0       0       0       0       0
  4275 ;;      Locals:        13       0       0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0
  4277 ;;      Totals:        18       0       0       0       0       0       0
  4278 ;;Total ram usage:       18 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 4
  4281 ;; This function calls:
  4282 ;;		i2_vfprintf
  4283 ;; This function is called by:
  4284 ;;		_Hi_ISR
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text26
  4289   001884                     __ptext26:
  4290                           	callstack 0
  4291   001884                     i2_sprintf:
  4292                           	callstack 16
  4293   001884  0E1D               	movlw	low (?i2_sprintf+3)
  4294   001886  6E1F               	movwf	i2sprintf@ap^0,c
  4295   001888  C01A  F020         	movff	i2sprintf@s,i2sprintf@f
  4296   00188C  C01B  F021         	movff	i2sprintf@s+1,i2sprintf@f+1
  4297   001890  0E00               	movlw	0
  4298   001892  6E24               	movwf	(i2sprintf@f+4)^0,c
  4299   001894  0E00               	movlw	0
  4300   001896  6E23               	movwf	(i2sprintf@f+3)^0,c
  4301   001898  0E00               	movlw	0
  4302   00189A  6E2B               	movwf	(i2sprintf@f+11)^0,c
  4303   00189C  0E00               	movlw	0
  4304   00189E  6E2A               	movwf	(i2sprintf@f+10)^0,c
  4305   0018A0  0E20               	movlw	low i2sprintf@f
  4306   0018A2  6E16               	movwf	i2vfprintf@fp^0,c
  4307   0018A4  C01C  F017         	movff	i2sprintf@fmt,i2vfprintf@fmt
  4308   0018A8  0E1F               	movlw	low i2sprintf@ap
  4309   0018AA  6E18               	movwf	i2vfprintf@ap^0,c
  4310   0018AC  EC05  F00C         	call	i2_vfprintf	;wreg free
  4311   0018B0  5023               	movf	(i2sprintf@f+3)^0,w,c
  4312   0018B2  241A               	addwf	i2sprintf@s^0,w,c
  4313   0018B4  6ED9               	movwf	fsr2l,c
  4314   0018B6  5024               	movf	(i2sprintf@f+4)^0,w,c
  4315   0018B8  201B               	addwfc	(i2sprintf@s+1)^0,w,c
  4316   0018BA  6EDA               	movwf	fsr2h,c
  4317   0018BC  6ADF               	clrf	indf2,c
  4318   0018BE  0012               	return		;funcret
  4319   0018C0                     __end_ofi2_sprintf:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function i2_vfprintf *****************
  4323 ;; Defined at:
  4324 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  4327 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  4328 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  4329 ;;		 -> STR_14(3), STR_2(3), 
  4330 ;;  ap              1   23[COMRAM] PTR PTR void 
  4331 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  4334 ;;		 -> STR_14(3), STR_2(3), 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2   21[COMRAM] int 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4344 ;;      Params:         3       0       0       0       0       0       0
  4345 ;;      Locals:         1       0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0
  4347 ;;      Totals:         4       0       0       0       0       0       0
  4348 ;;Total ram usage:        4 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 3
  4351 ;; This function calls:
  4352 ;;		i2_vfpfcnvrt
  4353 ;; This function is called by:
  4354 ;;		i2_sprintf
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text27
  4359   00180A                     __ptext27:
  4360                           	callstack 0
  4361   00180A                     i2_vfprintf:
  4362                           	callstack 16
  4363   00180A                     
  4364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4365   00180A  C017  F019         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4368   00180E  EF11  F00C         	goto	i2l2213
  4369   001812                     i2l2211:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4372   001812  C016  F00B         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4373   001816  0E19               	movlw	low i2vfprintf@cfmt
  4374   001818  6E0C               	movwf	i2vfpfcnvrt@fmt^0,c
  4375   00181A  C018  F00D         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4376   00181E  EC2D  F006         	call	i2_vfpfcnvrt	;wreg free
  4377   001822                     i2l2213:
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4380   001822  C019  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4381   001826                     	if	1	;There is more than 1 active tblptr byte
  4382   001826  0E06               	movlw	high __smallconst
  4383   001828  6EF7               	movwf	tblptrh,c
  4384   00182A                     	endif
  4385   00182A                     	if	0	;tblptru may be non-zero
  4386   00182A                     	endif
  4387   00182A                     	if	0	;tblptru may be non-zero
  4388   00182A                     	endif
  4389   00182A  0008               	tblrd		*
  4390   00182C  50F5               	movf	tablat,w,c
  4391   00182E  0900               	iorlw	0
  4392   001830  A4D8               	btfss	status,2,c
  4393   001832  EF1D  F00C         	goto	i2u165_41
  4394   001836  EF1F  F00C         	goto	i2u165_40
  4395   00183A                     i2u165_41:
  4396   00183A  EF09  F00C         	goto	i2l2211
  4397   00183E                     i2u165_40:
  4398   00183E                     
  4399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4400   00183E  0E00               	movlw	0
  4401   001840  6E17               	movwf	(?i2_vfprintf+1)^0,c
  4402   001842  0E00               	movlw	0
  4403   001844  6E16               	movwf	?i2_vfprintf^0,c
  4404   001846  0012               	return		;funcret
  4405   001848                     __end_ofi2_vfprintf:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function i2_vfpfcnvrt *****************
  4409 ;; Defined at:
  4410 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4413 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  4414 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  4415 ;;		 -> i2vfprintf@cfmt(1), vfprintf@cfmt(1), 
  4416 ;;  ap              1   12[COMRAM] PTR PTR void 
  4417 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  convarg         4   16[COMRAM] struct .
  4420 ;;  c               1   20[COMRAM] unsigned char 
  4421 ;;  cp              1   15[COMRAM] PTR unsigned char 
  4422 ;;		 -> STR_14(3), STR_2(3), 
  4423 ;;  done            1   14[COMRAM] _Bool 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      void 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4433 ;;      Params:         3       0       0       0       0       0       0
  4434 ;;      Locals:         7       0       0       0       0       0       0
  4435 ;;      Temps:          1       0       0       0       0       0       0
  4436 ;;      Totals:        11       0       0       0       0       0       0
  4437 ;;Total ram usage:       11 bytes
  4438 ;; Hardware stack levels used: 1
  4439 ;; Hardware stack levels required when called: 2
  4440 ;; This function calls:
  4441 ;;		i2___awdiv
  4442 ;;		i2___awmod
  4443 ;;		i2_abs
  4444 ;;		i2_fputc
  4445 ;; This function is called by:
  4446 ;;		i2_vfprintf
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text28
  4451   000C5A                     __ptext28:
  4452                           	callstack 0
  4453   000C5A                     i2_vfpfcnvrt:
  4454                           	callstack 16
  4455   000C5A                     
  4456                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4457   000C5A  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4458   000C5C  6ED9               	movwf	fsr2l,c
  4459   000C5E  6ADA               	clrf	fsr2h,c
  4460   000C60  CFDF FFF6          	movff	indf2,tblptrl
  4461   000C64                     	if	1	;There is more than 1 active tblptr byte
  4462   000C64  0E06               	movlw	high __smallconst
  4463   000C66  6EF7               	movwf	tblptrh,c
  4464   000C68                     	endif
  4465   000C68                     	if	0	;tblptru may be non-zero
  4466   000C68                     	endif
  4467   000C68                     	if	0	;tblptru may be non-zero
  4468   000C68                     	endif
  4469   000C68  0008               	tblrd		*
  4470   000C6A  50F5               	movf	tablat,w,c
  4471   000C6C  0A25               	xorlw	37
  4472   000C6E  A4D8               	btfss	status,2,c
  4473   000C70  EF3C  F006         	goto	i2u144_41
  4474   000C74  EF3E  F006         	goto	i2u144_40
  4475   000C78                     i2u144_41:
  4476   000C78  EFF8  F006         	goto	i2l2073
  4477   000C7C                     i2u144_40:
  4478   000C7C                     
  4479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4480   000C7C  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4481   000C7E  6ED9               	movwf	fsr2l,c
  4482   000C80  6ADA               	clrf	fsr2h,c
  4483   000C82  2ADF               	incf	indf2,f,c
  4484   000C84                     
  4485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4486   000C84  0E00               	movlw	0
  4487   000C86  0100               	movlb	0	; () banked
  4488   000C88  6FA1               	movwf	(_width+1)& (0+255),b
  4489   000C8A  0E00               	movlw	0
  4490   000C8C  6FA0               	movwf	_width& (0+255),b
  4491   000C8E  C0A0  F0B6         	movff	_width,_flags
  4492   000C92                     
  4493                           ; BSR set to: 0
  4494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4495   000C92  69A2               	setf	_prec& (0+255),b
  4496   000C94  69A3               	setf	(_prec+1)& (0+255),b
  4497   000C96                     
  4498                           ; BSR set to: 0
  4499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4500   000C96  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4501   000C98  6ED9               	movwf	fsr2l,c
  4502   000C9A  6ADA               	clrf	fsr2h,c
  4503   000C9C  50DF               	movf	indf2,w,c
  4504   000C9E  6E10               	movwf	i2vfpfcnvrt@cp^0,c
  4505   000CA0                     
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4508   000CA0  C010  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4509   000CA4                     	if	1	;There is more than 1 active tblptr byte
  4510   000CA4  0E06               	movlw	high __smallconst
  4511   000CA6  6EF7               	movwf	tblptrh,c
  4512   000CA8                     	endif
  4513   000CA8                     	if	0	;tblptru may be non-zero
  4514   000CA8                     	endif
  4515   000CA8                     	if	0	;tblptru may be non-zero
  4516   000CA8                     	endif
  4517   000CA8  0008               	tblrd		*
  4518   000CAA  50F5               	movf	tablat,w,c
  4519   000CAC  0A64               	xorlw	100
  4520   000CAE  B4D8               	btfsc	status,2,c
  4521   000CB0  EF5C  F006         	goto	i2u145_41
  4522   000CB4  EF5E  F006         	goto	i2u145_40
  4523   000CB8                     i2u145_41:
  4524   000CB8  EF6C  F006         	goto	i2l2043
  4525   000CBC                     i2u145_40:
  4526   000CBC                     
  4527                           ; BSR set to: 0
  4528   000CBC  C010  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  4529   000CC0                     	if	1	;There is more than 1 active tblptr byte
  4530   000CC0  0E06               	movlw	high __smallconst
  4531   000CC2  6EF7               	movwf	tblptrh,c
  4532   000CC4                     	endif
  4533   000CC4                     	if	0	;tblptru may be non-zero
  4534   000CC4                     	endif
  4535   000CC4                     	if	0	;tblptru may be non-zero
  4536   000CC4                     	endif
  4537   000CC4  0008               	tblrd		*
  4538   000CC6  50F5               	movf	tablat,w,c
  4539   000CC8  0A69               	xorlw	105
  4540   000CCA  A4D8               	btfss	status,2,c
  4541   000CCC  EF6A  F006         	goto	i2u146_41
  4542   000CD0  EF6C  F006         	goto	i2u146_40
  4543   000CD4                     i2u146_41:
  4544   000CD4  EFF2  F006         	goto	i2l2069
  4545   000CD8                     i2u146_40:
  4546   000CD8                     i2l2043:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4550   000CD8  500D               	movf	i2vfpfcnvrt@ap^0,w,c
  4551   000CDA  6ED9               	movwf	fsr2l,c
  4552   000CDC  6ADA               	clrf	fsr2h,c
  4553   000CDE  0E02               	movlw	2
  4554   000CE0  26DF               	addwf	indf2,f,c
  4555   000CE2  5CDF               	subwf	indf2,w,c
  4556   000CE4  6ED9               	movwf	fsr2l,c
  4557   000CE6  6ADA               	clrf	fsr2h,c
  4558   000CE8  CFDE F011          	movff	postinc2,i2vfpfcnvrt@convarg
  4559   000CEC  CFDE F012          	movff	postinc2,i2vfpfcnvrt@convarg+1
  4560   000CF0                     
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4563   000CF0  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4564   000CF2  6ED9               	movwf	fsr2l,c
  4565   000CF4  6ADA               	clrf	fsr2h,c
  4566   000CF6  2810               	incf	i2vfpfcnvrt@cp^0,w,c
  4567   000CF8  6EDF               	movwf	indf2,c
  4568   000CFA                     
  4569                           ; BSR set to: 0
  4570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4571   000CFA  0E20               	movlw	32
  4572   000CFC  6E15               	movwf	i2vfpfcnvrt@c^0,c
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4575   000CFE  BE12               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
  4576   000D00  EF84  F006         	goto	i2u147_41
  4577   000D04  EF87  F006         	goto	i2u147_40
  4578   000D08                     i2u147_41:
  4579   000D08  0E01               	movlw	1
  4580   000D0A  EF88  F006         	goto	i2u148_40
  4581   000D0E                     i2u147_40:
  4582   000D0E  0E00               	movlw	0
  4583   000D10                     i2u148_40:
  4584   000D10  6E0F               	movwf	i2vfpfcnvrt@done^0,c
  4585   000D12                     i2l2049:
  4586                           
  4587                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4588   000D12  0615               	decf	i2vfpfcnvrt@c^0,f,c
  4589   000D14  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4590   000D16  0F80               	addlw	low _dbuf
  4591   000D18  6ED9               	movwf	fsr2l,c
  4592   000D1A  6ADA               	clrf	fsr2h,c
  4593   000D1C  C011  F001         	movff	i2vfpfcnvrt@convarg,i2___awmod@dividend
  4594   000D20  C012  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awmod@dividend+1
  4595   000D24  0E00               	movlw	0
  4596   000D26  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4597   000D28  0E0A               	movlw	10
  4598   000D2A  6E03               	movwf	i2___awmod@divisor^0,c
  4599   000D2C  EC5C  F00A         	call	i2___awmod	;wreg free
  4600   000D30  C001  F007         	movff	?i2___awmod,i2abs@a
  4601   000D34  C002  F008         	movff	?i2___awmod+1,i2abs@a+1
  4602   000D38  EC98  F00C         	call	i2_abs	;wreg free
  4603   000D3C  5007               	movf	?i2_abs^0,w,c
  4604   000D3E  0F30               	addlw	48
  4605   000D40  6EDF               	movwf	indf2,c
  4606   000D42                     
  4607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4608   000D42  C011  F001         	movff	i2vfpfcnvrt@convarg,i2___awdiv@dividend
  4609   000D46  C012  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awdiv@dividend+1
  4610   000D4A  0E00               	movlw	0
  4611   000D4C  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4612   000D4E  0E0A               	movlw	10
  4613   000D50  6E03               	movwf	i2___awdiv@divisor^0,c
  4614   000D52  EC8E  F008         	call	i2___awdiv	;wreg free
  4615   000D56  C001  F011         	movff	?i2___awdiv,i2vfpfcnvrt@convarg
  4616   000D5A  C002  F012         	movff	?i2___awdiv+1,i2vfpfcnvrt@convarg+1
  4617   000D5E                     
  4618                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4619   000D5E  5011               	movf	i2vfpfcnvrt@convarg^0,w,c
  4620   000D60  1012               	iorwf	(i2vfpfcnvrt@convarg+1)^0,w,c
  4621   000D62  B4D8               	btfsc	status,2,c
  4622   000D64  EFB6  F006         	goto	i2u149_41
  4623   000D68  EFB8  F006         	goto	i2u149_40
  4624   000D6C                     i2u149_41:
  4625   000D6C  EFC0  F006         	goto	i2l2057
  4626   000D70                     i2u149_40:
  4627   000D70  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4628   000D72  A4D8               	btfss	status,2,c
  4629   000D74  EFBE  F006         	goto	i2u150_41
  4630   000D78  EFC0  F006         	goto	i2u150_40
  4631   000D7C                     i2u150_41:
  4632   000D7C  EF89  F006         	goto	i2l2049
  4633   000D80                     i2u150_40:
  4634   000D80                     i2l2057:
  4635                           
  4636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4637   000D80  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4638   000D82  B4D8               	btfsc	status,2,c
  4639   000D84  EFC6  F006         	goto	i2u151_41
  4640   000D88  EFC8  F006         	goto	i2u151_40
  4641   000D8C                     i2u151_41:
  4642   000D8C  EFE7  F006         	goto	i2l2067
  4643   000D90                     i2u151_40:
  4644   000D90  500F               	movf	i2vfpfcnvrt@done^0,w,c
  4645   000D92  B4D8               	btfsc	status,2,c
  4646   000D94  EFCE  F006         	goto	i2u152_41
  4647   000D98  EFD0  F006         	goto	i2u152_40
  4648   000D9C                     i2u152_41:
  4649   000D9C  EFE7  F006         	goto	i2l2067
  4650   000DA0                     i2u152_40:
  4651   000DA0                     
  4652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4653   000DA0  0615               	decf	i2vfpfcnvrt@c^0,f,c
  4654   000DA2  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4655   000DA4  0F80               	addlw	low _dbuf
  4656   000DA6  6ED9               	movwf	fsr2l,c
  4657   000DA8  6ADA               	clrf	fsr2h,c
  4658   000DAA  0E2D               	movlw	45
  4659   000DAC  6EDF               	movwf	indf2,c
  4660   000DAE  EFE7  F006         	goto	i2l2067
  4661   000DB2                     i2l2063:
  4662                           
  4663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4664   000DB2  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4665   000DB4  0F80               	addlw	low _dbuf
  4666   000DB6  6ED9               	movwf	fsr2l,c
  4667   000DB8  6ADA               	clrf	fsr2h,c
  4668   000DBA  50DF               	movf	indf2,w,c
  4669   000DBC  6E0E               	movwf	??i2_vfpfcnvrt^0,c
  4670   000DBE  500E               	movf	??i2_vfpfcnvrt^0,w,c
  4671   000DC0  6E01               	movwf	i2fputc@c^0,c
  4672   000DC2  6A02               	clrf	(i2fputc@c+1)^0,c
  4673   000DC4  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4674   000DC8  EC4E  F009         	call	i2_fputc	;wreg free
  4675   000DCC  2A15               	incf	i2vfpfcnvrt@c^0,f,c
  4676   000DCE                     i2l2067:
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4679   000DCE  0E20               	movlw	32
  4680   000DD0  1815               	xorwf	i2vfpfcnvrt@c^0,w,c
  4681   000DD2  A4D8               	btfss	status,2,c
  4682   000DD4  EFEE  F006         	goto	i2u153_41
  4683   000DD8  EFF0  F006         	goto	i2u153_40
  4684   000DDC                     i2u153_41:
  4685   000DDC  EFD9  F006         	goto	i2l2063
  4686   000DE0                     i2u153_40:
  4687   000DE0  EF09  F007         	goto	i2l939
  4688   000DE4                     i2l2069:
  4689                           
  4690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4691   000DE4  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4692   000DE6  6ED9               	movwf	fsr2l,c
  4693   000DE8  6ADA               	clrf	fsr2h,c
  4694   000DEA  2ADF               	incf	indf2,f,c
  4695   000DEC  EF09  F007         	goto	i2l939
  4696   000DF0                     i2l2073:
  4697                           
  4698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4699   000DF0  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4700   000DF2  6ED9               	movwf	fsr2l,c
  4701   000DF4  6ADA               	clrf	fsr2h,c
  4702   000DF6  CFDF FFF6          	movff	indf2,tblptrl
  4703   000DFA                     	if	1	;There is more than 1 active tblptr byte
  4704   000DFA  0E06               	movlw	high __smallconst
  4705   000DFC  6EF7               	movwf	tblptrh,c
  4706   000DFE                     	endif
  4707   000DFE                     	if	0	;tblptru may be non-zero
  4708   000DFE                     	endif
  4709   000DFE                     	if	0	;tblptru may be non-zero
  4710   000DFE                     	endif
  4711   000DFE  0008               	tblrd		*
  4712   000E00  50F5               	movf	tablat,w,c
  4713   000E02  6E01               	movwf	i2fputc@c^0,c
  4714   000E04  6A02               	clrf	(i2fputc@c+1)^0,c
  4715   000E06  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4716   000E0A  EC4E  F009         	call	i2_fputc	;wreg free
  4717   000E0E  EFF2  F006         	goto	i2l2069
  4718   000E12                     i2l939:
  4719   000E12  0012               	return		;funcret
  4720   000E14                     __end_ofi2_vfpfcnvrt:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function i2_fputc *****************
  4724 ;; Defined at:
  4725 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  c               2    0[COMRAM] int 
  4728 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4729 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  2    0[COMRAM] int 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4741 ;;      Params:         3       0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0
  4743 ;;      Temps:          5       0       0       0       0       0       0
  4744 ;;      Totals:         8       0       0       0       0       0       0
  4745 ;;Total ram usage:        8 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 1
  4748 ;; This function calls:
  4749 ;;		i2_putch
  4750 ;; This function is called by:
  4751 ;;		i2_vfpfcnvrt
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text29
  4756   00129C                     __ptext29:
  4757                           	callstack 0
  4758   00129C                     i2_fputc:
  4759                           	callstack 16
  4760   00129C  5003               	movf	i2fputc@fp^0,w,c
  4761   00129E  B4D8               	btfsc	status,2,c
  4762   0012A0  EF54  F009         	goto	i2u138_41
  4763   0012A4  EF56  F009         	goto	i2u138_40
  4764   0012A8                     i2u138_41:
  4765   0012A8  EF5E  F009         	goto	i2l2005
  4766   0012AC                     i2u138_40:
  4767   0012AC  5003               	movf	i2fputc@fp^0,w,c
  4768   0012AE  A4D8               	btfss	status,2,c
  4769   0012B0  EF5C  F009         	goto	i2u139_41
  4770   0012B4  EF5E  F009         	goto	i2u139_40
  4771   0012B8                     i2u139_41:
  4772   0012B8  EF63  F009         	goto	i2l2007
  4773   0012BC                     i2u139_40:
  4774   0012BC                     i2l2005:
  4775   0012BC  5001               	movf	i2fputc@c^0,w,c
  4776   0012BE  EC0E  F00D         	call	i2_putch
  4777   0012C2  EFAA  F009         	goto	i2l964
  4778   0012C6                     i2l2007:
  4779   0012C6  5003               	movf	i2fputc@fp^0,w,c
  4780   0012C8  6ED9               	movwf	fsr2l,c
  4781   0012CA  6ADA               	clrf	fsr2h,c
  4782   0012CC  0E0A               	movlw	10
  4783   0012CE  26D9               	addwf	fsr2l,f,c
  4784   0012D0  50DE               	movf	postinc2,w,c
  4785   0012D2  10DE               	iorwf	postinc2,w,c
  4786   0012D4  B4D8               	btfsc	status,2,c
  4787   0012D6  EF6F  F009         	goto	i2u140_41
  4788   0012DA  EF71  F009         	goto	i2u140_40
  4789   0012DE                     i2u140_41:
  4790   0012DE  EF8A  F009         	goto	i2l2011
  4791   0012E2                     i2u140_40:
  4792   0012E2  5003               	movf	i2fputc@fp^0,w,c
  4793   0012E4  6ED9               	movwf	fsr2l,c
  4794   0012E6  6ADA               	clrf	fsr2h,c
  4795   0012E8  0E0A               	movlw	10
  4796   0012EA  26D9               	addwf	fsr2l,f,c
  4797   0012EC  5003               	movf	i2fputc@fp^0,w,c
  4798   0012EE  6EE1               	movwf	fsr1l,c
  4799   0012F0  6AE2               	clrf	fsr1h,c
  4800   0012F2  0E03               	movlw	3
  4801   0012F4  26E1               	addwf	fsr1l,f,c
  4802   0012F6  50DE               	movf	postinc2,w,c
  4803   0012F8  5CE6               	subwf	postinc1,w,c
  4804   0012FA  50E6               	movf	postinc1,w,c
  4805   0012FC  0A80               	xorlw	128
  4806   0012FE  6E08               	movwf	(??i2_fputc+4)^0,c
  4807   001300  50DE               	movf	postinc2,w,c
  4808   001302  0A80               	xorlw	128
  4809   001304  5808               	subwfb	(??i2_fputc+4)^0,w,c
  4810   001306  B0D8               	btfsc	status,0,c
  4811   001308  EF88  F009         	goto	i2u141_41
  4812   00130C  EF8A  F009         	goto	i2u141_40
  4813   001310                     i2u141_41:
  4814   001310  EFAA  F009         	goto	i2l964
  4815   001314                     i2u141_40:
  4816   001314                     i2l2011:
  4817   001314  5003               	movf	i2fputc@fp^0,w,c
  4818   001316  6ED9               	movwf	fsr2l,c
  4819   001318  6ADA               	clrf	fsr2h,c
  4820   00131A  0E03               	movlw	3
  4821   00131C  26D9               	addwf	fsr2l,f,c
  4822   00131E  CFDE F004          	movff	postinc2,??i2_fputc
  4823   001322  CFDD F005          	movff	postdec2,??i2_fputc+1
  4824   001326  5003               	movf	i2fputc@fp^0,w,c
  4825   001328  6ED9               	movwf	fsr2l,c
  4826   00132A  6ADA               	clrf	fsr2h,c
  4827   00132C  CFDE F006          	movff	postinc2,??i2_fputc+2
  4828   001330  CFDD F007          	movff	postdec2,??i2_fputc+3
  4829   001334  5004               	movf	??i2_fputc^0,w,c
  4830   001336  2406               	addwf	(??i2_fputc+2)^0,w,c
  4831   001338  6ED9               	movwf	fsr2l,c
  4832   00133A  5005               	movf	(??i2_fputc+1)^0,w,c
  4833   00133C  2007               	addwfc	(??i2_fputc+3)^0,w,c
  4834   00133E  6EDA               	movwf	fsr2h,c
  4835   001340  C001  FFDF         	movff	i2fputc@c,indf2
  4836   001344  5003               	movf	i2fputc@fp^0,w,c
  4837   001346  6ED9               	movwf	fsr2l,c
  4838   001348  6ADA               	clrf	fsr2h,c
  4839   00134A  0E03               	movlw	3
  4840   00134C  26D9               	addwf	fsr2l,f,c
  4841   00134E  2ADE               	incf	postinc2,f,c
  4842   001350  0E00               	movlw	0
  4843   001352  22DD               	addwfc	postdec2,f,c
  4844   001354                     i2l964:
  4845   001354  0012               	return		;funcret
  4846   001356                     __end_ofi2_fputc:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function i2_putch *****************
  4850 ;; Defined at:
  4851 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  c               1    wreg     unsigned char 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  c               1  (no storage) unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4865 ;;      Params:         0       0       0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0
  4868 ;;      Totals:         0       0       0       0       0       0       0
  4869 ;;Total ram usage:        0 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		i2_fputc
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text30
  4879   001A1C                     __ptext30:
  4880                           	callstack 0
  4881   001A1C                     i2_putch:
  4882                           	callstack 16
  4883   001A1C  0012               	return		;funcret
  4884   001A1E                     __end_ofi2_putch:
  4885                           	callstack 0
  4886                           
  4887 ;; *************** function i2_abs *****************
  4888 ;; Defined at:
  4889 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  a               2    6[COMRAM] int 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  2    6[COMRAM] int 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4903 ;;      Params:         2       0       0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0
  4905 ;;      Temps:          2       0       0       0       0       0       0
  4906 ;;      Totals:         4       0       0       0       0       0       0
  4907 ;;Total ram usage:        4 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		i2_vfpfcnvrt
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text31
  4917   001930                     __ptext31:
  4918                           	callstack 0
  4919   001930                     i2_abs:
  4920                           	callstack 17
  4921   001930  BE08               	btfsc	(i2abs@a+1)^0,7,c
  4922   001932  EF9D  F00C         	goto	i2u137_41
  4923   001936  EF9F  F00C         	goto	i2u137_40
  4924   00193A                     i2u137_41:
  4925   00193A  EFA5  F00C         	goto	i2l949
  4926   00193E                     i2u137_40:
  4927   00193E  C007  F007         	movff	i2abs@a,?i2_abs
  4928   001942  C008  F008         	movff	i2abs@a+1,?i2_abs+1
  4929   001946  EFB1  F00C         	goto	i2l952
  4930   00194A                     i2l949:
  4931   00194A  C007  F009         	movff	i2abs@a,??i2_abs
  4932   00194E  C008  F00A         	movff	i2abs@a+1,??i2_abs+1
  4933   001952  1E09               	comf	??i2_abs^0,f,c
  4934   001954  1E0A               	comf	(??i2_abs+1)^0,f,c
  4935   001956  4A09               	infsnz	??i2_abs^0,f,c
  4936   001958  2A0A               	incf	(??i2_abs+1)^0,f,c
  4937   00195A  C009  F007         	movff	??i2_abs,?i2_abs
  4938   00195E  C00A  F008         	movff	??i2_abs+1,?i2_abs+1
  4939   001962                     i2l952:
  4940   001962  0012               	return		;funcret
  4941   001964                     __end_ofi2_abs:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function i2___awmod *****************
  4945 ;; Defined at:
  4946 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  dividend        2    0[COMRAM] int 
  4949 ;;  divisor         2    2[COMRAM] int 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  sign            1    5[COMRAM] unsigned char 
  4952 ;;  counter         1    4[COMRAM] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  2    0[COMRAM] int 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4962 ;;      Params:         4       0       0       0       0       0       0
  4963 ;;      Locals:         2       0       0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0
  4965 ;;      Totals:         6       0       0       0       0       0       0
  4966 ;;Total ram usage:        6 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		i2_vfpfcnvrt
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text32
  4976   0014B8                     __ptext32:
  4977                           	callstack 0
  4978   0014B8                     i2___awmod:
  4979                           	callstack 17
  4980   0014B8  0E00               	movlw	0
  4981   0014BA  6E06               	movwf	i2___awmod@sign^0,c
  4982   0014BC  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  4983   0014BE  EF65  F00A         	goto	i2u131_40
  4984   0014C2  EF63  F00A         	goto	i2u131_41
  4985   0014C6                     i2u131_41:
  4986   0014C6  EF6B  F00A         	goto	i2l1969
  4987   0014CA                     i2u131_40:
  4988   0014CA  6C01               	negf	i2___awmod@dividend^0,c
  4989   0014CC  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4990   0014CE  B0D8               	btfsc	status,0,c
  4991   0014D0  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4992   0014D2  0E01               	movlw	1
  4993   0014D4  6E06               	movwf	i2___awmod@sign^0,c
  4994   0014D6                     i2l1969:
  4995   0014D6  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  4996   0014D8  EF72  F00A         	goto	i2u132_40
  4997   0014DC  EF70  F00A         	goto	i2u132_41
  4998   0014E0                     i2u132_41:
  4999   0014E0  EF76  F00A         	goto	i2l1973
  5000   0014E4                     i2u132_40:
  5001   0014E4  6C03               	negf	i2___awmod@divisor^0,c
  5002   0014E6  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5003   0014E8  B0D8               	btfsc	status,0,c
  5004   0014EA  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5005   0014EC                     i2l1973:
  5006   0014EC  5003               	movf	i2___awmod@divisor^0,w,c
  5007   0014EE  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5008   0014F0  B4D8               	btfsc	status,2,c
  5009   0014F2  EF7D  F00A         	goto	i2u133_41
  5010   0014F6  EF7F  F00A         	goto	i2u133_40
  5011   0014FA                     i2u133_41:
  5012   0014FA  EFA3  F00A         	goto	i2l1989
  5013   0014FE                     i2u133_40:
  5014   0014FE  0E01               	movlw	1
  5015   001500  6E05               	movwf	i2___awmod@counter^0,c
  5016   001502  EF87  F00A         	goto	i2l1979
  5017   001506                     i2l1977:
  5018   001506  90D8               	bcf	status,0,c
  5019   001508  3603               	rlcf	i2___awmod@divisor^0,f,c
  5020   00150A  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5021   00150C  2A05               	incf	i2___awmod@counter^0,f,c
  5022   00150E                     i2l1979:
  5023   00150E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5024   001510  EF8C  F00A         	goto	i2u134_41
  5025   001514  EF8E  F00A         	goto	i2u134_40
  5026   001518                     i2u134_41:
  5027   001518  EF83  F00A         	goto	i2l1977
  5028   00151C                     i2u134_40:
  5029   00151C                     i2l1981:
  5030   00151C  5003               	movf	i2___awmod@divisor^0,w,c
  5031   00151E  5C01               	subwf	i2___awmod@dividend^0,w,c
  5032   001520  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5033   001522  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5034   001524  A0D8               	btfss	status,0,c
  5035   001526  EF97  F00A         	goto	i2u135_41
  5036   00152A  EF99  F00A         	goto	i2u135_40
  5037   00152E                     i2u135_41:
  5038   00152E  EF9D  F00A         	goto	i2l1985
  5039   001532                     i2u135_40:
  5040   001532  5003               	movf	i2___awmod@divisor^0,w,c
  5041   001534  5E01               	subwf	i2___awmod@dividend^0,f,c
  5042   001536  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5043   001538  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5044   00153A                     i2l1985:
  5045   00153A  90D8               	bcf	status,0,c
  5046   00153C  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5047   00153E  3203               	rrcf	i2___awmod@divisor^0,f,c
  5048   001540  2E05               	decfsz	i2___awmod@counter^0,f,c
  5049   001542  EF8E  F00A         	goto	i2l1981
  5050   001546                     i2l1989:
  5051   001546  5006               	movf	i2___awmod@sign^0,w,c
  5052   001548  B4D8               	btfsc	status,2,c
  5053   00154A  EFA9  F00A         	goto	i2u136_41
  5054   00154E  EFAB  F00A         	goto	i2u136_40
  5055   001552                     i2u136_41:
  5056   001552  EFAF  F00A         	goto	i2l1993
  5057   001556                     i2u136_40:
  5058   001556  6C01               	negf	i2___awmod@dividend^0,c
  5059   001558  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5060   00155A  B0D8               	btfsc	status,0,c
  5061   00155C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5062   00155E                     i2l1993:
  5063   00155E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5064   001562  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5065   001566  0012               	return		;funcret
  5066   001568                     __end_ofi2___awmod:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function i2___awdiv *****************
  5070 ;; Defined at:
  5071 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  dividend        2    0[COMRAM] int 
  5074 ;;  divisor         2    2[COMRAM] int 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  quotient        2    6[COMRAM] int 
  5077 ;;  sign            1    5[COMRAM] unsigned char 
  5078 ;;  counter         1    4[COMRAM] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2    0[COMRAM] int 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5088 ;;      Params:         4       0       0       0       0       0       0
  5089 ;;      Locals:         4       0       0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0
  5091 ;;      Totals:         8       0       0       0       0       0       0
  5092 ;;Total ram usage:        8 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		i2_vfpfcnvrt
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text33
  5102   00111C                     __ptext33:
  5103                           	callstack 0
  5104   00111C                     i2___awdiv:
  5105                           	callstack 17
  5106   00111C  0E00               	movlw	0
  5107   00111E  6E06               	movwf	i2___awdiv@sign^0,c
  5108   001120  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  5109   001122  EF97  F008         	goto	i2u125_40
  5110   001126  EF95  F008         	goto	i2u125_41
  5111   00112A                     i2u125_41:
  5112   00112A  EF9D  F008         	goto	i2l1925
  5113   00112E                     i2u125_40:
  5114   00112E  6C03               	negf	i2___awdiv@divisor^0,c
  5115   001130  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  5116   001132  B0D8               	btfsc	status,0,c
  5117   001134  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  5118   001136  0E01               	movlw	1
  5119   001138  6E06               	movwf	i2___awdiv@sign^0,c
  5120   00113A                     i2l1925:
  5121   00113A  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  5122   00113C  EFA4  F008         	goto	i2u126_40
  5123   001140  EFA2  F008         	goto	i2u126_41
  5124   001144                     i2u126_41:
  5125   001144  EFAA  F008         	goto	i2l1931
  5126   001148                     i2u126_40:
  5127   001148  6C01               	negf	i2___awdiv@dividend^0,c
  5128   00114A  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  5129   00114C  B0D8               	btfsc	status,0,c
  5130   00114E  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  5131   001150  0E01               	movlw	1
  5132   001152  1A06               	xorwf	i2___awdiv@sign^0,f,c
  5133   001154                     i2l1931:
  5134   001154  0E00               	movlw	0
  5135   001156  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  5136   001158  0E00               	movlw	0
  5137   00115A  6E07               	movwf	i2___awdiv@quotient^0,c
  5138   00115C  5003               	movf	i2___awdiv@divisor^0,w,c
  5139   00115E  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  5140   001160  B4D8               	btfsc	status,2,c
  5141   001162  EFB5  F008         	goto	i2u127_41
  5142   001166  EFB7  F008         	goto	i2u127_40
  5143   00116A                     i2u127_41:
  5144   00116A  EFDF  F008         	goto	i2l1953
  5145   00116E                     i2u127_40:
  5146   00116E  0E01               	movlw	1
  5147   001170  6E05               	movwf	i2___awdiv@counter^0,c
  5148   001172  EFBF  F008         	goto	i2l1939
  5149   001176                     i2l1937:
  5150   001176  90D8               	bcf	status,0,c
  5151   001178  3603               	rlcf	i2___awdiv@divisor^0,f,c
  5152   00117A  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  5153   00117C  2A05               	incf	i2___awdiv@counter^0,f,c
  5154   00117E                     i2l1939:
  5155   00117E  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  5156   001180  EFC4  F008         	goto	i2u128_41
  5157   001184  EFC6  F008         	goto	i2u128_40
  5158   001188                     i2u128_41:
  5159   001188  EFBB  F008         	goto	i2l1937
  5160   00118C                     i2u128_40:
  5161   00118C                     i2l1941:
  5162   00118C  90D8               	bcf	status,0,c
  5163   00118E  3607               	rlcf	i2___awdiv@quotient^0,f,c
  5164   001190  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  5165   001192  5003               	movf	i2___awdiv@divisor^0,w,c
  5166   001194  5C01               	subwf	i2___awdiv@dividend^0,w,c
  5167   001196  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5168   001198  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  5169   00119A  A0D8               	btfss	status,0,c
  5170   00119C  EFD2  F008         	goto	i2u129_41
  5171   0011A0  EFD4  F008         	goto	i2u129_40
  5172   0011A4                     i2u129_41:
  5173   0011A4  EFD9  F008         	goto	i2l1949
  5174   0011A8                     i2u129_40:
  5175   0011A8  5003               	movf	i2___awdiv@divisor^0,w,c
  5176   0011AA  5E01               	subwf	i2___awdiv@dividend^0,f,c
  5177   0011AC  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  5178   0011AE  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  5179   0011B0  8007               	bsf	i2___awdiv@quotient^0,0,c
  5180   0011B2                     i2l1949:
  5181   0011B2  90D8               	bcf	status,0,c
  5182   0011B4  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  5183   0011B6  3203               	rrcf	i2___awdiv@divisor^0,f,c
  5184   0011B8  2E05               	decfsz	i2___awdiv@counter^0,f,c
  5185   0011BA  EFC6  F008         	goto	i2l1941
  5186   0011BE                     i2l1953:
  5187   0011BE  5006               	movf	i2___awdiv@sign^0,w,c
  5188   0011C0  B4D8               	btfsc	status,2,c
  5189   0011C2  EFE5  F008         	goto	i2u130_41
  5190   0011C6  EFE7  F008         	goto	i2u130_40
  5191   0011CA                     i2u130_41:
  5192   0011CA  EFEB  F008         	goto	i2l1957
  5193   0011CE                     i2u130_40:
  5194   0011CE  6C07               	negf	i2___awdiv@quotient^0,c
  5195   0011D0  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  5196   0011D2  B0D8               	btfsc	status,0,c
  5197   0011D4  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  5198   0011D6                     i2l1957:
  5199   0011D6  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  5200   0011DA  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  5201   0011DE  0012               	return		;funcret
  5202   0011E0                     __end_ofi2___awdiv:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function i2_UART_Write_Text *****************
  5206 ;; Defined at:
  5207 ;;		line 46 in file "setting_hardaware/uart.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  text            2    1[COMRAM] PTR unsigned char 
  5210 ;;		 -> str(200), 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  i               2    3[COMRAM] int 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5222 ;;      Params:         2       0       0       0       0       0       0
  5223 ;;      Locals:         2       0       0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0
  5225 ;;      Totals:         4       0       0       0       0       0       0
  5226 ;;Total ram usage:        4 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 1
  5229 ;; This function calls:
  5230 ;;		i2_UART_Write
  5231 ;; This function is called by:
  5232 ;;		_Hi_ISR
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text34
  5237   00178A                     __ptext34:
  5238                           	callstack 0
  5239   00178A                     i2_UART_Write_Text:
  5240                           	callstack 19
  5241   00178A                     
  5242                           ;setting_hardaware/uart.c: 47:     for(int i=0;text[i]!='\0';i++){
  5243   00178A  0E00               	movlw	0
  5244   00178C  6E05               	movwf	(i2UART_Write_Text@i+1)^0,c
  5245   00178E  0E00               	movlw	0
  5246   001790  6E04               	movwf	i2UART_Write_Text@i^0,c
  5247   001792  EFD6  F00B         	goto	i2l2283
  5248   001796                     i2l2279:
  5249                           
  5250                           ;setting_hardaware/uart.c: 48:         UART_Write(text[i]);
  5251   001796  5004               	movf	i2UART_Write_Text@i^0,w,c
  5252   001798  2402               	addwf	i2UART_Write_Text@text^0,w,c
  5253   00179A  6ED9               	movwf	fsr2l,c
  5254   00179C  5005               	movf	(i2UART_Write_Text@i+1)^0,w,c
  5255   00179E  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  5256   0017A0  6EDA               	movwf	fsr2h,c
  5257   0017A2  50DF               	movf	indf2,w,c
  5258   0017A4  ECFC  F00C         	call	i2_UART_Write
  5259   0017A8                     
  5260                           ;setting_hardaware/uart.c: 49:     }
  5261   0017A8  4A04               	infsnz	i2UART_Write_Text@i^0,f,c
  5262   0017AA  2A05               	incf	(i2UART_Write_Text@i+1)^0,f,c
  5263   0017AC                     i2l2283:
  5264   0017AC  5004               	movf	i2UART_Write_Text@i^0,w,c
  5265   0017AE  2402               	addwf	i2UART_Write_Text@text^0,w,c
  5266   0017B0  6ED9               	movwf	fsr2l,c
  5267   0017B2  5005               	movf	(i2UART_Write_Text@i+1)^0,w,c
  5268   0017B4  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  5269   0017B6  6EDA               	movwf	fsr2h,c
  5270   0017B8  50DF               	movf	indf2,w,c
  5271   0017BA  A4D8               	btfss	status,2,c
  5272   0017BC  EFE2  F00B         	goto	i2u167_41
  5273   0017C0  EFE4  F00B         	goto	i2u167_40
  5274   0017C4                     i2u167_41:
  5275   0017C4  EFCB  F00B         	goto	i2l2279
  5276   0017C8                     i2u167_40:
  5277   0017C8  0012               	return		;funcret
  5278   0017CA                     __end_ofi2_UART_Write_Text:
  5279                           	callstack 0
  5280                           
  5281 ;; *************** function i2_UART_Write *****************
  5282 ;; Defined at:
  5283 ;;		line 39 in file "setting_hardaware/uart.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  data            1    wreg     unsigned char 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  data            1    0[COMRAM] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5297 ;;      Params:         0       0       0       0       0       0       0
  5298 ;;      Locals:         1       0       0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0
  5300 ;;      Totals:         1       0       0       0       0       0       0
  5301 ;;Total ram usage:        1 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		i2_UART_Write_Text
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text35
  5311   0019F8                     __ptext35:
  5312                           	callstack 0
  5313   0019F8                     i2_UART_Write:
  5314                           	callstack 19
  5315                           
  5316                           ;incstack = 0
  5317                           ;i2UART_Write@data stored from wreg
  5318   0019F8  6E01               	movwf	i2UART_Write@data^0,c
  5319   0019FA                     i2l191:
  5320   0019FA  A2AC               	btfss	172,1,c	;volatile
  5321   0019FC  EF02  F00D         	goto	i2u158_41
  5322   001A00  EF04  F00D         	goto	i2u158_40
  5323   001A04                     i2u158_41:
  5324   001A04  EFFD  F00C         	goto	i2l191
  5325   001A08                     i2u158_40:
  5326   001A08                     
  5327                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  5328   001A08  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  5329   001A0C  0012               	return		;funcret
  5330   001A0E                     __end_ofi2_UART_Write:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function i2_ClearBuffer *****************
  5334 ;; Defined at:
  5335 ;;		line 52 in file "setting_hardaware/uart.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  i               2    0[COMRAM] int 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5349 ;;      Params:         0       0       0       0       0       0       0
  5350 ;;      Locals:         2       0       0       0       0       0       0
  5351 ;;      Temps:          0       0       0       0       0       0       0
  5352 ;;      Totals:         2       0       0       0       0       0       0
  5353 ;;Total ram usage:        2 bytes
  5354 ;; Hardware stack levels used: 1
  5355 ;; This function calls:
  5356 ;;		Nothing
  5357 ;; This function is called by:
  5358 ;;		_Hi_ISR
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text36
  5363   0017CA                     __ptext36:
  5364                           	callstack 0
  5365   0017CA                     i2_ClearBuffer:
  5366                           	callstack 20
  5367   0017CA                     
  5368                           ;setting_hardaware/uart.c: 53:     for(int i = 0; i < 10 ; i++)
  5369   0017CA  0E00               	movlw	0
  5370   0017CC  6E02               	movwf	(i2ClearBuffer@i+1)^0,c
  5371   0017CE  0E00               	movlw	0
  5372   0017D0  6E01               	movwf	i2ClearBuffer@i^0,c
  5373   0017D2                     i2l2291:
  5374                           
  5375                           ;setting_hardaware/uart.c: 54:         mystring[i] = '\0';
  5376   0017D2  0E00               	movlw	low _mystring
  5377   0017D4  2401               	addwf	i2ClearBuffer@i^0,w,c
  5378   0017D6  6ED9               	movwf	fsr2l,c
  5379   0017D8  0E02               	movlw	high _mystring
  5380   0017DA  2002               	addwfc	(i2ClearBuffer@i+1)^0,w,c
  5381   0017DC  6EDA               	movwf	fsr2h,c
  5382   0017DE  6ADF               	clrf	indf2,c
  5383   0017E0  4A01               	infsnz	i2ClearBuffer@i^0,f,c
  5384   0017E2  2A02               	incf	(i2ClearBuffer@i+1)^0,f,c
  5385   0017E4  BE02               	btfsc	(i2ClearBuffer@i+1)^0,7,c
  5386   0017E6  EFFE  F00B         	goto	i2u168_41
  5387   0017EA  5002               	movf	(i2ClearBuffer@i+1)^0,w,c
  5388   0017EC  E109               	bnz	i2u168_40
  5389   0017EE  0E0A               	movlw	10
  5390   0017F0  5C01               	subwf	i2ClearBuffer@i^0,w,c
  5391   0017F2  A0D8               	btfss	status,0,c
  5392   0017F4  EFFE  F00B         	goto	i2u168_41
  5393   0017F8  EF00  F00C         	goto	i2u168_40
  5394   0017FC                     i2u168_41:
  5395   0017FC  EFE9  F00B         	goto	i2l2291
  5396   001800                     i2u168_40:
  5397   001800                     
  5398                           ;setting_hardaware/uart.c: 55:     lenStr = 0;
  5399   001800  0E00               	movlw	0
  5400   001802  6E41               	movwf	(_lenStr+1)^0,c
  5401   001804  0E00               	movlw	0
  5402   001806  6E40               	movwf	_lenStr^0,c
  5403   001808  0012               	return		;funcret
  5404   00180A                     __end_ofi2_ClearBuffer:
  5405                           	callstack 0
  5406                           
  5407                           	psect	rparam
  5408   000000                     
  5409                           	psect	temp
  5410   000048                     btemp:
  5411                           	callstack 0
  5412   000048                     	ds	1
  5413   000000                     int$flags	set	btemp
  5414   000000                     wtemp8	set	btemp+1
  5415   000000                     ttemp5	set	btemp+1
  5416   000000                     ttemp6	set	btemp+4
  5417   000000                     ttemp7	set	btemp+8
  5418                           
  5419                           	psect	idloc
  5420                           
  5421                           ;Config register IDLOC0 @ 0x200000
  5422                           ;	unspecified, using default values
  5423   200000                     	org	2097152
  5424   200000  FF                 	db	255
  5425                           
  5426                           ;Config register IDLOC1 @ 0x200001
  5427                           ;	unspecified, using default values
  5428   200001                     	org	2097153
  5429   200001  FF                 	db	255
  5430                           
  5431                           ;Config register IDLOC2 @ 0x200002
  5432                           ;	unspecified, using default values
  5433   200002                     	org	2097154
  5434   200002  FF                 	db	255
  5435                           
  5436                           ;Config register IDLOC3 @ 0x200003
  5437                           ;	unspecified, using default values
  5438   200003                     	org	2097155
  5439   200003  FF                 	db	255
  5440                           
  5441                           ;Config register IDLOC4 @ 0x200004
  5442                           ;	unspecified, using default values
  5443   200004                     	org	2097156
  5444   200004  FF                 	db	255
  5445                           
  5446                           ;Config register IDLOC5 @ 0x200005
  5447                           ;	unspecified, using default values
  5448   200005                     	org	2097157
  5449   200005  FF                 	db	255
  5450                           
  5451                           ;Config register IDLOC6 @ 0x200006
  5452                           ;	unspecified, using default values
  5453   200006                     	org	2097158
  5454   200006  FF                 	db	255
  5455                           
  5456                           ;Config register IDLOC7 @ 0x200007
  5457                           ;	unspecified, using default values
  5458   200007                     	org	2097159
  5459   200007  FF                 	db	255
  5460                           
  5461                           	psect	config
  5462                           
  5463                           ; Padding undefined space
  5464   300000                     	org	3145728
  5465   300000  FF                 	db	255
  5466                           
  5467                           ;Config register CONFIG1H @ 0x300001
  5468                           ;	Oscillator Selection bits
  5469                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5470                           ;	Fail-Safe Clock Monitor Enable bit
  5471                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5472                           ;	Internal/External Oscillator Switchover bit
  5473                           ;	IESO = ON, Oscillator Switchover mode enabled
  5474   300001                     	org	3145729
  5475   300001  88                 	db	136
  5476                           
  5477                           ;Config register CONFIG2L @ 0x300002
  5478                           ;	Power-up Timer Enable bit
  5479                           ;	PWRT = OFF, PWRT disabled
  5480                           ;	Brown-out Reset Enable bits
  5481                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5482                           ;	Brown Out Reset Voltage bits
  5483                           ;	BORV = 3, Minimum setting
  5484   300002                     	org	3145730
  5485   300002  1F                 	db	31
  5486                           
  5487                           ;Config register CONFIG2H @ 0x300003
  5488                           ;	Watchdog Timer Enable bit
  5489                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5490                           ;	Watchdog Timer Postscale Select bits
  5491                           ;	WDTPS = 1, 1:1
  5492   300003                     	org	3145731
  5493   300003  00                 	db	0
  5494                           
  5495                           ; Padding undefined space
  5496   300004                     	org	3145732
  5497   300004  FF                 	db	255
  5498                           
  5499                           ;Config register CONFIG3H @ 0x300005
  5500                           ;	CCP2 MUX bit
  5501                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5502                           ;	PORTB A/D Enable bit
  5503                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5504                           ;	Low-Power Timer1 Oscillator Enable bit
  5505                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5506                           ;	MCLR Pin Enable bit
  5507                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5508   300005                     	org	3145733
  5509   300005  83                 	db	131
  5510                           
  5511                           ;Config register CONFIG4L @ 0x300006
  5512                           ;	Stack Full/Underflow Reset Enable bit
  5513                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5514                           ;	Single-Supply ICSP Enable bit
  5515                           ;	LVP = OFF, Single-Supply ICSP disabled
  5516                           ;	Extended Instruction Set Enable bit
  5517                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5518                           ;	Background Debugger Enable bit
  5519                           ;	DEBUG = 0x1, unprogrammed default
  5520   300006                     	org	3145734
  5521   300006  81                 	db	129
  5522                           
  5523                           ; Padding undefined space
  5524   300007                     	org	3145735
  5525   300007  FF                 	db	255
  5526                           
  5527                           ;Config register CONFIG5L @ 0x300008
  5528                           ;	Code Protection bit
  5529                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5530                           ;	Code Protection bit
  5531                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5532                           ;	Code Protection bit
  5533                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5534                           ;	Code Protection bit
  5535                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5536   300008                     	org	3145736
  5537   300008  0F                 	db	15
  5538                           
  5539                           ;Config register CONFIG5H @ 0x300009
  5540                           ;	Boot Block Code Protection bit
  5541                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5542                           ;	Data EEPROM Code Protection bit
  5543                           ;	CPD = OFF, Data EEPROM not code-protected
  5544   300009                     	org	3145737
  5545   300009  C0                 	db	192
  5546                           
  5547                           ;Config register CONFIG6L @ 0x30000A
  5548                           ;	Write Protection bit
  5549                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5550                           ;	Write Protection bit
  5551                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5552                           ;	Write Protection bit
  5553                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5554                           ;	Write Protection bit
  5555                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5556   30000A                     	org	3145738
  5557   30000A  0F                 	db	15
  5558                           
  5559                           ;Config register CONFIG6H @ 0x30000B
  5560                           ;	Configuration Register Write Protection bit
  5561                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5562                           ;	Boot Block Write Protection bit
  5563                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5564                           ;	Data EEPROM Write Protection bit
  5565                           ;	WRTD = OFF, Data EEPROM not write-protected
  5566   30000B                     	org	3145739
  5567   30000B  E0                 	db	224
  5568                           
  5569                           ;Config register CONFIG7L @ 0x30000C
  5570                           ;	Table Read Protection bit
  5571                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5572                           ;	Table Read Protection bit
  5573                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5574                           ;	Table Read Protection bit
  5575                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5576                           ;	Table Read Protection bit
  5577                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5578   30000C                     	org	3145740
  5579   30000C  0F                 	db	15
  5580                           
  5581                           ;Config register CONFIG7H @ 0x30000D
  5582                           ;	Boot Block Table Read Protection bit
  5583                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5584   30000D                     	org	3145741
  5585   30000D  40                 	db	64
  5586                           tosu	equ	0xFFF
  5587                           tosh	equ	0xFFE
  5588                           tosl	equ	0xFFD
  5589                           stkptr	equ	0xFFC
  5590                           pclatu	equ	0xFFB
  5591                           pclath	equ	0xFFA
  5592                           pcl	equ	0xFF9
  5593                           tblptru	equ	0xFF8
  5594                           tblptrh	equ	0xFF7
  5595                           tblptrl	equ	0xFF6
  5596                           tablat	equ	0xFF5
  5597                           prodh	equ	0xFF4
  5598                           prodl	equ	0xFF3
  5599                           indf0	equ	0xFEF
  5600                           postinc0	equ	0xFEE
  5601                           postdec0	equ	0xFED
  5602                           preinc0	equ	0xFEC
  5603                           plusw0	equ	0xFEB
  5604                           fsr0h	equ	0xFEA
  5605                           fsr0l	equ	0xFE9
  5606                           wreg	equ	0xFE8
  5607                           indf1	equ	0xFE7
  5608                           postinc1	equ	0xFE6
  5609                           postdec1	equ	0xFE5
  5610                           preinc1	equ	0xFE4
  5611                           plusw1	equ	0xFE3
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           bsr	equ	0xFE0
  5615                           indf2	equ	0xFDF
  5616                           postinc2	equ	0xFDE
  5617                           postdec2	equ	0xFDD
  5618                           preinc2	equ	0xFDC
  5619                           plusw2	equ	0xFDB
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8

Data Sizes:
    Strings     241
    Constant    0
    Data        2
    BSS         461
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     63      71
    BANK0           128     47     102
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1525$buffer	PTR unsigned char  size(2) Largest target is 0

    S1525$source	PTR const unsigned char  size(2) Largest target is 0

    sp__GetString	PTR unsigned char  size(2) Largest target is 200
		 -> mystring(BANK2[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 46
		 -> STR_1(CODE[10]), STR_10(CODE[31]), STR_11(CODE[43]), STR_12(CODE[8]), 
		 -> STR_13(CODE[10]), STR_3(CODE[32]), STR_4(CODE[38]), STR_5(CODE[43]), 
		 -> STR_6(CODE[15]), STR_7(CODE[46]), STR_8(CODE[43]), STR_9(CODE[15]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 200
		 -> str(BANK1[200]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_2(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->i1___awmod

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_abs
    i2_abs->i2___awmod
    i2_UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    _main->_add_score
    _add_score->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _UART_Write_Text->_UART_Write
    _SYSTEM_Initialize->_CCP1_Initialize

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11012
                                             45 BANK0      2     2      0
                        _ClearBuffer
                  _SYSTEM_Initialize
                    _UART_Write_Text
                          _add_score
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _add_score                                            2     2      0    7804
                                             43 BANK0      2     2      0
                        _ClearBuffer
                    _UART_Write_Text
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     3      3    1793
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    4596
                                             25 BANK0     18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3973
                                             21 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3479
                                             10 BANK0     11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     723
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      4     2      2    1316
                                              1 BANK0      4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Lo_ISR                                               5     5      0     370
                                             58 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (8) _MyusartRead                                          1     1      0     370
                                             57 COMRAM     1     1      0
                       i1_UART_Write
                          i1___awmod
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            6     2      4     348
                                             51 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1_UART_Write                                         1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Hi_ISR                                              8     8      0    2620
                                             43 COMRAM     8     8      0
                      i2_ClearBuffer
                  i2_UART_Write_Text
                          i2_sprintf
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (11) i2_strcpy                                            6     3      3     177
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (11) i2_sprintf                                          20    15      5    2185
                                             25 COMRAM    18    13      5
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (12) i2_vfprintf                                          4     1      3    1934
                                             21 COMRAM     4     1      3
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) i2_vfpfcnvrt                                        11     8      3    1734
                                             10 COMRAM    11     8      3
                          i2___awdiv
                          i2___awmod
                              i2_abs
                            i2_fputc
 ---------------------------------------------------------------------------------
 (14) i2_fputc                                             8     5      3     330
                                              0 COMRAM     8     5      3
                            i2_putch
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (14) i2_abs                                               4     2      2      92
                                              6 COMRAM     4     2      2
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) i2_UART_Write_Text                                   4     2      2     190
                                              1 COMRAM     4     2      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (12) i2_UART_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_ClearBuffer                                       2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write
   _add_score
     _ClearBuffer
     _UART_Write_Text
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
     _strcpy
   _strcpy

 _Lo_ISR (ROOT)
   _MyusartRead
     i1_UART_Write
     i1___awmod

 _Hi_ISR (ROOT)
   i2_ClearBuffer
   i2_UART_Write_Text
     i2_UART_Write
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2___awdiv
         i2___awmod
         i2_abs
           i2___awmod (ARG)
         i2_fputc
           i2_putch
   i2_strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2F      66       5       79.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3F      47       1       56.3%
BITBIGSFRhlhhhh     1E      0       0      17        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhlhllh      B      0       0      24        0.0%
BITBIGSFRl           A      0       0      27        0.0%
BITBIGSFRhlhllh      8      0       0      23        0.0%
BITBIGSFRhlhllh      7      0       0      25        0.0%
BITBIGSFRhlhhhl      5      0       0      20        0.0%
BITBIGSFRhll         5      0       0      26        0.0%
BITBIGSFRhlhllh      4      0       0      22        0.0%
BITBIGSFRhlhhhh      4      0       0      19        0.0%
BITBIGSFRhlhhhh      2      0       0      18        0.0%
BITBIGSFRhlhlh       1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     23D      28        0.0%
DATA                 0      0     23D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 10 16:52:59 2024

                           l55 1054                             l95 19E0                             _d1 00AC  
                           _d2 00AA                             _d3 00A8                             _d4 00A6  
                           _d5 0044                             _d6 0042                   ___awdiv@sign 00BC  
                           bsr 0FE0        __end_of_CCP1_Initialize 1682                            l200 16C4  
                          l125 1A16                            l205 1748                            l118 1680  
                          l152 19CA                            l155 19B4                            l191 198A  
                          l194 199C                            l188 1984                            l454 111A  
                          l467 1406                            l901 1788                            l952 192E  
                          l945 1706                            l939 0C58                            l964 129A  
                          l949 1916                            l981 1882                            l975 1A1A  
                          _PR2 0FCB                            _abs 18FA                            _str 0100  
                 ___awmod@sign 00BC                            wreg 0FE8            __end_ofi2_vfpfcnvrt 0E14  
                         ?_abs 00BD                           l2123 163C                           l2125 163E  
                         l2127 166E                           l2081 1850                           l2079 1848  
                         l2601 139E                           l2611 13DA                           l2603 13A6  
                         l2701 1682                           l2613 13E0                           l2605 13AE  
                         l2703 1690                           l2551 1076                           l2543 1056  
                         l2607 13BC                           l2615 13E6                           l2631 1228  
                         l2623 11E0                           l2721 1740                           l2705 16A2  
                         l2561 10AA                           l2553 1084                           l2545 105C  
                         l2617 13F6                           l2609 13D2                           l2633 125A  
                         l2625 11F2                           l2641 0AC4                           l2801 1028  
                         l2811 19B6                           l2715 1712                           l2707 16A8  
                         l2571 10E4                           l2563 10B2                           l2555 108C  
                         l2547 106A                           l2619 13FE                           l2627 1202  
                         l2651 0B16                           l2643 0AD0                           l2731 1778  
                         l2723 174A                           l2803 1042                           l2741 1A0E  
                         l2813 19BA                           l2717 1720                           l2709 1708  
                         l2581 110A                           l2573 10EC                           l2565 10BA  
                         l2557 1090                           l2549 1072                           l2629 120C  
                         l2661 0B9E                           l2653 0B2E                           l2645 0AD4  
                         l2637 0A98                           l2725 1758                           l2805 1050  
                         l2901 08EE                           l2821 06F4                           l2735 19CC  
                         l2751 19AC                           l2743 199E                           l2815 19BE  
                         l2719 1724                           l2583 1112                           l2575 10EE  
                         l2567 10C8                           l2559 1098                           l2591 136A  
                         l1863 18FA                           l2671 0BF4                           l2663 0BB2  
                         l2655 0B38                           l2647 0ADE                           l2639 0ABC  
                         l2727 1760                           l2911 0922                           l2903 08F6  
                         l2831 072E                           l2823 06F8                           l2737 19CE  
                         l2753 19AE                           l2745 19A4                           l2761 1974  
                         l2817 19C2                           l2577 10F4                           l2569 10CE  
                         l2593 1372                           l1865 190A                           l2673 0C0E  
                         l2665 0BC2                           l2657 0B50                           l2649 0AFA  
                         l2681 0C36                           l2729 1768                           l2921 095A  
                         l2913 0924                           l2905 08FE                           l2841 0764  
                         l2833 073C                           l2825 070A                           l2739 19D2  
                         l2747 19A8                           l2771 197E                           l2763 1976  
                         l2755 1964                           l2819 19C6                           l2579 10FA  
                         l2595 1376                           l2587 1356                           l2667 0BD2  
                         l2675 0C12                           l2659 0B82                           l2691 16C6  
                         l2923 096C                           l2931 098E                           l2915 0936  
                         l2907 0906                           l2851 07B8                           l2843 076E  
                         l2835 0740                           l2827 0718                           l2749 19AA  
                         l2773 1980                           l2765 1978                           l2757 196E  
                         l2597 1384                           l2589 135C                           l2669 0BE2  
                         l2677 0C28                           l2693 16CE                           l2781 0F94  
                         l2941 09DC                           l2933 099C                           l2925 097E  
                         l2909 0908                           l2917 0938                           l2861 07F8  
                         l2853 07C6                           l2845 0784                           l2837 0752  
                         l2829 071C                           l2775 1982                           l2767 197A  
                         l2759 1972                           l2687 198A                           l2599 138C  
                         l2695 16E0                           l2783 0F9C                           l2951 0A18  
                         l2943 09E0                           l2935 09B0                           l2927 0986  
                         l2919 0946                           l2871 082C                           l2863 0800  
                         l2855 07DC                           l2847 0794                           l2839 0760  
                         l2769 197C                           l2689 1998                           l2697 16FC  
                         l2785 0FA8                           l2793 0FC0                           l2777 0F84  
                         l2961 0A48                           l2953 0A2A                           l2937 09C2  
                         l2945 09E4                           l2929 098A                           l2881 086A  
                         l2873 082E                           l2865 0808                           l2857 07EA  
                         l2849 07A2                           l2787 0FB4                           l2795 1006  
                         l2779 0F88                           l2971 0A8C                           l2963 0A5C  
                         l2955 0A32                           l2947 09F2                           l2939 09D4  
                         l2891 08C2                           l2883 087A                           l2875 0840  
                         l2867 0810                           l2859 07EE                           l2797 1016  
                         l2965 0A6E                           l2957 0A36                           l2949 0A06  
                         l2893 08D0                           l2885 0888                           l2869 0812  
                         l2877 0842                           l2799 1024                           l2967 0A80  
                         l2959 0A3A                           l2895 08D4                           l2887 089E  
                         l2879 0856                           l2993 0FD8                           l2969 0A88  
                         l2897 08DE                           l2889 08AC                           l2899 08E6  
                         _ADFM 7E07                           STR_1 06DD                           STR_2 06EF  
                         STR_3 0680                           STR_4 065A                           STR_5 062F  
                         STR_6 06BF                           STR_7 0601                           STR_8 062F  
                         STR_9 06CE                           _CREN 7D5C                           u2000 136A  
                         u2001 1366                           u2010 1384                           u2011 1380  
                         u2020 139E                           u1140 190A                           u2100 0ABC  
                         u2021 139A                           u1141 1906                           u2101 0AB8  
                         u2030 13BC                           u2110 0AFA                           u2031 13B8  
                         u2111 0AF6                           u2200 1998                           u2040 13D2  
                         u2120 0B16                           u2201 1994                           u2041 13CE  
                         u2121 0B12                           u2050 13F6                           u2130 0B4C  
                         u2210 16FC                           u2051 13F2                           u2131 0B46  
                         u2211 16F8                           u2220 16C4                           u2060 11F2  
                         u2140 0B4E                           u2300 097E                           u2221 16C0  
                         u2061 11EE                           u2301 097A                           u2230 1740  
                         u2070 1202                           u2150 0BB2                           u2310 099C  
                         u2231 173C                           u2071 11FE                           u2151 0BAE  
                         u2311 0998                           _LATC 0F8B                           u2080 1228  
                         u2160 0BC2                           u2400 0A5C                           u2320 09B0  
                         u2240 0784                           u2081 1224                           u2161 0BBE  
                         u2401 0A58                           u2321 09AC                           u2241 0780  
                         u2090 125A                           u2170 0BD2                           u2410 0A6E  
                         u2330 09C2                           u2250 0856                           u2091 1256  
                         u2171 0BCE                           u2411 0A6A                           u2331 09BE  
                         u2251 0852                           u2180 0BE2                           u1540 1882  
                         u2420 0A80                           u2340 09D4                           u2260 086A  
                         u2181 0BDE                           u1541 187E                           u2421 0A7C  
                         u2341 09D0                           u2261 0866                           u2190 0C24  
                         u2350 09F2                           u2270 0946                           u2191 0C20  
                         u2351 09EE                           u2271 0942                           u2360 0A06  
                         u2280 095A                           u2361 0A02                           u2281 0956  
                         u2370 0A18                           u2290 096C                           u2371 0A14  
                         u2291 0968                           u2380 0A2A                           u2381 0A26  
                         u2437 081E                           u2390 0A48                           u2391 0A44  
                         u2447 0836                           u2457 0914                           u2467 092C  
                         u1940 106A                           u2477 1676                           u1941 1066  
                         u1950 1084                           u1951 1080                           u1960 10AA  
                         u1961 10A6                           u1970 10C8                           u1971 10C4  
                         u1980 10E4                           u1981 10E0                           u1990 110A  
                         u1991 1106                           _RCIF 7CF5                           i2l78 0F60  
                         abs@a 00BD                           _dbuf 0080                           _main 06F4  
                         _down 00AE                           _prec 00A2                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0048                           _stop 00B0  
                         start 006C                __end_ofi2_fputc 1356                __end_ofi2_putch 1A1E  
                 ___param_bank 0000        __end_of_UART_Write_Text 16C6                          ??_abs 00BF  
             ?_UART_Initialize 0001                     i2_vfprintf 180A  __end_of_OSCILLATOR_Initialize 19B6  
                        ?_main 0001                __end_of___awdiv 111C                          STR_10 06A0  
                        STR_11 062F                          STR_12 06E7                          STR_13 06DD  
                        STR_14 06EF                __end_of___awmod 1408                ___awdiv@divisor 00B9  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l210 15E4                          i1l220 0054                          i1l191 19E4  
                        i2l200 17C8                          i1l194 19F6                          i2l205 1808  
                        i1l467 14B6                          i2l191 19FA                          i2l194 1A0C  
                        i2l454 11DE                          i2l467 1566                          i2l901 18BE  
                        i2l952 1962                          i2l945 1846                          i2l939 0E12  
                        i2l964 1354                ___awdiv@counter 00BB                          i2l949 194A  
                        i2l981 18F8                          i2l975 1A1C                          _RCREG 0FAE  
                 vfpfcnvrt@fmt 00C2                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TRISC 0F94                          _TRISD 0F95                          i2_abs 1930  
                        _TXREG 0FAD                    ?_UART_Write 0001                 i1___awmod@sign 0039  
                        _flags 00B6                          _fputc 11E0                          _ready 00A4  
                        _score 00B4                          _width 00A0                          _state 00B2  
                        _putch 1A1A                    _ClearBuffer 1708                          tablat 0FF5  
                        ttemp5 0049                          ttemp6 004C                          ttemp7 0050  
                        status 0FD8                          wtemp8 0049                __end_of_sprintf 178A  
             __end_ofi2_strcpy 18FA                __initialization 15E6                   __end_of_main 0A98  
                  i2_vfpfcnvrt 0C5A                  i2vfpfcnvrt@ap 000D                  i2vfpfcnvrt@cp 0010  
                i2vfpfcnvrt@fp 000B                         ??_main 00E4               ?_CCP1_Initialize 0001  
                __activetblptr 0002                     i2sprintf@f 0020                     i2sprintf@s 001A  
                       ?i2_abs 0007                         _ADCON1 0FC1                         ?_fputc 00B7  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _CCPR1L 0FBE  
             ___awdiv@dividend 00B7                         ?_putch 0001                         i1l2201 1496  
                       i1l2203 14A6                         i1l2205 14AE                         i1l2165 19E4  
                       i1l2181 1426                         i1l2173 1408                         i1l2167 19F2  
                       i1l2191 145E                         i1l2183 1434                         i1l2175 140C  
                       i1l2271 15C4                         i1l2263 1568                         i1l2193 146C  
                       i1l2185 143C                         i1l2177 141A                         i1l2273 15C8  
                       i1l2265 1596                         i1l2513 002E                         i1l2195 1482  
                       i1l2187 144E                         i1l2179 1422                         i1l2267 15A8  
                       i1l2515 003C                         i1l2197 148A                         i1l2189 1456  
                       i1l2269 15B2                         i1l2517 004A                         i1l2199 1490  
                       i1l2519 0050                         i2l2001 129C                         i2l2011 1314  
                       i2l2003 12AC                         i2l2005 12BC                         i2l2007 12C6  
                       i2l2031 0C7C                         i2l2009 12E2                         i2l2041 0CBC  
                       i2l2033 0C84                         i2l2051 0D42                         i2l2043 0CD8  
                       i2l2035 0C92                         i2l2211 1812                         i2l2061 0DA0  
                       i2l2053 0D5E                         i2l2045 0CF0                         i2l2037 0C96  
                       i2l2029 0C5A                         i2l2213 1822                         i2l2301 1890  
                       i2l2063 0DB2                         i2l2055 0D70                         i2l2047 0CFA  
                       i2l2039 0CA0                         i2l2215 183E                         i2l2303 1898  
                       i2l2311 18C0                         i2l2065 0DCC                         i2l2057 0D80  
                       i2l2049 0D12                         i2l2073 0DF0                         i2l2209 180A  
                       i2l2305 18A0                         i2l2313 18C8                         i2l2171 1A08  
                       i2l2059 0D90                         i2l2067 0DCE                         i2l2307 18B0  
                       i2l2069 0DE4                         i2l2501 0F08                         i2l2511 0F56  
                       i2l2503 0F10                         i2l2169 19FA                         i2l2281 17A8  
                       i2l2505 0F18                         i2l2291 17D2                         i2l2283 17AC  
                       i2l2507 0F24                         i2l2293 17E0                         i2l2285 17CA  
                       i2l2277 178A                         i2l2509 0F54                         i2l2295 17E4  
                       i2l2279 1796                         i2l2471 0E56                         i2l2297 1800  
                       i2l1921 112E                         i2l2481 0E96                         i2l2473 0E66  
                       i2l1931 1154                         i2l1923 1136                         i2l2299 1884  
                       i2l2491 0ED0                         i2l2483 0EAE                         i2l2475 0E72  
                       i2l2467 0E36                         i2l1941 118C                         i2l1933 115C  
                       i2l1925 113A                         i2l1917 111C                         i2l2493 0EEC  
                       i2l2485 0EBA                         i2l2477 0E86                         i2l2469 0E44  
                       i2l1951 11B8                         i2l1943 1192                         i2l1935 116E  
                       i2l1927 1148                         i2l1919 1120                         i2l2495 0EF0  
                       i2l2487 0EBE                         i2l2479 0E92                         i2l1945 11A8  
                       i2l1937 1176                         i2l1953 11BE                         i2l1929 1150  
                       i2l1961 14B8                         i2l2497 0EF8                         i2l2489 0EC8  
                       i2l1955 11CE                         i2l1947 11B0                         i2l1939 117E  
                       i2l1971 14E4                         i2l1963 14BC                         i2l2499 0F00  
                       i2l1957 11D6                         i2l1949 11B2                         i2l1981 151C  
                       i2l1973 14EC                         i2l1965 14CA                         i2l1991 1556  
                       i2l1983 1532                         i2l1975 14FE                         i2l1967 14D2  
                       i2l1993 155E                         i2l1985 153A                         i2l1977 1506  
                       i2l1969 14D6                         i2l1987 1540                         i2l1979 150E  
                       i2l1989 1546                         i2l1997 1930                         i2l1999 193E  
                    ??i2_fputc 0004                  vfpfcnvrt@done 00C5                      ??i2_putch 0001  
                       i2abs@a 0007                         _Hi_ISR 0008                         _Lo_ISR 0018  
                 vfprintf@cfmt 00CF                  i2vfprintf@fmt 0017                      ??___awdiv 00BB  
                    ??___awmod 00BB               ?_UART_Write_Text 00B8                    ?i2_vfprintf 0016  
                       _lenStr 0040                         _button 0046                         clear_0 1604  
                       clear_1 1610                         clear_2 161C               ___awdiv@quotient 00BD  
              ___awmod@divisor 00B9                         isa$std 0001                ___awmod@counter 00BB  
                       _strcpy 1848                 i2___awdiv@sign 0006              __end_ofi1___awmod 14B8  
                       fputc@c 00B7                   __pdataCOMRAM 0046              __end_ofi2___awdiv 11E0  
            __end_ofi2___awmod 1568                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                         putch@c 0001  
             __end_of_vfprintf 1708                 i2___awmod@sign 0006                      ??_sprintf 00D5  
        __end_ofi2_ClearBuffer 180A              _SYSTEM_Initialize 19B6                     __accesstop 0080  
      __end_of__initialization 162E             ?_SYSTEM_Initialize 0001                  ___rparam_used 0001  
            __end_ofi2_sprintf 18C0                  __end_ofi2_abs 1964                  ?i1_UART_Write 0001  
               __pcstackCOMRAM 0001            ??_SYSTEM_Initialize 00B8                  __end_of_fputc 129C  
                __end_of_putch 1A1C                        ??i2_abs 0009                  ??_MyusartRead 003A  
                ?i2_UART_Write 0001                 i2vfpfcnvrt@fmt 000C                      ?i2_strcpy 0001  
                      ??_fputc 00BA      __end_of_SYSTEM_Initialize 19CC                        ??_putch 00B7  
                   __pbssBANK0 0080                     __pbssBANK1 0100                     __pbssBANK2 0200  
                  i2sprintf@ap 001F                        ?_Hi_ISR 0001                    i2strcpy@src 0003  
             i2UART_Write@data 0001                        ?_Lo_ISR 0001                 ??i1_UART_Write 0034  
           i2UART_Write_Text@i 0004                        ?_strcpy 00B7              __end_of_add_score 1056  
               ??i2_UART_Write 0001                   ??_UART_Write 00B7                     ??i2_strcpy 0004  
                 ?_ClearBuffer 0001                        i2_fputc 129C            __end_of_MyusartRead 15E6  
                      i2_putch 1A1C                        __Hparam 0000                        __Lparam 0000  
                      ___awdiv 1056                        ___awmod 1356             __end_of_UART_Write 199E  
                    ?_vfprintf 00CC                 i2vfprintf@cfmt 0019                   __psmallconst 0600  
                 ?i2_vfpfcnvrt 000B                        __pcinit 15E6                        __ramtop 0600  
                      __ptext0 06F4                        __ptext1 0F84                        __ptext2 1848  
                      __ptext3 174A                        __ptext4 16C6                        __ptext5 0A98  
                      __ptext6 11E0                        __ptext7 1A1A                        __ptext8 18FA  
                      __ptext9 1356          _OSCILLATOR_Initialize 199E                      _T2CONbits 0FCA  
             ___awmod@dividend 00B7                        _sprintf 174A                 __pintcode_body 0E14  
         end_of_initialization 162E                        fputc@fp 00B9                  __Lmediumconst 0000  
                      int_func 0E14              __end_of_vfpfcnvrt 0C5A                      _RCSTAbits 0FAB  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 00C7                   ??i2_vfprintf 0019  
                   ??_vfprintf 00CF                        strcpy@d 00BB                      _PORTAbits 0F80  
               UART_Write@data 00B7                      _TRISBbits 0F93                      _TRISCbits 0F94  
                  _MyusartRead 1568           __end_ofi1_UART_Write 19F8                      i1___awmod 1408  
                    i2___awdiv 111C                      i2___awmod 14B8             __end_ofi2_vfprintf 1848  
                  _CCP1CONbits 0FBD                      _TXSTAbits 0FAC             i2___awdiv@dividend 0001  
               __end_of_Hi_ISR 0F84                 __end_of_Lo_ISR 006C           __end_ofi2_UART_Write 1A0E  
                    i2_sprintf 1884   __end_of_INTERRUPT_Initialize 1A18                    vfpfcnvrt@ap 00C3  
                  vfpfcnvrt@cp 00C6                    vfpfcnvrt@fp 00C1                    _BAUDCONbits 0FB8  
                __pidataCOMRAM 1A18                 _ADC_Initialize 19CC                      i2fputc@fp 0003  
       ?_OSCILLATOR_Initialize 0001                 __end_of_strcpy 1884            start_initialization 15E6  
           i2___awdiv@quotient 0007                    __end_of_abs 1930                     ?i1___awmod 0034  
                   ?i2___awdiv 0001                     ?i2___awmod 0001                   i2vfpfcnvrt@c 0015  
                 ClearBuffer@i 00B7                      i2strcpy@d 0005              ??_UART_Initialize 00B7  
                     ??_Hi_ISR 002C                       ??_Lo_ISR 003B                    vfprintf@fmt 00CD  
                 i2vfprintf@ap 0018                i2vfpfcnvrt@done 000F                   i2vfprintf@fp 0016  
                   ?i2_sprintf 001A         __end_of_ADC_Initialize 19E2             i1___awmod@dividend 0034  
                     ??_strcpy 00BA                   i2sprintf@fmt 001C                    __pbssCOMRAM 0040  
            i2_UART_Write_Text 178A                  __pcstackBANK0 00B7             ?i2_UART_Write_Text 0002  
                    _add_score 0F84                       ?i2_fputc 0001                   i2strcpy@dest 0001  
                     ?i2_putch 0001          i2UART_Write_Text@text 0002            ??i2_UART_Write_Text 0004  
            ??_CCP1_Initialize 00B7                      __pintcode 0008                       ?___awdiv 00B7  
                     ?___awmod 00B7                ?_ADC_Initialize 0001                    __pintcodelo 0018  
    __end_ofi2_UART_Write_Text 17CA                    __smallconst 0600                    ??i1___awmod 0038  
                  ??i2___awdiv 0005                     ?_add_score 0001                    ??i2___awmod 0005  
                     ?_sprintf 00D0              ??_UART_Write_Text 00BA           _INTERRUPT_Initialize 1A0E  
                i2_ClearBuffer 17CA                       _LATDbits 0F8C                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       i1u160_20 1434                       i1u160_21 1430  
                     i1u161_20 144E                       i1u161_21 144A                       i1u162_20 146C  
                     i1u162_21 1468                       i1u163_20 1482                       i1u163_21 147E  
                     i1u164_20 14A6                       i1u164_21 14A2                       i1u157_20 19F2  
                     i1u157_21 19EE                       i1u166_20 1596                       i1u166_21 1592  
                     i1u159_20 141A                       i1u159_21 1416                       i1u192_20 003C  
                     i1u192_21 0038                       i1u193_20 004A                       i1u193_21 0046  
                     i2u130_40 11CE                       i2u130_41 11CA                       i2u131_40 14CA  
                     i2u131_41 14C6                       i2u132_40 14E4                       i2u140_40 12E2  
                     i2u132_41 14E0                       i2u140_41 12DE                       i2u125_40 112E  
                     i2u133_40 14FE                       i2u141_40 1314                       i2u125_41 112A  
                     i2u133_41 14FA                       i2u141_41 1310                       i2u126_40 1148  
                     i2u134_40 151C                       i2u150_40 0D80                       i2u126_41 1144  
                     i2u134_41 1518                       i2u150_41 0D7C                       i2u127_40 116E  
                     i2u135_40 1532                       i2u151_40 0D90                       i2u127_41 116A  
                     i2u135_41 152E                       i2u151_41 0D8C                       i2u128_40 118C  
                     i2u136_40 1556                       i2u152_40 0DA0                       i2u144_40 0C7C  
                     i2u128_41 1188                       i2u136_41 1552                       i2u152_41 0D9C  
                     i2u144_41 0C78                       i2u129_40 11A8                       i2u137_40 193E  
                     i2u153_40 0DE0                       i2u145_40 0CBC                       i2u129_41 11A4  
                     i2u137_41 193A                       i2u153_41 0DDC                       i2u145_41 0CB8  
                     i2u138_40 12AC                       i2u146_40 0CD8                       i2u138_41 12A8  
                     i2u146_41 0CD4                       i2u139_40 12BC                       i2u147_40 0D0E  
                     i2u139_41 12B8                       i2u147_41 0D08                       i2u148_40 0D10  
                     i2u149_40 0D70                       i2u165_40 183E                       i2u149_41 0D6C  
                     i2u165_41 183A                       i2u158_40 1A08                       i2u190_40 0E56  
                     i2u158_41 1A04                       i2u190_41 0E52                       i2u167_40 17C8  
                     i2u191_40 0EEC                       i2u167_41 17C4                       i2u191_41 0EE8  
                     i2u168_40 1800                       i2u168_41 17FC                       i2u169_40 18F8  
                     i2u169_41 18F4                       _PIR1bits 0F9E                       i2u189_40 0E44  
                     i2u189_41 0E40                   i1_UART_Write 19E2                       _RCONbits 0FD0  
                  ??i2_sprintf 001F                      _vfpfcnvrt 0A98                     _ADCON0bits 0FC2  
                   _ADCON2bits 0FC0              i2___awdiv@divisor 0003                   ?_MyusartRead 0001  
            i2___awdiv@counter 0005                   i2_UART_Write 19F8                       i2_strcpy 18C0  
                   vfpfcnvrt@c 00CB                       i2fputc@c 0001          ?_INTERRUPT_Initialize 0001  
               ?i2_ClearBuffer 0001             i2___awmod@dividend 0001               i1UART_Write@data 0034  
               i2ClearBuffer@i 0001                       __Hrparam 0000                     vfprintf@ap 00CE  
                     __Lrparam 0000                     vfprintf@fp 00CC              i1___awmod@divisor 0036  
      ??_OSCILLATOR_Initialize 00B7              i1___awmod@counter 0038                     ?_vfpfcnvrt 00C1  
           i2vfpfcnvrt@convarg 0011                _UART_Initialize 1964                     sprintf@fmt 00D2  
                     __ptext10 1056                       __ptext11 1682                       __ptext12 1986  
                     __ptext21 1568                       __ptext13 1708                       __ptext30 1A1C  
                     __ptext22 1408                       __ptext14 19B6                       __ptext31 1930  
                     __ptext23 19E2                       __ptext15 1964                       __ptext32 14B8  
                     __ptext16 199E                       __ptext33 111C                       __ptext25 18C0  
                     __ptext17 1A0E                       __ptext34 178A                       __ptext26 1884  
                     __ptext18 163C                       __ptext35 19F8                       __ptext27 180A  
                     __ptext19 19CC                       __ptext36 17CA                       __ptext28 0C5A  
                     __ptext29 129C                    ??_add_score 00E2                     strcpy@dest 00B7  
          UART_Write_Text@text 00B8                       isa$xinst 0000                       int$flags 0048  
                     _vfprintf 16C6                       _mystring 0200              i2___awmod@divisor 0003  
            i2___awmod@counter 0005                     _INTCONbits 0FF2                _CCP1_Initialize 163C  
       ??_INTERRUPT_Initialize 00B7                ??i2_ClearBuffer 0001                  ??_ClearBuffer 00B7  
                     intlevel1 0000                       intlevel2 0000                      sprintf@ap 00D5  
                    strcpy@src 00B9               ??_ADC_Initialize 00B7        __end_of_UART_Initialize 1986  
                ??i2_vfpfcnvrt 000E                    ??_vfpfcnvrt 00C4                _UART_Write_Text 1682  
                     sprintf@f 00D6                       sprintf@s 00D0                     _UART_Write 1986  
             UART_Write_Text@i 00BA            __end_of_ClearBuffer 174A  
